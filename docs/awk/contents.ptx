.xx "" "MATADD" "- Adds two full matrices together" ""
.xx "" "VECADD" "- Adds two vectors together" ""
.xx "" "ASFUL" "- Assembles a full system matrix" ""
.xx "" "ASSYM" "- Assembles a symmetric system matrix" ""
.xx "" "ASLMS" "- Assembles a system lumped mass matrix" ""
.xx "" "ASUSM" "- Assembles an unsymmetric system matrix" ""
.xx "right-hand side" "IASRHS" "- Assembles the imaginary part of a complex" ""
.xx "complex system matrix" "IASSYM" "- Assembles the imaginary part of a symmetric" ""
.xx "complex system matrix" "IASUSM" "- Assembles the imaginary part of a unsymmetric" ""
.xx "right-hand side" "RASRHS" "- Assembles the real part of a complex" ""
.xx "complex system matrix" "RASSYM" "- Assembles the real part of a symmetric" ""
.xx "complex system matrix" "RASUSM" "- Assembles the real part of a unsymmetric" ""
.xx "" "ASRHS" "- Assembles the right-hand side of a system" ""
.xx "difference for an element" "FREDIF" "- Calcalutes of maximum freedom number" ""
.xx "quadrilaterals" "LINQUA" "- Calculates a unit length on the boundaries of" ""
.xx "triangles" "LINTRI" "- Calculates a unit length on the boundaries of" ""
.xx "" "SURBRK" "- Calculates a unit of area on boundary faces" ""
.xx "" "BNDWTH" "- Calculates semi-bandwith of system matrix" ""
.xx "hexahedral elements" "DCSBRK" "- Calculates the direction cosines for" ""
.xx "quadrilateral elements" "DCSQUA" "- Calculates the direction cosines for" ""
.xx "triangular elements" "DCSTRI" "- Calculates the direction cosines for" ""
.xx "" "CHOBAK" "- Choleski backward substitution" ""
.xx "matrices" "CHORDN" "- Choleski decomposition into triangular" ""
.xx "" "CHOFWD" "- Choleski forward substitution" ""
.xx "" "CSYSUB" "- Complex forward and backward substitution" ""
.xx "triangular matrices" "CSYRDN" "- Complex symmetric decomposition into" ""
.xx "" "NORM" "- Computes the L*sub[2] norm of a vector" ""
.xx "element" "ELGEOM" "- Construction of element geometry array for an" ""
.xx "matrix assembly" "DIRECT" "- Construction of steering vector for system" ""
.xx "" "SELECT" "- Constructs an element solution vector" ""
.xx "" "ADUNIT" "- Control the advisory message unit number" ""
.xx "" "ERUNIT" "- Control the error message unit number" ""
.xx "" "ERRMES" "- Controls processing of error conditions" ""
.xx "" "MATCOP" "- Copies one full matrix into another" ""
.xx "" "VECCOP" "- Copies one vector into another" ""
.xx "QL transformations" "QLVEC" "- Eigenvalue and eigenvector extraction using" ""
.xx "transformations" "QLVAL" "- Eigenvalue extraction using QL" ""
.xx "" "QBRK8" "- Eight-point quadrature rule for cube" ""
.xx "region" "QWDG8" "- Eight-point quadrature rule for wedge-shaped" ""
.xx "boundary node list" "SIDENO" "- Forms list of element and side numbers from" ""
.xx "" "FORMNF" "- Forms nodal freedom array" ""
.xx "hexahedrals" "BQBRK" "- Forms quadrature rule for line integration on" ""
.xx "quadrilaterals" "BQQUA" "- Forms quadrature rule for line integration on" ""
.xx "triangles" "BQTRI" "- Forms quadrature rule for line integration on" ""
.xx "" "SHAPFN" "- Forms shape function matrix *comp[N]" ""
.xx "plane elasticity" "B2C2" "- Forms strain-displacement matrix for 2-D" ""
.xx "elasticity" "B3C3" "- Forms strain-displacement matrix for 3-D" ""
.xx "axisymmetric elasticity" "B2P2" "- Forms strain-displacement matrix for" ""
.xx "bending" "DPLT" "- Forms stress-strain matrix for 2-D plate" ""
.xx "" "DISO" "- Forms stress-strain matrix for 3-D elasticity" ""
.xx "elasticity" "DAXI" "- Forms stress-strain matrix for axisymmetric" ""
.xx "" "DPSN" "- Forms stress-strain matrix for plane strain" ""
.xx "" "DPSS" "- Forms stress-strain matrix for plane stress" ""
.xx "" "DYAD" "- Forms the dyad of two vectors" ""
.xx "" "SCAPRD" "- Forms the scalar product of two vectors" ""
.xx "" "MATRAN" "- Forms the transpose of a full matrix" ""
.xx "region" "QQUA4" "- Four-point quadrature rule for rectangular" ""
.xx "region" "QTET4" "- Four-point quadrature rule for tetrahedral" ""
.xx "region" "QTRI4" "- Four-point quadrature rule for triangular" ""
.xx "triangles" "GAURDN" "- Gaussian decomposition into upper and lower" ""
.xx "" "GAUSUB" "- Gaussian forward and backward substitution" ""
.xx "" "ASFULG" "- General assembly of a full system matrix" ""
.xx "" "ASSYMG" "- General assembly of a symmetric system matrix" ""
.xx "matrix" "ASUSMG" "- General assembly of an unsymmetric system" ""
.xx "" "HOUSE" "- Householder reduction to tridiagonal form" ""
.xx "" "CMTNUL" "- Initialises a complex matrix to zero" ""
.xx "" "CVCNUL" "- Initialises a complex vector to zero" ""
.xx "" "MATNUL" "- Initialises a full matrix to zeros" ""
.xx "" "MATIDN" "- Initialises a matrix to the identity matrix" ""
.xx "" "VECNUL" "- Initialises a vector to zeros" ""
.xx "" "MATINV" "- Inverts a full matrix (for limited sizes)" ""
.xx "" "MATVEC" "- Multiplies a full matrix by a vector" ""
.xx "vector" "MVSYB" "- Multiplies a symmetric band matrix by a" ""
.xx "vector" "MVUSB" "- Multiplies an unsymmetric band matrix by a" ""
.xx "" "MATMUL" "- Multiplies two matrices together" ""
.xx "region" "QQUA9" "- Nine-point quadrature rule for rectangular" ""
.xx "" "VECMAT" "- Pre-multiplies a full matrix by a vector" ""
.xx "vector" "VMSYB" "- Pre-multiplies a symmetric band matrix by a" ""
.xx "a vector" "VMUSB" "- Pre-multiplies an unsymmetric band matrix by" ""
.xx "" "CPRTMT" "- Prints a complex matrix in a standard form" ""
.xx "form" "CPRTVL" "- Prints a complex nodal values in a standard" ""
.xx "" "CPRTVC" "- Prints a complex vector in a standard form" ""
.xx "" "PRTMAT" "- Prints a matrix in standard format" ""
.xx "" "PRTVEC" "- Prints a vector in standard format" ""
.xx "format" "PRTTOP" "- Prints the element topology in a standard" ""
.xx "" "PRTGEO" "- Prints the mesh geometry in a standard format" ""
.xx "" "PRTVAL" "- Prints the nodal values in a standard format" ""
.xx "rotations" "JACO" "- Reduction to tridiagonal form by Jacobi" ""
.xx "region" "QTRI7" "- Seven-point quadrature rule for triangular" ""
.xx "" "BRK8" "- Shape functions for eight-noded brick element" ""
.xx "membrane element" "QUAM8" "- Shape functions for eight-noded quadrilateral" ""
.xx "element" "WDG15" "- Shape functions for fifteen-noded wedge" ""
.xx "" "ROD4" "- Shape functions for four-noded line element" ""
.xx "membrane element" "QUAM4" "- Shape functions for four-noded quadrilateral" ""
.xx "element" "TET4" "- Shape functions for four-noded tetrahedral" ""
.xx "membrane element" "TRIM6" "- Shape functions for six-noded triangular" ""
.xx "" "WDG6" "- Shape functions for six-noded wedge element" ""
.xx "element" "TET10" "- Shape functions for ten-noded tetrahedral" ""
.xx "membrane element" "TRIM10" "- Shape functions for ten-noded triangular" ""
.xx "element" "BRK32" "- Shape functions for thirty-two-noded brick" ""
.xx "" "ROD3" "- Shape functions for three-noded line element" ""
.xx "membrane element" "TRIM3" "- Shape functions for three-noded triangular" ""
.xx "quadrilateral membrane element" "QUAM12" "- Shape functions for twelve-noded" ""
.xx "element" "BRK20" "- Shape functions for twenty-noded brick" ""
.xx "element" "TET20" "- Shape functions for twenty-noded tetrahedral" ""
.xx "" "ROD2" "- Shape functions for two-noded line element" ""
.xx "" "QBRK6" "- Six-point quadrature rule for cube" ""
.xx "region" "QWDG6" "- Six-point quadrature rule for wedge-shaped" ""
.xx "" "CSYSOL" "- Solves a complex symmetric linear system" ""
.xx "Choleski reduction" "CHOSOL" "- Solves a system of linear equations using" ""
.xx "Gaussian reduction" "GAUSOL" "- Solves a system of linear equations using" ""
.xx "" "MATSUB" "- Subtracts one full matrix from another" ""
.xx "" "VECSUB" "- Subtracts one vector from another" ""
.xx "" "QLIN3" "- Three-point, one-dimensional quadrature" ""
.xx "" "QLIN2" "- Two-point, one-dimensional quadrature" ""
.xx "" "UPDATE" "- Updates solution vector with system solution" ""
.xx "" "B2C2   - Forms strain-displacement matrix for" "2-D plane elasticity" ""
.xx "" "DPLT   - Forms stress-strain matrix for" "2-D plate bending" ""
.xx "" "B3C3   - Forms strain-displacement matrix for" "3-D elasticity" ""
.xx "" "DISO   - Forms stress-strain matrix for" "3-D elasticity" ""
.xx "" "MATADD -" "Adds two full matrices together" ""
.xx "" "VECADD -" "Adds two vectors together" ""
.xx "number" "" "ADUNIT - Control the advisory message unit" ""
.xx "" "ADUNIT - Control the" "advisory message unit number" ""
.xx "" "SURBRK - Calculates a unit of" "area on boundary faces" ""
.xx "" "ELGEOM - Construction of element geometry" "array for an element" ""
.xx "" "FORMNF - Forms nodal freedom" "array" ""
.xx "" "" "ASFUL  - Assembles a full system matrix" ""
.xx "matrix" "" "ASFULG - General assembly of a full system" ""
.xx "" "" "ASLMS  - Assembles a system lumped mass matrix" ""
.xx "system" "" "ASRHS  - Assembles the right-hand side of a" ""
.xx "" "ASFUL  -" "Assembles a full system matrix" ""
.xx "" "ASSYM  -" "Assembles a symmetric system matrix" ""
.xx "" "ASLMS  -" "Assembles a system lumped mass matrix" ""
.xx "" "ASUSM  -" "Assembles an unsymmetric system matrix" ""
.xx "right-hand side" "IASRHS -" "Assembles the imaginary part of a complex" ""
.xx "complex system matrix" "IASSYM -" "Assembles the imaginary part of a symmetric" ""
.xx "complex system matrix" "IASUSM -" "Assembles the imaginary part of a unsymmetric" ""
.xx "side" "RASRHS -" "Assembles the real part of a complex right-hand" ""
.xx "system matrix" "RASSYM -" "Assembles the real part of a symmetric complex" ""
.xx "complex system matrix" "RASUSM -" "Assembles the real part of a unsymmetric" ""
.xx "" "ASRHS  -" "Assembles the right-hand side of a system" ""
.xx "" "of steering vector for system matrix" "assembly" "DIRECT - Construction"
.xx "" "ASFULG - General" "assembly of a full system matrix" ""
.xx "" "ASSYMG - General" "assembly of a symmetric system matrix" ""
.xx "" "ASUSMG - General" "assembly of an unsymmetric system matrix" ""
.xx "" "" "ASSYM  - Assembles a symmetric system matrix" ""
.xx "matrix" "" "ASSYMG - General assembly of a symmetric system" ""
.xx "" "" "ASUSM  - Assembles an unsymmetric system matrix" ""
.xx "system matrix" "" "ASUSMG - General assembly of an unsymmetric" ""
.xx "" "B2P2   - Forms strain-displacement matrix for" "axisymmetric elasticity" ""
.xx "" "DAXI   - Forms stress-strain matrix for" "axisymmetric elasticity" ""
.xx "2-D plane elasticity" "" "B2C2   - Forms strain-displacement matrix for" ""
.xx "axisymmetric elasticity" "" "B2P2   - Forms strain-displacement matrix for" ""
.xx "3-D elasticity" "" "B3C3   - Forms strain-displacement matrix for" ""
.xx "" "CHOBAK - Choleski" "backward substitution" ""
.xx "" "CSYSUB - Complex forward and" "backward substitution" ""
.xx "" "GAUSUB - Gaussian forward and" "backward substitution" ""
.xx "" "MVSYB  - Multiplies a symmetric" "band matrix by a vector" ""
.xx "" "MVUSB  - Multiplies an unsymmetric" "band matrix by a vector" ""
.xx "" "VMSYB  - Pre-multiplies a symmetric" "band matrix by a vector" ""
.xx "" "VMUSB  - Pre-multiplies an unsymmetric" "band matrix by a vector" ""
.xx "" "- Forms stress-strain matrix for 2-D plate" "bending" "DPLT  "
.xx "matrix" "" "BNDWTH - Calculates semi-bandwith of system" ""
.xx "" "LINQUA - Calculates a unit length on the" "boundaries of quadrilaterals" ""
.xx "" "LINTRI - Calculates a unit length on the" "boundaries of triangles" ""
.xx "" "SURBRK - Calculates a unit of area on" "boundary faces" ""
.xx "" "- Forms list of element and side numbers from" "boundary node list" "SIDENO"
.xx "integration on hexahedrals" "" "BQBRK  - Forms quadrature rule for line" ""
.xx "integration on quadrilaterals" "" "BQQUA  - Forms quadrature rule for line" ""
.xx "integration on triangles" "" "BQTRI  - Forms quadrature rule for line" ""
.xx "" "BRK20  - Shape functions for twenty-noded" "brick element" ""
.xx "" "BRK32  - Shape functions for thirty-two-noded" "brick element" ""
.xx "" "BRK8   - Shape functions for eight-noded" "brick element" ""
.xx "element" "" "BRK20  - Shape functions for twenty-noded brick" ""
.xx "brick element" "" "BRK32  - Shape functions for thirty-two-noded" ""
.xx "element" "" "BRK8   - Shape functions for eight-noded brick" ""
.xx "for an element" "FREDIF -" "Calcalutes of maximum freedom number difference" ""
.xx "quadrilaterals" "LINQUA -" "Calculates a unit length on the boundaries of" ""
.xx "triangles" "LINTRI -" "Calculates a unit length on the boundaries of" ""
.xx "" "SURBRK -" "Calculates a unit of area on boundary faces" ""
.xx "" "BNDWTH -" "Calculates semi-bandwith of system matrix" ""
.xx "elements" "DCSBRK -" "Calculates the direction cosines for hexahedral" ""
.xx "quadrilateral elements" "DCSQUA -" "Calculates the direction cosines for" ""
.xx "elements" "DCSTRI -" "Calculates the direction cosines for triangular" ""
.xx "" "" "CHOBAK - Choleski backward substitution" ""
.xx "" "" "CHOFWD - Choleski forward substitution" ""
.xx "" "CHOBAK -" "Choleski backward substitution" ""
.xx "" "CHORDN -" "Choleski decomposition into triangular matrices" ""
.xx "" "CHOFWD -" "Choleski forward substitution" ""
.xx "" "- Solves a system of linear equations using" "Choleski reduction" "CHOSOL"
.xx "matrices" "" "CHORDN - Choleski decomposition into triangular" ""
.xx "using Choleski reduction" "" "CHOSOL - Solves a system of linear equations" ""
.xx "" "" "CMTNUL - Initialises a complex matrix to zero" ""
.xx "" "CSYSUB -" "Complex forward and backward substitution" ""
.xx "" "CPRTMT - Prints a" "complex matrix in a standard form" ""
.xx "" "CMTNUL - Initialises a" "complex matrix to zero" ""
.xx "" "CPRTVL - Prints a" "complex nodal values in a standard form" ""
.xx "" "IASRHS - Assembles the imaginary part of a" "complex right-hand side" ""
.xx "" "RASRHS - Assembles the real part of a" "complex right-hand side" ""
.xx "matrices" "CSYRDN -" "Complex symmetric decomposition into triangular" ""
.xx "" "CSYSOL - Solves a" "complex symmetric linear system" ""
.xx "" "- Assembles the imaginary part of a symmetric" "complex system matrix" "IASSYM"
.xx "" "- Assembles the imaginary part of a unsymmetric" "complex system matrix" "IASUSM"
.xx "" "RASSYM - Assembles the real part of a symmetric" "complex system matrix" ""
.xx "" "- Assembles the real part of a unsymmetric" "complex system matrix" "RASUSM"
.xx "" "CPRTVC - Prints a" "complex vector in a standard form" ""
.xx "" "CVCNUL - Initialises a" "complex vector to zero" ""
.xx "" "SHAPFN - Forms shape function matrix" "*comp[N]" ""
.xx "" "NORM   -" "Computes the L*sub[2] norm of a vector" ""
.xx "" "ERRMES - Controls processing of error" "conditions" ""
.xx "element" "ELGEOM -" "Construction of element geometry array for an" ""
.xx "matrix assembly" "DIRECT -" "Construction of steering vector for system" ""
.xx "" "SELECT -" "Constructs an element solution vector" ""
.xx "" "ADUNIT -" "Control the advisory message unit number" ""
.xx "" "ERUNIT -" "Control the error message unit number" ""
.xx "" "ERRMES -" "Controls processing of error conditions" ""
.xx "" "MATCOP -" "Copies one full matrix into another" ""
.xx "" "VECCOP -" "Copies one vector into another" ""
.xx "" "DCSBRK - Calculates the direction" "cosines for hexahedral elements" ""
.xx "" "DCSQUA - Calculates the direction" "cosines for quadrilateral elements" ""
.xx "" "DCSTRI - Calculates the direction" "cosines for triangular elements" ""
.xx "form" "" "CPRTMT - Prints a complex matrix in a standard" ""
.xx "form" "" "CPRTVC - Prints a complex vector in a standard" ""
.xx "standard form" "" "CPRTVL - Prints a complex nodal values in a" ""
.xx "triangular matrices" "" "CSYRDN - Complex symmetric decomposition into" ""
.xx "system" "" "CSYSOL - Solves a complex symmetric linear" ""
.xx "substitution" "" "CSYSUB - Complex forward and backward" ""
.xx "" "QBRK6  - Six-point quadrature rule for" "cube" ""
.xx "" "QBRK8  - Eight-point quadrature rule for" "cube" ""
.xx "" "" "CVCNUL - Initialises a complex vector to zero" ""
.xx "axisymmetric elasticity" "" "DAXI   - Forms stress-strain matrix for" ""
.xx "hexahedral elements" "" "DCSBRK - Calculates the direction cosines for" ""
.xx "quadrilateral elements" "" "DCSQUA - Calculates the direction cosines for" ""
.xx "triangular elements" "" "DCSTRI - Calculates the direction cosines for" ""
.xx "" "CHORDN - Choleski" "decomposition into triangular matrices" ""
.xx "" "CSYRDN - Complex symmetric" "decomposition into triangular matrices" ""
.xx "" "GAURDN - Gaussian" "decomposition into upper and lower triangles" ""
.xx "" "FREDIF - Calcalutes of maximum freedom number" "difference for an element" ""
.xx "system matrix assembly" "" "DIRECT - Construction of steering vector for" ""
.xx "" "DCSBRK - Calculates the" "direction cosines for hexahedral elements" ""
.xx "" "DCSQUA - Calculates the" "direction cosines for quadrilateral elements" ""
.xx "" "DCSTRI - Calculates the" "direction cosines for triangular elements" ""
.xx "elasticity" "" "DISO   - Forms stress-strain matrix for 3-D" ""
.xx "plate bending" "" "DPLT   - Forms stress-strain matrix for 2-D" ""
.xx "strain" "" "DPSN   - Forms stress-strain matrix for plane" ""
.xx "stress" "" "DPSS   - Forms stress-strain matrix for plane" ""
.xx "" "" "DYAD   - Forms the dyad of two vectors" ""
.xx "" "DYAD   - Forms the" "dyad of two vectors" ""
.xx "transformations" "QLVEC  -" "Eigenvalue and eigenvector extraction using QL" ""
.xx "" "QLVAL  -" "Eigenvalue extraction using QL transformations" ""
.xx "" "QLVEC  - Eigenvalue and" "eigenvector extraction using QL transformations" ""
.xx "" "BRK8   - Shape functions for" "eight-noded brick element" ""
.xx "" "QUAM8  - Shape functions for" "eight-noded quadrilateral membrane element" ""
.xx "" "QBRK8  -" "Eight-point quadrature rule for cube" ""
.xx "region" "QWDG8  -" "Eight-point quadrature rule for wedge-shaped" ""
.xx "" "Forms strain-displacement matrix for 2-D plane" "elasticity" "B2C2   -"
.xx "" "strain-displacement matrix for axisymmetric" "elasticity" "B2P2   - Forms"
.xx "" "- Forms strain-displacement matrix for 3-D" "elasticity" "B3C3  "
.xx "" "- Forms stress-strain matrix for axisymmetric" "elasticity" "DAXI  "
.xx "" "DISO   - Forms stress-strain matrix for 3-D" "elasticity" ""
.xx "list" "SIDENO - Forms list of" "element and side numbers from boundary node" ""
.xx "" "BRK20  - Shape functions for twenty-noded brick" "element" ""
.xx "" "- Shape functions for thirty-two-noded brick" "element" "BRK32 "
.xx "" "BRK8   - Shape functions for eight-noded brick" "element" ""
.xx "" "- Construction of element geometry array for an" "element" "ELGEOM"
.xx "" "of maximum freedom number difference for an" "element" "FREDIF - Calcalutes"
.xx "" "ELGEOM - Construction of" "element geometry array for an element" ""
.xx "" "for twelve-noded quadrilateral membrane" "element" "QUAM12 - Shape functions"
.xx "" "functions for four-noded quadrilateral membrane" "element" "QUAM4  - Shape"
.xx "" "for eight-noded quadrilateral membrane" "element" "QUAM8  - Shape functions"
.xx "" "ROD2   - Shape functions for two-noded line" "element" ""
.xx "" "ROD3   - Shape functions for three-noded line" "element" ""
.xx "" "ROD4   - Shape functions for four-noded line" "element" ""
.xx "" "SELECT - Constructs an" "element solution vector" ""
.xx "" "- Shape functions for ten-noded tetrahedral" "element" "TET10 "
.xx "" "- Shape functions for twenty-noded tetrahedral" "element" "TET20 "
.xx "" "- Shape functions for four-noded tetrahedral" "element" "TET4  "
.xx "" "PRTTOP - Prints the" "element topology in a standard format" ""
.xx "" "functions for ten-noded triangular membrane" "element" "TRIM10 - Shape"
.xx "" "functions for three-noded triangular membrane" "element" "TRIM3  - Shape"
.xx "" "functions for six-noded triangular membrane" "element" "TRIM6  - Shape"
.xx "" "- Shape functions for fifteen-noded wedge" "element" "WDG15 "
.xx "" "WDG6   - Shape functions for six-noded wedge" "element" ""
.xx "" "Calculates the direction cosines for hexahedral" "elements" "DCSBRK -"
.xx "" "the direction cosines for quadrilateral" "elements" "DCSQUA - Calculates"
.xx "" "Calculates the direction cosines for triangular" "elements" "DCSTRI -"
.xx "for an element" "" "ELGEOM - Construction of element geometry array" ""
.xx "" "CHOSOL - Solves a system of linear" "equations using Choleski reduction" ""
.xx "" "GAUSOL - Solves a system of linear" "equations using Gaussian reduction" ""
.xx "conditions" "" "ERRMES - Controls processing of error" ""
.xx "" "ERRMES - Controls processing of" "error conditions" ""
.xx "" "ERUNIT - Control the" "error message unit number" ""
.xx "" "" "ERUNIT - Control the error message unit number" ""
.xx "" "QLVAL  - Eigenvalue" "extraction using QL transformations" ""
.xx "" "QLVEC  - Eigenvalue and eigenvector" "extraction using QL transformations" ""
.xx "" "SURBRK - Calculates a unit of area on boundary" "faces" ""
.xx "" "WDG15  - Shape functions for" "fifteen-noded wedge element" ""
.xx "" "MATINV - Inverts a full matrix" "(for limited sizes)" ""
.xx "" "JACO   - Reduction to tridiagonal" "form by Jacobi rotations" ""
.xx "" "CPRTMT - Prints a complex matrix in a standard" "form" ""
.xx "" "CPRTVC - Prints a complex vector in a standard" "form" ""
.xx "" "- Prints a complex nodal values in a standard" "form" "CPRTVL"
.xx "" "HOUSE  - Householder reduction to tridiagonal" "form" ""
.xx "" "PRTGEO - Prints the mesh geometry in a standard" "format" ""
.xx "" "PRTMAT - Prints a matrix in standard" "format" ""
.xx "" "- Prints the element topology in a standard" "format" "PRTTOP"
.xx "" "PRTVAL - Prints the nodal values in a standard" "format" ""
.xx "" "PRTVEC - Prints a vector in standard" "format" ""
.xx "" "" "FORMNF - Forms nodal freedom array" ""
.xx "boundary node list" "SIDENO -" "Forms list of element and side numbers from" ""
.xx "" "FORMNF -" "Forms nodal freedom array" ""
.xx "hexahedrals" "BQBRK  -" "Forms quadrature rule for line integration on" ""
.xx "quadrilaterals" "BQQUA  -" "Forms quadrature rule for line integration on" ""
.xx "triangles" "BQTRI  -" "Forms quadrature rule for line integration on" ""
.xx "" "SHAPFN -" "Forms shape function matrix *comp[N]" ""
.xx "elasticity" "B2C2   -" "Forms strain-displacement matrix for 2-D plane" ""
.xx "elasticity" "B3C3   -" "Forms strain-displacement matrix for 3-D" ""
.xx "axisymmetric elasticity" "B2P2   -" "Forms strain-displacement matrix for" ""
.xx "bending" "DPLT   -" "Forms stress-strain matrix for 2-D plate" ""
.xx "" "DISO   -" "Forms stress-strain matrix for 3-D elasticity" ""
.xx "elasticity" "DAXI   -" "Forms stress-strain matrix for axisymmetric" ""
.xx "" "DPSN   -" "Forms stress-strain matrix for plane strain" ""
.xx "" "DPSS   -" "Forms stress-strain matrix for plane stress" ""
.xx "" "DYAD   -" "Forms the dyad of two vectors" ""
.xx "" "SCAPRD -" "Forms the scalar product of two vectors" ""
.xx "" "MATRAN -" "Forms the transpose of a full matrix" ""
.xx "" "CSYSUB - Complex" "forward and backward substitution" ""
.xx "" "GAUSUB - Gaussian" "forward and backward substitution" ""
.xx "" "CHOFWD - Choleski" "forward substitution" ""
.xx "" "ROD4   - Shape functions for" "four-noded line element" ""
.xx "" "QUAM4  - Shape functions for" "four-noded quadrilateral membrane element" ""
.xx "" "TET4   - Shape functions for" "four-noded tetrahedral element" ""
.xx "region" "QQUA4  -" "Four-point quadrature rule for rectangular" ""
.xx "region" "QTET4  -" "Four-point quadrature rule for tetrahedral" ""
.xx "region" "QTRI4  -" "Four-point quadrature rule for triangular" ""
.xx "difference for an element" "" "FREDIF - Calcalutes of maximum freedom number" ""
.xx "" "FORMNF - Forms nodal" "freedom array" ""
.xx "" "FREDIF - Calcalutes of maximum" "freedom number difference for an element" ""
.xx "" "MATADD - Adds two" "full matrices together" ""
.xx "" "MATVEC - Multiplies a" "full matrix by a vector" ""
.xx "" "VECMAT - Pre-multiplies a" "full matrix by a vector" ""
.xx "" "MATINV - Inverts a" "full matrix (for limited sizes)" ""
.xx "" "MATSUB - Subtracts one" "full matrix from another" ""
.xx "" "MATCOP - Copies one" "full matrix into another" ""
.xx "" "MATRAN - Forms the transpose of a" "full matrix" ""
.xx "" "MATNUL - Initialises a" "full matrix to zeros" ""
.xx "" "ASFUL  - Assembles a" "full system matrix" ""
.xx "" "ASFULG - General assembly of a" "full system matrix" ""
.xx "" "SHAPFN - Forms shape" "function matrix *comp[N]" ""
.xx "" "BRK8   - Shape" "functions for eight-noded brick element" ""
.xx "membrane element" "QUAM8  - Shape" "functions for eight-noded quadrilateral" ""
.xx "" "WDG15  - Shape" "functions for fifteen-noded wedge element" ""
.xx "" "ROD4   - Shape" "functions for four-noded line element" ""
.xx "element" "QUAM4  - Shape" "functions for four-noded quadrilateral membrane" ""
.xx "" "TET4   - Shape" "functions for four-noded tetrahedral element" ""
.xx "element" "TRIM6  - Shape" "functions for six-noded triangular membrane" ""
.xx "" "WDG6   - Shape" "functions for six-noded wedge element" ""
.xx "" "TET10  - Shape" "functions for ten-noded tetrahedral element" ""
.xx "element" "TRIM10 - Shape" "functions for ten-noded triangular membrane" ""
.xx "" "BRK32  - Shape" "functions for thirty-two-noded brick element" ""
.xx "" "ROD3   - Shape" "functions for three-noded line element" ""
.xx "element" "TRIM3  - Shape" "functions for three-noded triangular membrane" ""
.xx "membrane element" "QUAM12 - Shape" "functions for twelve-noded quadrilateral" ""
.xx "" "BRK20  - Shape" "functions for twenty-noded brick element" ""
.xx "" "TET20  - Shape" "functions for twenty-noded tetrahedral element" ""
.xx "" "ROD2   - Shape" "functions for two-noded line element" ""
.xx "lower triangles" "" "GAURDN - Gaussian decomposition into upper and" ""
.xx "using Gaussian reduction" "" "GAUSOL - Solves a system of linear equations" ""
.xx "triangles" "GAURDN -" "Gaussian decomposition into upper and lower" ""
.xx "" "GAUSUB -" "Gaussian forward and backward substitution" ""
.xx "" "- Solves a system of linear equations using" "Gaussian reduction" "GAUSOL"
.xx "substitution" "" "GAUSUB - Gaussian forward and backward" ""
.xx "" "ASFULG -" "General assembly of a full system matrix" ""
.xx "" "ASSYMG -" "General assembly of a symmetric system matrix" ""
.xx "matrix" "ASUSMG -" "General assembly of an unsymmetric system" ""
.xx "" "ELGEOM - Construction of element" "geometry array for an element" ""
.xx "" "PRTGEO - Prints the mesh" "geometry in a standard format" ""
.xx "" "DCSBRK - Calculates the direction cosines for" "hexahedral elements" ""
.xx "" "- Forms quadrature rule for line integration on" "hexahedrals" "BQBRK "
.xx "form" "" "HOUSE  - Householder reduction to tridiagonal" ""
.xx "" "HOUSE  -" "Householder reduction to tridiagonal form" ""
.xx "complex right-hand side" "" "IASRHS - Assembles the imaginary part of a" ""
.xx "symmetric complex system matrix" "" "IASSYM - Assembles the imaginary part of a" ""
.xx "unsymmetric complex system matrix" "" "IASUSM - Assembles the imaginary part of a" ""
.xx "" "MATIDN - Initialises a matrix to the" "identity matrix" ""
.xx "" "IASRHS - Assembles the" "imaginary part of a complex right-hand side" ""
.xx "matrix" "IASSYM - Assembles the" "imaginary part of a symmetric complex system" ""
.xx "matrix" "IASUSM - Assembles the" "imaginary part of a unsymmetric complex system" ""
.xx "" "CMTNUL -" "Initialises a complex matrix to zero" ""
.xx "" "CVCNUL -" "Initialises a complex vector to zero" ""
.xx "" "MATNUL -" "Initialises a full matrix to zeros" ""
.xx "" "MATIDN -" "Initialises a matrix to the identity matrix" ""
.xx "" "VECNUL -" "Initialises a vector to zeros" ""
.xx "" "BQBRK  - Forms quadrature rule for line" "integration on hexahedrals" ""
.xx "" "BQQUA  - Forms quadrature rule for line" "integration on quadrilaterals" ""
.xx "" "BQTRI  - Forms quadrature rule for line" "integration on triangles" ""
.xx "" "MATINV -" "Inverts a full matrix (for limited sizes)" ""
.xx "Jacobi rotations" "" "JACO   - Reduction to tridiagonal form by" ""
.xx "" "JACO   - Reduction to tridiagonal form by" "Jacobi rotations" ""
.xx "" "LINQUA - Calculates a unit" "length on the boundaries of quadrilaterals" ""
.xx "" "LINTRI - Calculates a unit" "length on the boundaries of triangles" ""
.xx "" "MATINV - Inverts a full matrix (for" "limited sizes)" ""
.xx "" "ROD2   - Shape functions for two-noded" "line element" ""
.xx "" "ROD3   - Shape functions for three-noded" "line element" ""
.xx "" "ROD4   - Shape functions for four-noded" "line element" ""
.xx "" "BQBRK  - Forms quadrature rule for" "line integration on hexahedrals" ""
.xx "" "BQQUA  - Forms quadrature rule for" "line integration on quadrilaterals" ""
.xx "" "BQTRI  - Forms quadrature rule for" "line integration on triangles" ""
.xx "" "CHOSOL - Solves a system of" "linear equations using Choleski reduction" ""
.xx "" "GAUSOL - Solves a system of" "linear equations using Gaussian reduction" ""
.xx "" "CSYSOL - Solves a complex symmetric" "linear system" ""
.xx "boundaries of quadrilaterals" "" "LINQUA - Calculates a unit length on the" ""
.xx "boundaries of triangles" "" "LINTRI - Calculates a unit length on the" ""
.xx "node list" "SIDENO - Forms" "list of element and side numbers from boundary" ""
.xx "" "of element and side numbers from boundary node" "list" "SIDENO - Forms list"
.xx "" "GAURDN - Gaussian decomposition into upper and" "lower triangles" ""
.xx "" "NORM   - Computes the" "L*sub[2] norm of a vector" ""
.xx "" "ASLMS  - Assembles a system" "lumped mass matrix" ""
.xx "" "ASLMS  - Assembles a system lumped" "mass matrix" ""
.xx "" "" "MATADD - Adds two full matrices together" ""
.xx "" "" "MATCOP - Copies one full matrix into another" ""
.xx "matrix" "" "MATIDN - Initialises a matrix to the identity" ""
.xx "sizes)" "" "MATINV - Inverts a full matrix (for limited" ""
.xx "" "" "MATMUL - Multiplies two matrices together" ""
.xx "" "" "MATNUL - Initialises a full matrix to zeros" ""
.xx "" "" "MATRAN - Forms the transpose of a full matrix" ""
.xx "" "CHORDN - Choleski decomposition into triangular" "matrices" ""
.xx "" "Complex symmetric decomposition into triangular" "matrices" "CSYRDN -"
.xx "" "MATADD - Adds two full" "matrices together" ""
.xx "" "MATMUL - Multiplies two" "matrices together" ""
.xx "" "ASFUL  - Assembles a full system" "matrix" ""
.xx "" "ASFULG - General assembly of a full system" "matrix" ""
.xx "" "ASLMS  - Assembles a system lumped mass" "matrix" ""
.xx "" "- Construction of steering vector for system" "matrix assembly" "DIRECT"
.xx "" "ASSYM  - Assembles a symmetric system" "matrix" ""
.xx "" "ASSYMG - General assembly of a symmetric system" "matrix" ""
.xx "" "ASUSM  - Assembles an unsymmetric system" "matrix" ""
.xx "" "- General assembly of an unsymmetric system" "matrix" "ASUSMG"
.xx "" "BNDWTH - Calculates semi-bandwith of system" "matrix" ""
.xx "" "MATVEC - Multiplies a full" "matrix by a vector" ""
.xx "" "MVSYB  - Multiplies a symmetric band" "matrix by a vector" ""
.xx "" "MVUSB  - Multiplies an unsymmetric band" "matrix by a vector" ""
.xx "" "VECMAT - Pre-multiplies a full" "matrix by a vector" ""
.xx "" "VMSYB  - Pre-multiplies a symmetric band" "matrix by a vector" ""
.xx "" "VMUSB  - Pre-multiplies an unsymmetric band" "matrix by a vector" ""
.xx "" "SHAPFN - Forms shape function" "matrix *comp[N]" ""
.xx "" "B2C2   - Forms strain-displacement" "matrix for 2-D plane elasticity" ""
.xx "" "DPLT   - Forms stress-strain" "matrix for 2-D plate bending" ""
.xx "" "B3C3   - Forms strain-displacement" "matrix for 3-D elasticity" ""
.xx "" "DISO   - Forms stress-strain" "matrix for 3-D elasticity" ""
.xx "" "B2P2   - Forms strain-displacement" "matrix for axisymmetric elasticity" ""
.xx "" "DAXI   - Forms stress-strain" "matrix for axisymmetric elasticity" ""
.xx "" "MATINV - Inverts a full" "matrix (for limited sizes)" ""
.xx "" "DPSN   - Forms stress-strain" "matrix for plane strain" ""
.xx "" "DPSS   - Forms stress-strain" "matrix for plane stress" ""
.xx "" "MATSUB - Subtracts one full" "matrix from another" ""
.xx "" "imaginary part of a symmetric complex system" "matrix" "IASSYM - Assembles the"
.xx "" "imaginary part of a unsymmetric complex system" "matrix" "IASUSM - Assembles the"
.xx "" "CPRTMT - Prints a complex" "matrix in a standard form" ""
.xx "" "PRTMAT - Prints a" "matrix in standard format" ""
.xx "" "MATCOP - Copies one full" "matrix into another" ""
.xx "" "MATIDN - Initialises a matrix to the identity" "matrix" ""
.xx "" "MATRAN - Forms the transpose of a full" "matrix" ""
.xx "" "the real part of a symmetric complex system" "matrix" "RASSYM - Assembles"
.xx "" "the real part of a unsymmetric complex system" "matrix" "RASUSM - Assembles"
.xx "" "MATIDN - Initialises a" "matrix to the identity matrix" ""
.xx "" "CMTNUL - Initialises a complex" "matrix to zero" ""
.xx "" "MATNUL - Initialises a full" "matrix to zeros" ""
.xx "" "" "MATSUB - Subtracts one full matrix from another" ""
.xx "" "" "MATVEC - Multiplies a full matrix by a vector" ""
.xx "element" "FREDIF - Calcalutes of" "maximum freedom number difference for an" ""
.xx "" "Shape functions for twelve-noded quadrilateral" "membrane element" "QUAM12 -"
.xx "" "- Shape functions for four-noded quadrilateral" "membrane element" "QUAM4 "
.xx "" "- Shape functions for eight-noded quadrilateral" "membrane element" "QUAM8 "
.xx "" "- Shape functions for ten-noded triangular" "membrane element" "TRIM10"
.xx "" "- Shape functions for three-noded triangular" "membrane element" "TRIM3 "
.xx "" "- Shape functions for six-noded triangular" "membrane element" "TRIM6 "
.xx "" "PRTGEO - Prints the" "mesh geometry in a standard format" ""
.xx "" "ADUNIT - Control the advisory" "message unit number" ""
.xx "" "ERUNIT - Control the error" "message unit number" ""
.xx "" "MATVEC -" "Multiplies a full matrix by a vector" ""
.xx "" "MVSYB  -" "Multiplies a symmetric band matrix by a vector" ""
.xx "vector" "MVUSB  -" "Multiplies an unsymmetric band matrix by a" ""
.xx "" "MATMUL -" "Multiplies two matrices together" ""
.xx "a vector" "" "MVSYB  - Multiplies a symmetric band matrix by" ""
.xx "by a vector" "" "MVUSB  - Multiplies an unsymmetric band matrix" ""
.xx "region" "QQUA9  -" "Nine-point quadrature rule for rectangular" ""
.xx "" "FORMNF - Forms" "nodal freedom array" ""
.xx "" "CPRTVL - Prints a complex" "nodal values in a standard form" ""
.xx "" "PRTVAL - Prints the" "nodal values in a standard format" ""
.xx "" "list of element and side numbers from boundary" "node list" "SIDENO - Forms"
.xx "" "" "NORM   - Computes the L*sub[2] norm of a vector" ""
.xx "" "NORM   - Computes the L*sub[2]" "norm of a vector" ""
.xx "" "ADUNIT - Control the advisory message unit" "number" ""
.xx "" "FREDIF - Calcalutes of maximum freedom" "number difference for an element" ""
.xx "" "ERUNIT - Control the error message unit" "number" ""
.xx "" "SIDENO - Forms list of element and side" "numbers from boundary node list" ""
.xx "" "QLIN2  - Two-point," "one-dimensional quadrature" ""
.xx "" "QLIN3  - Three-point," "one-dimensional quadrature" ""
.xx "" "IASRHS - Assembles the imaginary" "part of a complex right-hand side" ""
.xx "" "RASRHS - Assembles the real" "part of a complex right-hand side" ""
.xx "" "IASSYM - Assembles the imaginary" "part of a symmetric complex system matrix" ""
.xx "" "RASSYM - Assembles the real" "part of a symmetric complex system matrix" ""
.xx "" "IASUSM - Assembles the imaginary" "part of a unsymmetric complex system matrix" ""
.xx "" "RASUSM - Assembles the real" "part of a unsymmetric complex system matrix" ""
.xx "" "- Forms strain-displacement matrix for 2-D" "plane elasticity" "B2C2  "
.xx "" "DPSN   - Forms stress-strain matrix for" "plane strain" ""
.xx "" "DPSS   - Forms stress-strain matrix for" "plane stress" ""
.xx "" "DPLT   - Forms stress-strain matrix for 2-D" "plate bending" ""
.xx "" "VECMAT -" "Pre-multiplies a full matrix by a vector" ""
.xx "vector" "VMSYB  -" "Pre-multiplies a symmetric band matrix by a" ""
.xx "vector" "VMUSB  -" "Pre-multiplies an unsymmetric band matrix by a" ""
.xx "" "CPRTMT -" "Prints a complex matrix in a standard form" ""
.xx "form" "CPRTVL -" "Prints a complex nodal values in a standard" ""
.xx "" "CPRTVC -" "Prints a complex vector in a standard form" ""
.xx "" "PRTMAT -" "Prints a matrix in standard format" ""
.xx "" "PRTVEC -" "Prints a vector in standard format" ""
.xx "format" "PRTTOP -" "Prints the element topology in a standard" ""
.xx "" "PRTGEO -" "Prints the mesh geometry in a standard format" ""
.xx "" "PRTVAL -" "Prints the nodal values in a standard format" ""
.xx "" "ERRMES - Controls" "processing of error conditions" ""
.xx "" "SCAPRD - Forms the scalar" "product of two vectors" ""
.xx "format" "" "PRTGEO - Prints the mesh geometry in a standard" ""
.xx "" "" "PRTMAT - Prints a matrix in standard format" ""
.xx "standard format" "" "PRTTOP - Prints the element topology in a" ""
.xx "format" "" "PRTVAL - Prints the nodal values in a standard" ""
.xx "" "" "PRTVEC - Prints a vector in standard format" ""
.xx "" "" "QBRK6  - Six-point quadrature rule for cube" ""
.xx "" "" "QBRK8  - Eight-point quadrature rule for cube" ""
.xx "" "QLVAL  - Eigenvalue extraction using" "QL transformations" ""
.xx "" "- Eigenvalue and eigenvector extraction using" "QL transformations" "QLVEC "
.xx "" "" "QLIN2  - Two-point, one-dimensional quadrature" ""
.xx "quadrature" "" "QLIN3  - Three-point, one-dimensional" ""
.xx "transformations" "" "QLVAL  - Eigenvalue extraction using QL" ""
.xx "using QL transformations" "" "QLVEC  - Eigenvalue and eigenvector extraction" ""
.xx "rectangular region" "" "QQUA4  - Four-point quadrature rule for" ""
.xx "rectangular region" "" "QQUA9  - Nine-point quadrature rule for" ""
.xx "tetrahedral region" "" "QTET4  - Four-point quadrature rule for" ""
.xx "triangular region" "" "QTRI4  - Four-point quadrature rule for" ""
.xx "triangular region" "" "QTRI7  - Seven-point quadrature rule for" ""
.xx "" "QLIN2  - Two-point, one-dimensional" "quadrature" ""
.xx "" "QLIN3  - Three-point, one-dimensional" "quadrature" ""
.xx "" "QBRK6  - Six-point" "quadrature rule for cube" ""
.xx "" "QBRK8  - Eight-point" "quadrature rule for cube" ""
.xx "hexahedrals" "BQBRK  - Forms" "quadrature rule for line integration on" ""
.xx "quadrilaterals" "BQQUA  - Forms" "quadrature rule for line integration on" ""
.xx "triangles" "BQTRI  - Forms" "quadrature rule for line integration on" ""
.xx "" "QQUA4  - Four-point" "quadrature rule for rectangular region" ""
.xx "" "QQUA9  - Nine-point" "quadrature rule for rectangular region" ""
.xx "" "QTET4  - Four-point" "quadrature rule for tetrahedral region" ""
.xx "" "QTRI4  - Four-point" "quadrature rule for triangular region" ""
.xx "" "QTRI7  - Seven-point" "quadrature rule for triangular region" ""
.xx "" "QWDG6  - Six-point" "quadrature rule for wedge-shaped region" ""
.xx "" "QWDG8  - Eight-point" "quadrature rule for wedge-shaped region" ""
.xx "" "DCSQUA - Calculates the direction cosines for" "quadrilateral elements" ""
.xx "" "QUAM12 - Shape functions for twelve-noded" "quadrilateral membrane element" ""
.xx "" "QUAM4  - Shape functions for four-noded" "quadrilateral membrane element" ""
.xx "" "QUAM8  - Shape functions for eight-noded" "quadrilateral membrane element" ""
.xx "" "- Forms quadrature rule for line integration on" "quadrilaterals" "BQQUA "
.xx "" "- Calculates a unit length on the boundaries of" "quadrilaterals" "LINQUA"
.xx "quadrilateral membrane element" "" "QUAM12 - Shape functions for twelve-noded" ""
.xx "quadrilateral membrane element" "" "QUAM4  - Shape functions for four-noded" ""
.xx "quadrilateral membrane element" "" "QUAM8  - Shape functions for eight-noded" ""
.xx "wedge-shaped region" "" "QWDG6  - Six-point quadrature rule for" ""
.xx "wedge-shaped region" "" "QWDG8  - Eight-point quadrature rule for" ""
.xx "right-hand side" "" "RASRHS - Assembles the real part of a complex" ""
.xx "complex system matrix" "" "RASSYM - Assembles the real part of a symmetric" ""
.xx "unsymmetric complex system matrix" "" "RASUSM - Assembles the real part of a" ""
.xx "" "RASRHS - Assembles the" "real part of a complex right-hand side" ""
.xx "" "RASSYM - Assembles the" "real part of a symmetric complex system matrix" ""
.xx "matrix" "RASUSM - Assembles the" "real part of a unsymmetric complex system" ""
.xx "" "QQUA4  - Four-point quadrature rule for" "rectangular region" ""
.xx "" "QQUA9  - Nine-point quadrature rule for" "rectangular region" ""
.xx "" "a system of linear equations using Choleski" "reduction" "CHOSOL - Solves"
.xx "" "a system of linear equations using Gaussian" "reduction" "GAUSOL - Solves"
.xx "rotations" "JACO   -" "Reduction to tridiagonal form by Jacobi" ""
.xx "" "HOUSE  - Householder" "reduction to tridiagonal form" ""
.xx "" "- Four-point quadrature rule for rectangular" "region" "QQUA4 "
.xx "" "- Nine-point quadrature rule for rectangular" "region" "QQUA9 "
.xx "" "- Four-point quadrature rule for tetrahedral" "region" "QTET4 "
.xx "" "- Four-point quadrature rule for triangular" "region" "QTRI4 "
.xx "" "- Seven-point quadrature rule for triangular" "region" "QTRI7 "
.xx "" "- Six-point quadrature rule for wedge-shaped" "region" "QWDG6 "
.xx "" "- Eight-point quadrature rule for wedge-shaped" "region" "QWDG8 "
.xx "" "- Assembles the imaginary part of a complex" "right-hand side" "IASRHS"
.xx "" "ASRHS  - Assembles the" "right-hand side of a system" ""
.xx "" "RASRHS - Assembles the real part of a complex" "right-hand side" ""
.xx "element" "" "ROD2   - Shape functions for two-noded line" ""
.xx "element" "" "ROD3   - Shape functions for three-noded line" ""
.xx "element" "" "ROD4   - Shape functions for four-noded line" ""
.xx "" "- Reduction to tridiagonal form by Jacobi" "rotations" "JACO  "
.xx "" "QBRK6  - Six-point quadrature" "rule for cube" ""
.xx "" "QBRK8  - Eight-point quadrature" "rule for cube" ""
.xx "" "BQBRK  - Forms quadrature" "rule for line integration on hexahedrals" ""
.xx "" "BQQUA  - Forms quadrature" "rule for line integration on quadrilaterals" ""
.xx "" "BQTRI  - Forms quadrature" "rule for line integration on triangles" ""
.xx "" "QQUA4  - Four-point quadrature" "rule for rectangular region" ""
.xx "" "QQUA9  - Nine-point quadrature" "rule for rectangular region" ""
.xx "" "QTET4  - Four-point quadrature" "rule for tetrahedral region" ""
.xx "" "QTRI4  - Four-point quadrature" "rule for triangular region" ""
.xx "" "QTRI7  - Seven-point quadrature" "rule for triangular region" ""
.xx "" "QWDG6  - Six-point quadrature" "rule for wedge-shaped region" ""
.xx "" "QWDG8  - Eight-point quadrature" "rule for wedge-shaped region" ""
.xx "" "SCAPRD - Forms the" "scalar product of two vectors" ""
.xx "vectors" "" "SCAPRD - Forms the scalar product of two" ""
.xx "" "" "SELECT - Constructs an element solution vector" ""
.xx "" "BNDWTH - Calculates" "semi-bandwith of system matrix" ""
.xx "region" "QTRI7  -" "Seven-point quadrature rule for triangular" ""
.xx "" "SHAPFN - Forms" "shape function matrix *comp[N]" ""
.xx "" "BRK8   -" "Shape functions for eight-noded brick element" ""
.xx "membrane element" "QUAM8  -" "Shape functions for eight-noded quadrilateral" ""
.xx "" "WDG15  -" "Shape functions for fifteen-noded wedge element" ""
.xx "" "ROD4   -" "Shape functions for four-noded line element" ""
.xx "membrane element" "QUAM4  -" "Shape functions for four-noded quadrilateral" ""
.xx "element" "TET4   -" "Shape functions for four-noded tetrahedral" ""
.xx "membrane element" "TRIM6  -" "Shape functions for six-noded triangular" ""
.xx "" "WDG6   -" "Shape functions for six-noded wedge element" ""
.xx "element" "TET10  -" "Shape functions for ten-noded tetrahedral" ""
.xx "membrane element" "TRIM10 -" "Shape functions for ten-noded triangular" ""
.xx "element" "BRK32  -" "Shape functions for thirty-two-noded brick" ""
.xx "" "ROD3   -" "Shape functions for three-noded line element" ""
.xx "membrane element" "TRIM3  -" "Shape functions for three-noded triangular" ""
.xx "membrane element" "QUAM12 -" "Shape functions for twelve-noded quadrilateral" ""
.xx "" "BRK20  -" "Shape functions for twenty-noded brick element" ""
.xx "element" "TET20  -" "Shape functions for twenty-noded tetrahedral" ""
.xx "" "ROD2   -" "Shape functions for two-noded line element" ""
.xx "" "" "SHAPFN - Forms shape function matrix *comp[N]" ""
.xx "" "the imaginary part of a complex right-hand" "side" "IASRHS - Assembles"
.xx "" "SIDENO - Forms list of element and" "side numbers from boundary node list" ""
.xx "" "ASRHS  - Assembles the right-hand" "side of a system" ""
.xx "" "Assembles the real part of a complex right-hand" "side" "RASRHS -"
.xx "from boundary node list" "" "SIDENO - Forms list of element and side numbers" ""
.xx "" "TRIM6  - Shape functions for" "six-noded triangular membrane element" ""
.xx "" "WDG6   - Shape functions for" "six-noded wedge element" ""
.xx "" "QBRK6  -" "Six-point quadrature rule for cube" ""
.xx "region" "QWDG6  -" "Six-point quadrature rule for wedge-shaped" ""
.xx "" "MATINV - Inverts a full matrix (for limited" "sizes)" ""
.xx "" "UPDATE - Updates solution vector with system" "solution" ""
.xx "" "SELECT - Constructs an element" "solution vector" ""
.xx "" "UPDATE - Updates" "solution vector with system solution" ""
.xx "" "CSYSOL -" "Solves a complex symmetric linear system" ""
.xx "Choleski reduction" "CHOSOL -" "Solves a system of linear equations using" ""
.xx "Gaussian reduction" "GAUSOL -" "Solves a system of linear equations using" ""
.xx "" "CPRTMT - Prints a complex matrix in a" "standard form" ""
.xx "" "CPRTVC - Prints a complex vector in a" "standard form" ""
.xx "" "CPRTVL - Prints a complex nodal values in a" "standard form" ""
.xx "" "PRTGEO - Prints the mesh geometry in a" "standard format" ""
.xx "" "PRTMAT - Prints a matrix in" "standard format" ""
.xx "" "PRTTOP - Prints the element topology in a" "standard format" ""
.xx "" "PRTVAL - Prints the nodal values in a" "standard format" ""
.xx "" "PRTVEC - Prints a vector in" "standard format" ""
.xx "" "DIRECT - Construction of" "steering vector for system matrix assembly" ""
.xx "" "DPSN   - Forms stress-strain matrix for plane" "strain" ""
.xx "elasticity" "B2C2   - Forms" "strain-displacement matrix for 2-D plane" ""
.xx "" "B3C3   - Forms" "strain-displacement matrix for 3-D elasticity" ""
.xx "elasticity" "B2P2   - Forms" "strain-displacement matrix for axisymmetric" ""
.xx "" "DPSS   - Forms stress-strain matrix for plane" "stress" ""
.xx "" "DPLT   - Forms" "stress-strain matrix for 2-D plate bending" ""
.xx "" "DISO   - Forms" "stress-strain matrix for 3-D elasticity" ""
.xx "elasticity" "DAXI   - Forms" "stress-strain matrix for axisymmetric" ""
.xx "" "DPSN   - Forms" "stress-strain matrix for plane strain" ""
.xx "" "DPSS   - Forms" "stress-strain matrix for plane stress" ""
.xx "" "CHOBAK - Choleski backward" "substitution" ""
.xx "" "CHOFWD - Choleski forward" "substitution" ""
.xx "" "CSYSUB - Complex forward and backward" "substitution" ""
.xx "" "GAUSUB - Gaussian forward and backward" "substitution" ""
.xx "" "MATSUB -" "Subtracts one full matrix from another" ""
.xx "" "VECSUB -" "Subtracts one vector from another" ""
.xx "faces" "" "SURBRK - Calculates a unit of area on boundary" ""
.xx "" "MVSYB  - Multiplies a" "symmetric band matrix by a vector" ""
.xx "" "VMSYB  - Pre-multiplies a" "symmetric band matrix by a vector" ""
.xx "" "IASSYM - Assembles the imaginary part of a" "symmetric complex system matrix" ""
.xx "" "RASSYM - Assembles the real part of a" "symmetric complex system matrix" ""
.xx "matrices" "CSYRDN - Complex" "symmetric decomposition into triangular" ""
.xx "" "CSYSOL - Solves a complex" "symmetric linear system" ""
.xx "" "ASSYM  - Assembles a" "symmetric system matrix" ""
.xx "" "ASSYMG - General assembly of a" "symmetric system matrix" ""
.xx "" "ASRHS  - Assembles the right-hand side of a" "system" ""
.xx "" "CSYSOL - Solves a complex symmetric linear" "system" ""
.xx "" "ASLMS  - Assembles a" "system lumped mass matrix" ""
.xx "" "ASFUL  - Assembles a full" "system matrix" ""
.xx "" "ASFULG - General assembly of a full" "system matrix" ""
.xx "" "DIRECT - Construction of steering vector for" "system matrix assembly" ""
.xx "" "ASSYM  - Assembles a symmetric" "system matrix" ""
.xx "" "ASSYMG - General assembly of a symmetric" "system matrix" ""
.xx "" "ASUSM  - Assembles an unsymmetric" "system matrix" ""
.xx "" "ASUSMG - General assembly of an unsymmetric" "system matrix" ""
.xx "" "BNDWTH - Calculates semi-bandwith of" "system matrix" ""
.xx "" "the imaginary part of a symmetric complex" "system matrix" "IASSYM - Assembles"
.xx "" "the imaginary part of a unsymmetric complex" "system matrix" "IASUSM - Assembles"
.xx "" "Assembles the real part of a symmetric complex" "system matrix" "RASSYM -"
.xx "" "the real part of a unsymmetric complex" "system matrix" "RASUSM - Assembles"
.xx "reduction" "CHOSOL - Solves a" "system of linear equations using Choleski" ""
.xx "reduction" "GAUSOL - Solves a" "system of linear equations using Gaussian" ""
.xx "" "UPDATE - Updates solution vector with" "system solution" ""
.xx "" "TET10  - Shape functions for" "ten-noded tetrahedral element" ""
.xx "" "TRIM10 - Shape functions for" "ten-noded triangular membrane element" ""
.xx "tetrahedral element" "" "TET10  - Shape functions for ten-noded" ""
.xx "tetrahedral element" "" "TET20  - Shape functions for twenty-noded" ""
.xx "tetrahedral element" "" "TET4   - Shape functions for four-noded" ""
.xx "" "TET10  - Shape functions for ten-noded" "tetrahedral element" ""
.xx "" "TET20  - Shape functions for twenty-noded" "tetrahedral element" ""
.xx "" "TET4   - Shape functions for four-noded" "tetrahedral element" ""
.xx "" "QTET4  - Four-point quadrature rule for" "tetrahedral region" ""
.xx "" "BRK32  - Shape functions for" "thirty-two-noded brick element" ""
.xx "" "ROD3   - Shape functions for" "three-noded line element" ""
.xx "" "TRIM3  - Shape functions for" "three-noded triangular membrane element" ""
.xx "" "QLIN3  -" "Three-point, one-dimensional quadrature" ""
.xx "" "MATADD - Adds two full matrices" "together" ""
.xx "" "MATMUL - Multiplies two matrices" "together" ""
.xx "" "VECADD - Adds two vectors" "together" ""
.xx "" "PRTTOP - Prints the element" "topology in a standard format" ""
.xx "" "QLVAL  - Eigenvalue extraction using QL" "transformations" ""
.xx "" "Eigenvalue and eigenvector extraction using QL" "transformations" "QLVEC  -"
.xx "" "MATRAN - Forms the" "transpose of a full matrix" ""
.xx "" "- Forms quadrature rule for line integration on" "triangles" "BQTRI "
.xx "" "- Gaussian decomposition into upper and lower" "triangles" "GAURDN"
.xx "" "- Calculates a unit length on the boundaries of" "triangles" "LINTRI"
.xx "" "DCSTRI - Calculates the direction cosines for" "triangular elements" ""
.xx "" "CHORDN - Choleski decomposition into" "triangular matrices" ""
.xx "" "CSYRDN - Complex symmetric decomposition into" "triangular matrices" ""
.xx "" "TRIM10 - Shape functions for ten-noded" "triangular membrane element" ""
.xx "" "TRIM3  - Shape functions for three-noded" "triangular membrane element" ""
.xx "" "TRIM6  - Shape functions for six-noded" "triangular membrane element" ""
.xx "" "QTRI4  - Four-point quadrature rule for" "triangular region" ""
.xx "" "QTRI7  - Seven-point quadrature rule for" "triangular region" ""
.xx "" "JACO   - Reduction to" "tridiagonal form by Jacobi rotations" ""
.xx "" "HOUSE  - Householder reduction to" "tridiagonal form" ""
.xx "triangular membrane element" "" "TRIM10 - Shape functions for ten-noded" ""
.xx "triangular membrane element" "" "TRIM3  - Shape functions for three-noded" ""
.xx "triangular membrane element" "" "TRIM6  - Shape functions for six-noded" ""
.xx "" "QUAM12 - Shape functions for" "twelve-noded quadrilateral membrane element" ""
.xx "" "BRK20  - Shape functions for" "twenty-noded brick element" ""
.xx "" "TET20  - Shape functions for" "twenty-noded tetrahedral element" ""
.xx "" "ROD2   - Shape functions for" "two-noded line element" ""
.xx "" "QLIN2  -" "Two-point, one-dimensional quadrature" ""
.xx "" "LINQUA - Calculates a" "unit length on the boundaries of quadrilaterals" ""
.xx "" "LINTRI - Calculates a" "unit length on the boundaries of triangles" ""
.xx "" "ADUNIT - Control the advisory message" "unit number" ""
.xx "" "ERUNIT - Control the error message" "unit number" ""
.xx "" "SURBRK - Calculates a" "unit of area on boundary faces" ""
.xx "" "MVUSB  - Multiplies an" "unsymmetric band matrix by a vector" ""
.xx "" "VMUSB  - Pre-multiplies an" "unsymmetric band matrix by a vector" ""
.xx "" "IASUSM - Assembles the imaginary part of a" "unsymmetric complex system matrix" ""
.xx "" "RASUSM - Assembles the real part of a" "unsymmetric complex system matrix" ""
.xx "" "ASUSM  - Assembles an" "unsymmetric system matrix" ""
.xx "" "ASUSMG - General assembly of an" "unsymmetric system matrix" ""
.xx "solution" "" "UPDATE - Updates solution vector with system" ""
.xx "" "UPDATE -" "Updates solution vector with system solution" ""
.xx "" "GAURDN - Gaussian decomposition into" "upper and lower triangles" ""
.xx "" "CHOSOL - Solves a system of linear equations" "using Choleski reduction" ""
.xx "" "GAUSOL - Solves a system of linear equations" "using Gaussian reduction" ""
.xx "" "QLVAL  - Eigenvalue extraction" "using QL transformations" ""
.xx "" "QLVEC  - Eigenvalue and eigenvector extraction" "using QL transformations" ""
.xx "" "CPRTVL - Prints a complex nodal" "values in a standard form" ""
.xx "" "PRTVAL - Prints the nodal" "values in a standard format" ""
.xx "" "" "VECADD - Adds two vectors together" ""
.xx "" "" "VECCOP - Copies one vector into another" ""
.xx "vector" "" "VECMAT - Pre-multiplies a full matrix by a" ""
.xx "" "" "VECNUL - Initialises a vector to zeros" ""
.xx "" "" "VECSUB - Subtracts one vector from another" ""
.xx "" "DIRECT - Construction of steering" "vector for system matrix assembly" ""
.xx "" "VECSUB - Subtracts one" "vector from another" ""
.xx "" "CPRTVC - Prints a complex" "vector in a standard form" ""
.xx "" "PRTVEC - Prints a" "vector in standard format" ""
.xx "" "VECCOP - Copies one" "vector into another" ""
.xx "" "MATVEC - Multiplies a full matrix by a" "vector" ""
.xx "" "- Multiplies a symmetric band matrix by a" "vector" "MVSYB "
.xx "" "- Multiplies an unsymmetric band matrix by a" "vector" "MVUSB "
.xx "" "NORM   - Computes the L*sub[2] norm of a" "vector" ""
.xx "" "SELECT - Constructs an element solution" "vector" ""
.xx "" "CVCNUL - Initialises a complex" "vector to zero" ""
.xx "" "VECNUL - Initialises a" "vector to zeros" ""
.xx "" "VECMAT - Pre-multiplies a full matrix by a" "vector" ""
.xx "" "- Pre-multiplies a symmetric band matrix by a" "vector" "VMSYB "
.xx "" "Pre-multiplies an unsymmetric band matrix by a" "vector" "VMUSB  -"
.xx "" "UPDATE - Updates solution" "vector with system solution" ""
.xx "" "DYAD   - Forms the dyad of two" "vectors" ""
.xx "" "SCAPRD - Forms the scalar product of two" "vectors" ""
.xx "" "VECADD - Adds two" "vectors together" ""
.xx "by a vector" "" "VMSYB  - Pre-multiplies a symmetric band matrix" ""
.xx "matrix by a vector" "" "VMUSB  - Pre-multiplies an unsymmetric band" ""
.xx "wedge element" "" "WDG15  - Shape functions for fifteen-noded" ""
.xx "element" "" "WDG6   - Shape functions for six-noded wedge" ""
.xx "" "WDG15  - Shape functions for fifteen-noded" "wedge element" ""
.xx "" "WDG6   - Shape functions for six-noded" "wedge element" ""
.xx "" "QWDG6  - Six-point quadrature rule for" "wedge-shaped region" ""
.xx "" "QWDG8  - Eight-point quadrature rule for" "wedge-shaped region" ""
.xx "" "CMTNUL - Initialises a complex matrix to" "zero" ""
.xx "" "CVCNUL - Initialises a complex vector to" "zero" ""
.xx "" "MATNUL - Initialises a full matrix to" "zeros" ""
.xx "" "VECNUL - Initialises a vector to" "zeros" ""
