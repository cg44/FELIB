C***********************************************************************
      SUBROUTINE SIDENO(TOTELS, ELTOP, IELTOP, JELTOP, M, BDCND,
     *     IBDCND, JBDCND, NUMSID, BLIST, IBLIST, JBLIST, ITEST)
C-----------------------------------------------------------------------
C PURPOSE
C      THE ROUTINE GENERATES A LIST OF ELEMENT AND SIDE
C      NUMBERS FROM A LIST OF BOUNDARY NODES. THE NODE LIST
C      MUST BE A CONTINUOUS SEQUENCE OF NODE IN THE SAME
C      SENSE AS THE LOCAL NODE ORDERING.
C
C HISTORY
C
C      COPYRIGHT (C) 1997 : CLRC, RUTHERFORD APPLETON LABORATORY
C                           CHILTON, DIDCOT, OXFORDSHIRE OX11 0QX
C
C      RELEASE 2.0  JAN 1982 (CG)
C
C ARGUMENTS IN
C      TOTELS  THE TOTAL NUMBER OF ELEMENTS IN THE MESH
C      ELTOP   THE ELEMENT TOPOLOGY ARRAY CONTAINING ELEMENT
C              TYPE NUMBER, NUMBER OF NODES ON ELEMENT AND
C              TOPOLOGY LIST
C      IELTOP  FIRST DIMENSION OF ELTOP
C      JELTOP  SECOND DIMENSION OF ELTOP
C      M       BOUNDARY CONDITION LIST NUMBER
C      BDCND   BOUNDARY CONDITION ARRAY CONTAINING BOUNDARY
C              CONDITION TYPE, NUMBER OF NODES ON ELEMENT SIDE
C              NUMBER OF NODES IN LIST AND NODE LIST.
C      IBDCND  FIRST DIMENSION OF BDCND ARRAY
C      JBDCND  SECOND DIMENSION OF BDCND ARRAY
C      IBLIST  FIRST DIMENSION BLIST
C      JBLIST  SECOND DIMENSION OF BLIST
C      ITEST   ERROR CHECKING OPTION
C
C ARGUMENTS OUT
C      NUMSID  NUMBER OF ELEMENT SIDES GENERATED FROM THE
C              CURRENT BOUNDARY NODE LIST
C      BLIST   ARRAY CONTAINING ELEMENT NUMBER AND SIDE NUMBER
C
C ROUTINES CALLED
C      ERRMES
C
C
C
C     SUBROUTINE SIDENO(TOTELS, ELTOP, IELTOP, JELTOP, M, BDCND,
C    *     IBDCND, JBDCND, NUMSID, BLIST, IBLIST, JBLIST, ITEST)
C***********************************************************************
C
      INTEGER BDCND, BLIST, BNUM1, ELTOP, ERRMES, I, IBDCND,
     *     IBLIST, IELTOP, IERROR, IK, ITEST, J, JBDCND, JBLIST,
     *     JELTOP, JTEST, K, L, M, N, N1, NB, NELE, NODEL, NSIDE1,
     *     NUMSID, TOTELS
      DOUBLE PRECISION SRNAME
      DIMENSION BDCND(IBDCND,JBDCND), BLIST(IBLIST,JBLIST),
     *     ELTOP(IELTOP,JELTOP)
      DATA SRNAME /8H SIDENO /
C
C     PARAMETER CHECKING
C
      JTEST = ITEST
      IF (JTEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (JBLIST.LT.2) IERROR = 4
      IF (IBDCND.LT.M) IERROR = 3
      IF (IELTOP.LT.TOTELS) IERROR = 2
      IF (TOTELS.LE.0 .OR. M.LE.0) IERROR = 1
      ITEST = ERRMES(JTEST,IERROR,SRNAME)
      IF (ITEST.NE.0) RETURN
C
C     MAIN BODY
C
 1010 NSIDE1 = BDCND(M,3) - 1
      BNUM1 = BDCND(M,2) - NSIDE1
      N = 0
      DO 1100 I=1,BNUM1,NSIDE1
C
C     RANGE CHECKING ON I
C
         IF (JTEST.EQ.-1) GO TO 1020
         IERROR = 0
         IF (I.GT.JBDCND) IERROR = 6
         ITEST = ERRMES(JTEST,IERROR,SRNAME)
         IF (ITEST.NE.0) RETURN
C
 1020    NB = BDCND(M,I+3)
         DO 1090 J=1,TOTELS
            NODEL = ELTOP(J,2)
            DO 1040 K=1,NODEL
C
C     RANGE CHECKING ON K
C
               IF (JTEST.EQ.-1) GO TO 1030
               IERROR = 0
               IF (K+2.GT.JELTOP) IERROR = 5
               ITEST = ERRMES(JTEST,IERROR,SRNAME)
               IF (ITEST.NE.0) RETURN
C
 1030          IF (NB.EQ.ELTOP(J,K+2)) GO TO 1050
 1040       CONTINUE
            GO TO 1090
C
 1050       NELE = J
            IF (NODEL.EQ.10) NODEL = NODEL - 1
            N1 = K
            DO 1070 K=1,NSIDE1
               L = MOD(N1+K-1,NODEL) + 3
               IK = I + K + 3
C
C     RANGE CHECKING ON L
C
               IF (JTEST.EQ.-1) GO TO 1060
               IERROR = 0
               IF (L.GT.JELTOP) IERROR = 5
               ITEST = ERRMES(JTEST,IERROR,SRNAME)
               IF (ITEST.NE.0) RETURN
C
 1060          IF (BDCND(M,IK).NE.ELTOP(J,L)) GO TO 1090
 1070       CONTINUE
C
            N = N + 1
C
C     RANGE CHECKING ON N
C
            IF (JTEST.EQ.-1) GO TO 1080
            IERROR = 0
            IF (N.GT.IBLIST) IERROR = 7
            ITEST = ERRMES(JTEST,IERROR,SRNAME)
            IF (ITEST.NE.0) RETURN
C
 1080       BLIST(N,1) = NELE
            BLIST(N,2) = (N1-1)/NSIDE1 + 1
            GO TO 1100
 1090    CONTINUE
 1100 CONTINUE
C
      NUMSID = N
C
      RETURN
      END
C***********************************************************************
