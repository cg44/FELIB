C***********************************************************************
C$SPLIT$DIRECT$*********************************************************
C***********************************************************************
      SUBROUTINE DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
C-----------------------------------------------------------------------
C PURPOSE
C      CONSTRUCTS THE STEERING VECTOR TO DIRECT ASSEMBLY OF A
C      SYSTEM MATRIX
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG) --- SERC COPYRIGHT
C      COMMENTED    13 FEB 1980 (KR)
C
C ARGUMENTS IN
C      NELE    ELEMENT NUMBER
C      ELTOP   2D ARRAY CONTAINING ELEMENT TYPE, NUMBER OF
C              NODES ON THE ELEMENT, AND THE ELEMENT TOPOLOGIES
C      IELTOP  FIRST DIMENSION OF ELTOP (.GE. NUMBER OF
C              ELEMENTS IN PROBLEM)
C      JELTOP  SECOND DIMENSION OF ELTOP (.GE. NUMBER OF NODES
C              ON ELEMENT + 2)
C      NF      CONTAINS FREEDOM NUMBERS ASSOCIATED WITH EACH
C              NODE
C      INF     FIRST DIMENSION OF NF (.GE. TOTAL NUMBER OF
C              NODES IN PROBLEM)
C      JNF     SECOND DIMENSION OF NF (.GE. DOFNOD)
C      DOFNOD  NUMBER OF DEGREES OF FREEDOM AT EACH NODE
C      ISTEER  DIMENSION OF VECTOR STEER (.GE. TOTAL NUMBER OF
C              DEGREES OF FREEDOM ON ELEMENT)
C      ITEST   ERROR CHECKING OPTION
C
C ARGUMENTS OUT
C      STEER   VECTOR CONTAINING FREEDOM NUMBERS ASSOCIATED
C              WITH ELEMENT NELE, ARRANGED IN LOCAL NODE ORDER
C
C ROUTINES CALLED
C      ERRMES
C
C
C     SUBROUTINE DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
C    *     DOFNOD, STEER, ISTEER, ITEST)
C***********************************************************************
C
      INTEGER DOFNOD, ELTOP, ERRMES, IDEG, IELTOP, IERROR,
     *     INF, INOD, ISTEER, ITEST, JELTOP, JNF, JNOD, K,
     *     NELE, NF, NODEL, STEER
      DOUBLE PRECISION SRNAME
      DIMENSION ELTOP(IELTOP,JELTOP), NF(INF,JNF),
     *     STEER(ISTEER)
      DATA SRNAME /8H DIRECT /
C
C     MONITORING CHECK
C
      IF(ITEST.EQ.-1) CALL FECHK
C
                        IF (ITEST.EQ.-1) GO TO 1010
                        IERROR = 0
                        IF (JNF.LT.DOFNOD) IERROR = 3
                        IF (IELTOP.LT.NELE) IERROR = 2
                        IF (NELE.LE.0 .OR. DOFNOD.LE.0) IERROR = 1
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
                        IF (ITEST.NE.0) RETURN
 1010 NODEL = ELTOP(NELE,2)
                        IF (ITEST.EQ.-1) GO TO 1020
                        IERROR = 0
                        IF (JELTOP.LT.NODEL+2) IERROR = 4
                        IF (ISTEER.LT.DOFNOD*NODEL) IERROR = 6
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
                        IF (ITEST.NE.0) RETURN
 1020 K = 1
      DO 1050 INOD=1,NODEL
      JNOD = ELTOP(NELE,INOD+2)
                        IF (ITEST.EQ.-1) GO TO 1030
                        IERROR = 0
                        IF (INF.LT.JNOD) IERROR = 5
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
                        IF (ITEST.NE.0) RETURN
 1030 DO 1040 IDEG=1,DOFNOD
      STEER(K) = NF(JNOD,IDEG)
      K = K + 1
 1040 CONTINUE
 1050 CONTINUE
      RETURN
      END
C***********************************************************************
C$SPLIT$ELGEOM$*********************************************************
C***********************************************************************
      SUBROUTINE ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD,
     *     ICOORD, JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C-----------------------------------------------------------------------
C PURPOSE
C      CONSTRUCTS THE ELEMENT GEOMETRY ARRAY FOR THE SPECIFIED
C      ELEMENT IN THE LOCAL NODE ORDER
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG) --- SERC COPYRIGHT
C      COMMENTED    14 FEB 1980 (KR)
C
C ARGUMENTS IN
C      NELE    ELEMENT NUMBER FOR WHICH THE NODAL COORDINATE
C              ARRAY IS REQUIRED
C      ELTOP   CONTAINS ELEMENT TYPE, NUMBER OF NODES, AND
C              ELEMENT TOPOLOGIES FOR ALL THE ELEMENTS
C      IELTOP  FIRST DIMENSION OF ELTOP (.GE. MAXIMUM NODE
C              NUMBER ON REGION)
C      JELTOP  SECOND DIMENSION OF ELTOP (.GE. NUMBER OF NODES
C              ON ELEMENT + 2)
C      COORD   COORD(I,J) CONTAINS THE J'TH GLOBAL COORDINATE
C              OF THE I'TH NODE
C      ICOORD  FIRST DIMENSION OF COORD (.GE. MAXIMUM NUMBER OF
C              NODES IN THE MESH)
C      JCOORD  SECOND DIMENSION OF COORD (.GE. DIMEN)
C      IGEOM   FIRST DIMENSION OF ARRAY GEOM (.GE. NUMBER OF
C              NODES ON THE ELEMENT)
C      JGEOM   SECOND DIMENSION OF GEOM (.GE. DIMEN)
C      DIMEN   DIMENSIONALITY OF THE MESH
C      ITEST   ERROR CHECKING OPTION
C
C ARGUMENTS OUT
C      GEOM    CONTAINS GLOBAL COORDINATES OF THE NODES
C              ASSOCIATED WITH ELEMENT NELE IN THE LOCAL NODE
C              NUMBERING ORDER
C
C ROUTINES CALLED
C      ERRMES
C
C
C     SUBROUTINE ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
C    *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C***********************************************************************
C
      INTEGER DIMEN, ELTOP, ERRMES, ICOORD, IDIM, IELTOP, IERROR,
     *     IGEOM, INOD, ITEST, JCOORD, JELTOP, JGEOM, JNOD,
     *     NELE, NODEL
      DOUBLE PRECISION COORD, GEOM, SRNAME
      DIMENSION COORD(ICOORD,JCOORD), ELTOP(IELTOP,JELTOP),
     *     GEOM(IGEOM,JGEOM)
      DATA SRNAME /8H ELGEOM /
C
C     MONITORING CHECK
C
      IF(ITEST.EQ.-1) CALL FECHK
C
                        IF (ITEST.EQ.-1) GO TO 1010
                        IERROR = 0
                        IF (JGEOM.LT.DIMEN) IERROR = 4
                        IF (JCOORD.LT.DIMEN) IERROR = 3
                        IF (IELTOP.LT.NELE) IERROR = 2
                        IF (NELE.LE.0 .OR. DIMEN.LE.0) IERROR = 1
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
                        IF (ITEST.NE.0) RETURN
 1010                   NODEL = ELTOP(NELE,2)
                        IF (ITEST.EQ.-1) GO TO 1020
                        IERROR = 0
                        IF (JELTOP.LT.NODEL+2) IERROR = 5
                        IF (IGEOM.LT.NODEL) IERROR = 7
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
                        IF (ITEST.NE.0) RETURN
 1020                   DO 1050 JNOD=1,NODEL
                        INOD = ELTOP(NELE,JNOD+2)
                        IF (ITEST.EQ.-1) GO TO 1030
                        IERROR = 0
                        IF (ICOORD.LT.INOD) IERROR = 6
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
                        IF (ITEST.NE.0) RETURN
 1030                   DO 1040 IDIM=1,DIMEN
                        GEOM(JNOD,IDIM) = COORD(INOD,IDIM)
 1040                   CONTINUE
 1050                   CONTINUE
                        RETURN
                        END
C***********************************************************************
C$SPLIT$ERRMES$*********************************************************
C***********************************************************************
      INTEGER FUNCTION ERRMES(ITEST, IERROR, SRNAME)
C-----------------------------------------------------------------------
C PURPOSE
C      RETURNS THE VALUE OF IERROR OR TERMINATES THE PROGRAM,
C      PRINTING A FAILURE MESSAGE
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG) --- SERC COPYRIGHT
C      COMMENTED    14 FEB 1980 (KR)
C
C ARGUMENTS IN
C      ITEST   CONTAINS EITHER 0 (HARD FAIL) OR 1 (SOFT FAIL).
C              ANY OTHER ENTRY GIVES HARD FAIL.
C      IERROR  CONTAINS THE NUMBER OF THE DETECTED ERROR
C      SRNAME  CONTAINS UP TO 8 CHARACTERS - USUALLY A LIBRARY
C              ROUTINE NAME
C
C ARGUMENTS OUT
C      ERRMES  ROUTINE NAME, CONTAINS THE VALUE OF IERROR
C
C ROUTINES CALLED
C      CAN CALL AUXILIARY ROUTINE IN SOME VERSIONS OF LIBRARY
C
C
C     INTEGER FUNCTION ERRMES(ITEST, IERROR, SRNAME)
C***********************************************************************
C
      INTEGER IERROR, ITEST, NOUT
      DOUBLE PRECISION SRNAME
      CHARACTER*20 LOGFIL
      INTEGER*4 MONOUT,LENFIL,ISTREC,MNCUR, LOGGED
      INTEGER ERROUT, ADOUT
      COMMON/CFELIB/MONOUT,LOGGED,LENFIL,ISTREC,MNCUR,
     *              LOGFIL
C
      DATA ERROUT /1/, ADOUT /1/
C
C     CHECK THAT INIT HAS BEEN CALLED
C
      IF(LOGGED.EQ.9999) GOTO 1030
      CALL FECHK
      STOP
C+++++
C     HARD FAILURE
C
 1030 IF (ITEST.EQ.-99) GO TO 1020
      IF (ITEST.EQ.1 .OR. IERROR.EQ.0) GO TO 1010
      WRITE (ERROUT,9010) SRNAME, IERROR
C+++++
C     SOFT FAILURE
C
      STOP
C+++++
C     TO RETURN RELEASE MESSAGE
C
 1010 ERRMES = IERROR
      RETURN
 1020 WRITE (ADOUT,9020)
      RETURN
 9010 FORMAT (43H ERROR DETECTED BY LEVEL 0 LIBRARY ROUTINE , A8,
     *     11H - ITEST = , I5//)
 9020 FORMAT (25H RELEASE 2.1  -  1 SEP 85)
      END
C***********************************************************************
C$SPLIT$FEMONIT$*********************************************************
C***********************************************************************
C********************************************************************
C
C FINITE ELEMENT LIBRARY MONITORING ROUTINES
C
C
      SUBROUTINE FEFIN
      CHARACTER*20 LOGFIL
      INTEGER*4 ERROUT
      INTEGER*4 MONOUT,LENFIL,ISTREC,MNCUR, LOGGED
      COMMON/CFELIB/MONOUT,LOGGED,LENFIL,ISTREC,MNCUR,
     *              LOGFIL
C
      DATA ERROUT /1/
C
C     CHECK IF ONLY TEST
C
      IF(LOGGED.EQ.6666) RETURN
C
C     THE REAL THING - CONTINUE
C
      IF(LOGGED.EQ.9999) THEN
         CALL MNSTOP(MONOUT,ERROUT,LOGFIL,LENFIL,ISTREC,MNCUR)
C
C     SET FLAG
C
         LOGGED=7777
      ELSE
        WRITE(ERROUT,9010)
        STOP
      ENDIF
      RETURN
 9010 FORMAT('ERROR DETECTED - FEINIT MUST BE CALLED FIRST')
      END
C
C********************************************************************
C
      SUBROUTINE FEINIT
      DOUBLE PRECISION FELIB
      CHARACTER*20 LOGFIL
      INTEGER*4 ERROUT
      INTEGER*4 MONOUT,LENFIL,ISTREC,MNCUR, LOGGED
      COMMON/CFELIB/MONOUT,LOGGED,LENFIL,ISTREC,MNCUR,
     *              LOGFIL
C
      DATA ERROUT /1/
      DATA FELIB /8HFELIB   /
C
C     CHECK IF ONLY TEST
C
      IF(LOGGED.EQ.8888) RETURN
C
C     NOT TEST - THE REAL THING
C
C     CHECK ON FEFIN
C
      LOGGED=6666
      CALL FEFIN
C
C     FEFIN OK - CONTINUE - SET FLAG ETC.
C
      LOGGED=9999
      MONOUT=10
      LENFIL=32
      ISTREC=1
      LOGFIL='ENGSFT>LOG>DATAFILE'
      CALL MNSTRT(MONOUT,ERROUT,LOGFIL,FELIB,LENFIL,
     *            ISTREC,MNCUR)
      RETURN
      END
C
C********************************************************************
C
      SUBROUTINE FECHK
      CHARACTER*20 LOGFIL
      INTEGER*4 MONOUT,LENFIL,ISTREC,MNCUR, LOGGED
      INTEGER*4 ERROUT
      COMMON/CFELIB/MONOUT,LOGGED,LENFIL,ISTREC,MNCUR,
     *              LOGFIL
C
      DATA ERROUT /1/
C
C     CHECK IF FEINIT HAS BEEN CALLED
C
      IF(LOGGED.EQ.9999) RETURN
C
C     CHECK IF FEFIN HAS BEEN CALLED BEFORE END
C
      IF(LOGGED.EQ.7777) THEN
         WRITE(ERROUT,9020)
      ELSE
C
C     FEINIT EITHER NOT INCLUDED OR CALLED TO LATE
C
         LOGGED=8888
         CALL FEINIT
         WRITE(ERROUT,9010)
      ENDIF
      STOP
 9010 FORMAT('ERROR DETECTED - FEINIT SHOULD BE THE FIRST'
     *       ' EXECUTABLE STATEMENT IN THE PROGRAM')
 9020 FORMAT('ERROR DETECTED - FEFIN SHOULD BE THE LAST'
     *       ' EXECUTABLE STATEMENT IN THE PROGRAM')
      END
C
C********************************************************************
C
      SUBROUTINE FEFIN
      CHARACTER*20 LOGFIL
      INTEGER*4 ERROUT
      INTEGER*4 MONOUT,LENFIL,ISTREC,MNCUR, LOGGED
      COMMON/CFELIB/MONOUT,LOGGED,LENFIL,ISTREC,MNCUR,
     *              LOGFIL
C
      DATA ERROUT /1/
C
      WRITE(ERROUT,9010)
 9010 FORMAT('ERROR DETECTED - FEFIN HAS NOT BEEN INCLUDED IN PROGRAM')
      STOP
      END
      SUBROUTINE FEINIT
      CHARACTER*20 LOGFIL
      INTEGER*4 ERROUT
      INTEGER*4 MONOUT,LENFIL,ISTREC,MNCUR, LOGGED
      COMMON/CFELIB/MONOUT,LOGGED,LENFIL,ISTREC,MNCUR,
     *              LOGFIL
C
      DATA ERROUT /1/
C
      WRITE(ERROUT,9010)
 9010 FORMAT('ERROR DETECTED - FEINIT HAS NOT BEEN INCLUDED IN PROGRAM')
      STOP
      END
C***********************************************************************
C$SPLIT$MATNUL$*********************************************************
C***********************************************************************
      SUBROUTINE MATNUL(A, IA, JA, M, N, ITEST)
C-----------------------------------------------------------------------
C PURPOSE
C      SETS MATRIX A TO THE NULL MATRIX
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG) --- SERC COPYRIGHT
C      COMMENTED    12 OCT 1980 (KR)
C
C ARGUMENTS IN
C      IA      FIRST DIMENSION OF ARRAY A (.GE.M)
C      JA      SECOND DIMENSION OF ARRAY A (.GE.N)
C      M       NUMBER OF ROWS OF A TO BE SET TO ZERO
C      N       NUMBER OF COLUMNS OF A TO BE SET TO ZERO
C      ITEST   ERROR CHECKING OPTION
C
C ARGUMENTS OUT
C      A       ARRAY OF DIMENSION (IA,JA).  A(I,J)=0 FOR
C              I=1(1)M AND J=1(1)N
C
C ROUTINES CALLED
C      ERRMES
C
C
C     SUBROUTINE MATNUL(A, IA, JA, M, N, ITEST)
C***********************************************************************
C
      INTEGER ERRMES, I, IA, IERROR, ITEST, J, JA, M, N
      DOUBLE PRECISION A, SRNAME
      DIMENSION A(IA,JA)
      DATA SRNAME /8H MATNUL /
C
C     CHECK ON MONITORING
C
      IF(ITEST.EQ.-1) CALL FECHK
C
                        IF (ITEST.EQ.-1) GO TO 1010
                        IERROR = 0
                        IF (M.GT.IA .OR. N.GT.JA) IERROR = 2
                        IF (M.LE.0 .OR. N.LE.0) IERROR = 1
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
                        IF (ITEST.NE.0) RETURN
 1010                   DO 1030 I=1,M
                        DO 1020 J=1,N
                        A(I,J) = 0.0D0
 1020                   CONTINUE
 1030                   CONTINUE
                        RETURN
                        END
C***********************************************************************
C$SPLIT$VECNUL$*********************************************************
C***********************************************************************
      SUBROUTINE VECNUL(VEC, IVEC, N, ITEST)
C-----------------------------------------------------------------------
C PURPOSE
C      SETS THE FIRST N ELEMENTS OF A VECTOR TO ZERO
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (IMS) --- SERC COPYRIGHT
C      COMMENTED    23 OCT 1980 (KR)
C
C ARGUMENTS IN
C      IV      LENGTH OF VECTOR V (.GE.N)
C      N       NUMBER OF ELEMENTS TO BE SET TO ZERO
C      ITEST   ERROR CHECKING OPTION
C
C ARGUMENTS OUT
C      V       VECTOR OF LENGTH IV.  V(I)=0.0D0 FOR I=1(1)N
C
C ROUTINES CALLED
C      ERRMES
C
C
C     SUBROUTINE VECNUL(VEC, IVEC, N, ITEST)
C***********************************************************************
C
      INTEGER ERRMES, I, IERROR, ITEST, IVEC, N
      DOUBLE PRECISION SRNAME, VEC
      DIMENSION VEC(IVEC)
      DATA SRNAME /8H VECNUL /
C
C     CHECK ON MONITORING
C
      IF(ITEST.EQ.-1) CALL FECHK
C
                        IF (ITEST.EQ.-1) GO TO 1010
                        IERROR = 0
                        IF (N.GT.IVEC) IERROR = 2
                        IF (N.LE.0) IERROR = 1
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
                        IF (IERROR.NE.0) RETURN
 1010                   DO 1020 I=1,N
                        VEC(I) = 0.0D0
 1020                   CONTINUE
                        RETURN
                        END
C***********************************************************************
C$SPLIT$FECHK$*********************************************************
C***********************************************************************
      SUBROUTINE FECHK
      CHARACTER*20 LOGFIL
      INTEGER*4 MONOUT,LENFIL,ISTREC,MNCUR, LOGGED
      INTEGER*4 ERROUT
      COMMON/CFELIB/MONOUT,LOGGED,LENFIL,ISTREC,MNCUR,
     *              LOGFIL
C
      DATA ERROUT /1/
C
C     CHECK IF FEINIT HAS BEEN CALLED
C
      IF(LOGGED.EQ.9999) RETURN
C
C     CHECK IF FEFIN HAS BEEN CALLED BEFORE END
C
      IF(LOGGED.EQ.7777) THEN
         WRITE(ERROUT,9020)
      ELSE
C
C     FEINIT EITHER NOT INCLUDED OR CALLED TO LATE
C
         LOGGED=8888
         CALL FEINIT
         WRITE(ERROUT,9010)
      ENDIF
      STOP
 9010 FORMAT('ERROR DETECTED - FEINIT SHOULD BE THE FIRST'
     *       ' EXECUTABLE STATEMENT IN THE PROGRAM')
 9020 FORMAT('ERROR DETECTED - FEFIN SHOULD BE THE LAST'
     *       ' EXECUTABLE STATEMENT IN THE PROGRAM')
      END
