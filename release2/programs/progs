C***********************************************************************
C$SPLIT$SEG1P1$*********************************************************
C***********************************************************************
      INTEGER DIF, DIMEN, DOFEL, DOFNOD, ELNUM, ELTOP, ELTYP,
     *     HBAND, I, IABSS, IB, IBT, IBTDB, ICOORD, ID, IDB,
     *     IELDIS, IELK, IELTOP, IFUN, IGDER, IGEOM, IJAC,
     *     IJACIN, ILDER, ILOADS, INF, IQUAD, IRESTR, ISTEER,
     *     ISTRN, ISTRS, ISYSK, ITEST, IWGHT, J, JABSS, JB,
     *     JBT, JBTDB, JCOORD, JD, JDB, JELK, JELTOP, JGDER,
     *     JGEOM, JJAC, JJACIN, JLDER, JNF, JRESTR, JSTEER,
     *     JSYSK, K, LODNOD, NELE, NF, NIN, NODEL, NODNUM,
     *     NOUT, NQP, NTEMP, NUMSS, RESNOD, RESTR, STEER, TOTDOF,
     *     TOTELS, TOTNOD
      DOUBLE PRECISION ABSS, B, BT, BTDB, COORD, D, DB, DET,
     *     E, ELDIS, ELK, ETA, FUN, GDER, GEOM, JAC, JACIN,
     *     LDER, LOADS, NU, QUOT, STRN, STRS, SYSK, WGHT, WORK,
     *     XI
      LOGICAL FIRST
      DIMENSION ABSS(3,9), B(6,24), BT(24,6), BTDB(24,24),
     *     D(6,6), DB(6,24), ELDIS(24), ELK(24,24), FUN(8),
     *     GDER(3,8), GEOM(8,3), JAC(3,3), JACIN(3,3),
     *     LDER(3,8), STEER(24), STRN(6), STRS(6), WGHT(9),
     *     WORK(3)
C
C                            PROBLEM SIZE DEPENDENT ARRAYS
C
      DIMENSION COORD(100,3), ELTOP(100,10), LOADS(100),
     *     NF(100,3), RESTR(100,4), SYSK(100,25)
C
      DATA IABSS /3/, IB /6/, IBT /24/, IBTDB /24/, ID /6/,
     *     IDB /6/, IELDIS /24/, IELK /24/, IFUN /8/, IGDER /3/,
     *     IGEOM /8/, IJAC /3/, IJACIN /3/, ILDER /3/,
     *     ISTEER /24/, ISTRN /6/, ISTRS /6/, IWGHT /9/,
     *     JABSS /9/, JB /24/, JBT /6/, JBTDB /24/, JCOORD /3/,
     *     JD /6/, JDB /24/, JELK /24/, JGDER /8/, JGEOM /3/,
     *     JJAC /3/, JJACIN /3/, JLDER /8/, JNF /3/, JRESTR /4/
C
C                            PROBLEM SIZE DEPENDENT DATA STATEMENTS
C
      DATA ICOORD /100/, IELTOP /100/, ILOADS /100/, INF /100/,
     *     IRESTR /100/, ISYSK /100/, JELTOP /10/, JSYSK /25/
C
      DATA NIN /5/, NOUT /6/, NTEMP /7/
C
C                            SET ITEST FOR FULL CHECKING
C
      ITEST = 0
C
C*                           **********************
C*                           *                    *
C*                           * INPUT DATA SECTION *
C*                           *                    *
C*                           **********************
C
C                            INPUT OF NODAL GEOMETRY
C
      WRITE (NOUT,9010)
      READ (NIN,8010) TOTNOD, DIMEN
      WRITE (NOUT,9020) TOTNOD, DIMEN
      DO 1010 I=1,TOTNOD
      READ (NIN,8020) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
      WRITE (NOUT,9030) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
 1010 CONTINUE
C
C                            INPUT OF ELEMENT TOPOLOGY
C
      WRITE (NOUT,9040)
      READ (NIN,8010) ELTYP, TOTELS, NODEL
      WRITE (NOUT,9020) ELTYP, TOTELS, NODEL
      DO 1020 I=1,TOTELS
      READ (NIN,8010) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      WRITE (NOUT,9020) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      ELTOP(ELNUM,1) = ELTYP
      ELTOP(ELNUM,2) = NODEL
 1020 CONTINUE
C
C                            INPUT OF MATERIAL PROPERTIES AND
C                            CONSTRUCTION OF STRESS-STRAIN MATRIX D
C                            FOR PLANE STRAIN
C
      WRITE (NOUT,9050)
      READ (NIN,8030) NU, E
      WRITE (NOUT,9060) NU, E
      CALL DPSN(D, ID, JD, E, NU, NUMSS, ITEST)
C
C                            INPUT OF NUMBER OF DEGREES OF FREEDOM
C                            PER NODE, INPUT OF RESTRAINED NODE
C                            DATA AND CONSTRUCTION OF NODAL FREEDOM
C                            ARRAY NF
C
      WRITE (NOUT,9070)
      READ (NIN,8010) DOFNOD
      WRITE (NOUT,9020) DOFNOD
      READ (NIN,8010) RESNOD
      WRITE (NOUT,9020) RESNOD
      K = DOFNOD + 1
      DO 1030 I=1,RESNOD
      READ (NIN,8010) (RESTR(I,J),J=1,K)
      WRITE (NOUT,9020) (RESTR(I,J),J=1,K)
 1030 CONTINUE
      CALL FORMNF(RESTR, IRESTR, JRESTR, RESNOD, TOTNOD, DOFNOD,
     *     NF, INF, JNF, TOTDOF, ITEST)
C
C                            LOADING DATA INPUT
C
      WRITE (NOUT,9080)
      CALL VECNUL(LOADS, ILOADS, TOTDOF, ITEST)
      READ (NIN,8010) LODNOD
      WRITE (NOUT,9020) LODNOD
      DO 1050 I=1,LODNOD
      READ (NIN,8020) NODNUM, (WORK(J),J=1,DOFNOD)
      WRITE (NOUT,9030) NODNUM, (WORK(J),J=1,DOFNOD)
      DO 1040 J=1,DOFNOD
      K = NF(NODNUM,J)
      IF (K.EQ.0) GO TO 1040
      LOADS(K) = WORK(J)
 1040 CONTINUE
 1050 CONTINUE
C
C                            CALCULATION OF SEMI-BANDWIDTH
C
      FIRST = .TRUE.
      DO 1060 NELE=1,TOTELS
      CALL FREDIF(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, FIRST, DIF, ITEST)
 1060 CONTINUE
      HBAND = DIF + 1
C
C*                           ************************************
C*                           *                                  *
C*                           * GLOBAL STIFFNESS MATRIX ASSEMBLY *
C*                           *                                  *
C*                           ************************************
C
      CALL MATNUL(SYSK, ISYSK, JSYSK, TOTDOF, HBAND, ITEST)
      DOFEL = NODEL*DOFNOD
      CALL QQUA4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      DO 1100 NELE=1,TOTELS
      CALL ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C
C                            INTEGRATION LOOP FOR ELEMENT STIFFNESS
C                            USING NQP QUADRATURE POINTS
C
      CALL MATNUL(ELK, IELK, JELK, DOFEL, DOFEL, ITEST)
      DO 1090 IQUAD=1,NQP
C
C                            FORM LINEAR SHAPE FUNCTION AND SPACE
C                            DERIVATIVES IN THE LOCAL CORRDINATES.
C                            TRANSFORM LOCAL DERIVATIVES TO GLOBAL
C                            COORDINATE SYSTEM
C
      XI = ABSS(1,IQUAD)
      ETA = ABSS(2,IQUAD)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
      CALL MATMUL(LDER, ILDER, JLDER, GEOM, IGEOM, JGEOM, JAC,
     *     IJAC, JJAC, DIMEN, NODEL, DIMEN, ITEST)
      CALL MATINV(JAC, IJAC, JJAC, JACIN, IJACIN, JJACIN, DIMEN,
     *     DET, ITEST)
      CALL MATMUL(JACIN, IJACIN, JJACIN, LDER, ILDER, JLDER, GDER,
     *     IGDER, JGDER, DIMEN, DIMEN, NODEL, ITEST)
C
C                            FORMATION OF STRAIN-DISPLACEMENT
C                            MATRIX B AND OUTPUT TO WORK FILE FOR
C                            LATER RECOVERY PROCESS
C
      CALL B2C2(B, IB, JB, GDER, IGDER, JGDER, NODEL, ITEST)
      WRITE (NTEMP) ((B(I,J),I=1,NUMSS),J=1,DOFEL)
C
C                            FORMATION OF ELEMENT STIFFNESS ELK
C
      CALL MATMUL(D, ID, JD, B, IB, JB, DB, IDB, JDB, NUMSS,
     *     NUMSS, DOFEL, ITEST)
      CALL MATRAN(B, IB, JB, BT, IBT, JBT, NUMSS, DOFEL, ITEST)
      CALL MATMUL(BT, IBT, JBT, DB, IDB, JDB, BTDB, IBTDB, JBTDB,
     *     DOFEL, NUMSS, DOFEL, ITEST)
      QUOT = DABS(DET)*WGHT(IQUAD)
      DO 1080 I=1,DOFEL
      DO 1070 J=1,DOFEL
      BTDB(I,J) = BTDB(I,J)*QUOT
 1070 CONTINUE
 1080 CONTINUE
      CALL MATADD(ELK, IELK, JELK, BTDB, IBTDB, JBTDB, DOFEL,
     *     DOFEL, ITEST)
 1090 CONTINUE
C
C                            ASSEMBLY OF SYSTEM STIFFNESS MATRIX
C                            SYSK
C
      CALL DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      CALL ASSYM(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
 1100 CONTINUE
C
C*                           *********************
C*                           *                   *
C*                           * EQUATION SOLUTION *
C*                           *                   *
C*                           *********************
C
C                            SOLUTION OF SYSTEM MATRIX FOR THE
C                            NODAL DISPLACEMENTS
C
      WRITE (NOUT,9090)
      CALL PRTVAL(LOADS, ILOADS, NF, INF, JNF, DOFNOD, TOTNOD,
     *     NOUT, ITEST)
      CALL CHOSOL(SYSK, ISYSK, JSYSK, LOADS, ILOADS, TOTDOF,
     *     HBAND, ITEST)
      WRITE (NOUT,9100)
      CALL PRTVAL(LOADS, ILOADS, NF, INF, JNF, DOFNOD, TOTNOD,
     *     NOUT, ITEST)
C
C*                           **************************
C*                           *                        *
C*                           * STRESS-STRAIN RECOVERY *
C*                           *                        *
C*                           **************************
C
C                            RECOVERY OF STRESSES AND STRAINS AT
C                            THE QUADRATURE SAMPLING POINTS USING
C                            THE ELEMENT STRAIN-DISPLACEMENT MATRIX
C                            B FROM THE WORK FILE
C
      REWIND NTEMP
      DO 1130 NELE=1,TOTELS
      WRITE (NOUT,9110) NELE
C
C                            SELECT NODAL DISPLACEMENTS FOR ELEMENT
C                            NELE USING THE STEERING VECTOR
C
      CALL DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      DO 1120 IQUAD=1,NQP
      CALL VECNUL(ELDIS, IELDIS, DOFEL, ITEST)
      DO 1110 I=1,DOFEL
      JSTEER = STEER(I)
      IF (JSTEER.NE.0) ELDIS(I) = LOADS(JSTEER)
 1110 CONTINUE
C
C                            RECOVER B MATRIX FOR POINT IQUAD AND
C                            CALCULATE THE STRESSES AND STRAINS
C
      READ (NTEMP) ((B(I,J),I=1,NUMSS),J=1,DOFEL)
      CALL MATVEC(B, IB, JB, ELDIS, IELDIS, NUMSS, DOFEL, STRN,
     *     ISTRN, ITEST)
      CALL MATVEC(D, ID, JD, STRN, ISTRN, NUMSS, NUMSS, STRS,
     *     ISTRS, ITEST)
      WRITE (NOUT,9120) IQUAD
      CALL PRTVEC(STRN, ISTRN, NUMSS, NOUT, ITEST)
      CALL PRTVEC(STRS, ISTRS, NUMSS, NOUT, ITEST)
 1120 CONTINUE
 1130 CONTINUE
      STOP
 8010 FORMAT (16I5)
 8020 FORMAT (I5, 6F10.0)
 8030 FORMAT (2F10.0)
 9010 FORMAT (//25H **** NODAL GEOMETRY ****//1H )
 9020 FORMAT (1H , 16I5)
 9030 FORMAT (1H , I5, 6F10.5)
 9040 FORMAT (//27H **** ELEMENT TOPOLOGY ****//1H )
 9050 FORMAT (//30H **** MATERIAL PROPERTIES ****//1H )
 9060 FORMAT (1H , F10.5, E10.3)
 9070 FORMAT (//25H **** RESTRAINT DATA ****//1H )
 9080 FORMAT (//23H **** LOADING DATA ****//1H )
 9090 FORMAT (//26H **** VECTOR OF LOADS ****//1H )
 9100 FORMAT (//42H **** EQUILIBRIUM DISPLACEMENTS (U,V) ****//1H )
 9110 FORMAT (//39H **** STRAINS AND STRESSES FOR ELEMENT , I3,
     *     5H ****//1H )
 9120 FORMAT (/18H QUADRATURE POINT , I3/1H )
      END
C***********************************************************************
C$SPLIT$SEG2P1$*********************************************************
C***********************************************************************
      INTEGER DIMEN, DOFEL, DOFNOD, ELNUM, ELTOP, ELTYP, I,
     *     IABSS, IB, IBT, IBTDB, ICOORD, ID, IDB, IDIAG, IELK,
     *     IELM, IELTOP, IFTF, IFUN, IGDER, IGEOM, IJAC, IJACIN,
     *     ILDER, INF, IQUAD, IRESTR, ISHP, ISTEER, ISUB, ISYSK,
     *     ISYSM, ITEST, ITSHP, IWGHT, J, JABSS, JB, JBT, JBTDB,
     *     JCOORD, JD, JDB, JELK, JELM, JELTOP, JFTF, JGDER,
     *     JGEOM, JJAC, JJACIN, JLDER, JNF, JRESTR, JSHP, JSYSK,
     *     JTSHP, K, NELE, NF, NIN, NMODES, NODEL, NODNUM,
     *     NOUT, NQP, NUMSS, RESNOD, RESTR, STEER, TOTDOF,
     *     TOTELS, TOTNOD
      DOUBLE PRECISION ABSS, AREA, B, BT, BTDB, COORD, D, DB,
     *     DET, DIAG, E, ELK, ELM, EPS, ETA, FTF, FUN, GDER,
     *     GEOM, JAC, JACIN, LDER, NU, QUOT, RHO, SHP, SUB,
     *     SYSK, SYSM, TOL, TSHP, VEPS, VTOL, WGHT, X, XI
      DIMENSION ABSS(3,9), B(6,24), BT(24,6), BTDB(24,24),
     *     D(6,6), DB(6,24), ELK(24,24), ELM(24,24),
     *     FTF(24,24), FUN(8), GDER(3,8), GEOM(8,3), JAC(3,3),
     *     JACIN(3,3), LDER(3,8), SHP(3,24), STEER(24),
     *     TSHP(24,3), WGHT(9)
C
C                            PROBLEM SIZE DEPENDENT ARRAYS
C
      DIMENSION COORD(100,3), DIAG(100), ELTOP(100,10),
     *     NF(100,3), RESTR(50,4), SUB(100), SYSK(100,100),
     *     SYSM(100)
C
      DATA IABSS /3/, IB /6/, IBT /24/, IBTDB /24/, ID /6/,
     *     IDB /6/, IELK /24/, IELM /24/, IFTF /24/, IFUN /8/,
     *     IGDER /3/, IGEOM /8/, IJAC /3/, IJACIN /3/, ILDER /3/,
     *     ISHP /3/, ISTEER /24/, ITSHP /24/, IWGHT /9/,
     *     JABSS /9/, JB /24/, JBT /6/, JBTDB /8/, JCOORD /3/,
     *     JD /6/, JDB /24/, JELK /24/, JELM /24/, JFTF /24/,
     *     JGDER /8/, JGEOM /3/, JJAC /3/, JJACIN /3/, JLDER /8/,
     *     JNF /3/, JRESTR /4/, JSHP /24/, JTSHP /3/
C
C                            PROBLEM SIZE DEPENDENT DATA STATEMENTS
C
      DATA ICOORD /100/, IDIAG /100/, IELTOP /100/, INF /100/,
     *     IRESTR /50/, ISUB /100/, ISYSK /100/, ISYSM /100/,
     *     JELTOP /10/, JSYSK /100/
C
      DATA NIN /5/, NOUT /6/
C
C                            SET ITEST FOR FULL CHECKING
C
      ITEST = 0
C
C*                           **********************
C*                           *                    *
C*                           * INPUT DATA SECTION *
C*                           *                    *
C*                           **********************
C
C                            INPUT OF NODAL GEOMETRY
C
      WRITE (NOUT,9010)
      READ (NIN,8010) TOTNOD, DIMEN
      WRITE (NOUT,9020) TOTNOD, DIMEN
      DO 1010 I=1,TOTNOD
      READ (NIN,8020) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
      WRITE (NOUT,9030) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
 1010 CONTINUE
C
C                            INPUT OF ELEMENT TOPOLOGY
C
      WRITE (NOUT,9040)
      READ (NIN,8010) ELTYP, TOTELS, NODEL
      WRITE (NOUT,9020) ELTYP, TOTELS, NODEL
      DO 1020 I=1,TOTELS
      READ (NIN,8010) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      WRITE (NOUT,9020) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      ELTOP(ELNUM,1) = ELTYP
      ELTOP(ELNUM,2) = NODEL
 1020 CONTINUE
C
C                            INPUT OF MATERIAL PROPERTIES AND
C                            CONSTRUCTION OF STRESS-STRAIN MATRIX D
C                            FOR PLANE STRAIN
C
      WRITE (NOUT,9050)
      READ (NIN,8030) NU, E, RHO
      WRITE (NOUT,9060) NU, E, RHO
      CALL DPSN(D, ID, JD, E, NU, NUMSS, ITEST)
C
C                            INPUT OF NUMBER OF DEGREES OF FREEDOM
C                            PER NODE, INPUT OF RESTRAINED NODE
C                            DATA AND CONSTRUCTION OF NODAL FREEDOM
C                            ARRAY NF
C
      WRITE (NOUT,9070)
      READ (NIN,8010) DOFNOD
      WRITE (NOUT,9020) DOFNOD
      READ (NIN,8010) RESNOD
      WRITE (NOUT,9020) RESNOD
      K = DOFNOD + 1
      DO 1030 I=1,RESNOD
      READ (NIN,8010) (RESTR(I,J),J=1,K)
      WRITE (NOUT,9020) (RESTR(I,J),J=1,K)
 1030 CONTINUE
      CALL FORMNF(RESTR, IRESTR, JRESTR, RESNOD, TOTNOD, DOFNOD,
     *     NF, INF, JNF, TOTDOF, ITEST)
      READ (NIN,8010) NMODES
C
C*                           *******************************
C*                           *                             *
C*                           * SYSTEM STIFFNESS MATRIX AND *
C*                           *     MASS MATRIX ASSEMBLY    *
C*                           *                             *
C*                           *******************************
C
      CALL MATNUL(SYSK, ISYSK, JSYSK, TOTDOF, TOTDOF, ITEST)
      CALL VECNUL(SYSM, ISYSM, TOTDOF, ITEST)
      DOFEL = NODEL*DOFNOD
      CALL QQUA4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      DO 1070 NELE=1,TOTELS
      AREA = 0.0D0
      CALL ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C
C                            INTEGRATION LOOP FOR ELEMENT STIFFNESS
C                            AND ELEMENT LUMPED MASS USING NQP
C                            QUADRATURE POINTS
C
      CALL MATNUL(ELK, IELK, JELK, DOFEL, DOFEL, ITEST)
      CALL MATNUL(ELM, IELM, JELM, DOFEL, DOFEL, ITEST)
      DO 1060 IQUAD=1,NQP
C
C                            FORM LINEAR SHAPE FUNCTION AND SPACE
C                            DERIVATIVES IN THE LOCAL CORRDINATES.
C                            TRANSFORM LOCAL DERIVATIVES TO GLOBAL
C                            COORDINATE SYSTEM
C
      XI = ABSS(1,IQUAD)
      ETA = ABSS(2,IQUAD)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
      CALL MATMUL(LDER, ILDER, JLDER, GEOM, IGEOM, JGEOM, JAC,
     *     IJAC, JJAC, DIMEN, NODEL, DIMEN, ITEST)
      CALL MATINV(JAC, IJAC, JJAC, JACIN, IJACIN, JJACIN, DIMEN,
     *     DET, ITEST)
      CALL MATMUL(JACIN, IJACIN, JJACIN, LDER, ILDER, JLDER, GDER,
     *     IGDER, JGDER, DIMEN, DIMEN, NODEL, ITEST)
C
C                            FORMATION OF STRAIN-DISPLACEMENT
C                            MATRIX B AND FORMATION OF INTEGRAND
C                            FOR ELEMENT STIFFNESS MATRIX ELK
C
      CALL B2C2(B, IB, JB, GDER, IGDER, JGDER, NODEL, ITEST)
      CALL MATMUL(D, ID, JD, B, IB, JB, DB, IDB, JDB, NUMSS,
     *     NUMSS, DOFEL, ITEST)
      CALL MATRAN(B, IB, JB, BT, IBT, JBT, NUMSS, DOFEL, ITEST)
      CALL MATMUL(BT, IBT, JBT, DB, IDB, JDB, BTDB, IBTDB, JBTDB,
     *     DOFEL, NUMSS, DOFEL, ITEST)
C
C                            FORMATION OF INTEGRAND FOR ELEMENT
C                            MASS MATRIX ELM
C
      CALL SHAPFN(SHP, ISHP, JSHP, FUN, IFUN, NODEL, DOFNOD, ITEST)
      CALL MATRAN(SHP, ISHP, JSHP, TSHP, ITSHP, JTSHP, DOFNOD,
     *     DOFEL, ITEST)
      CALL MATMUL(TSHP, ITSHP, JTSHP, SHP, ISHP, JSHP, FTF, IFTF,
     *     JFTF, DOFEL, DOFNOD, DOFEL, ITEST)
C
      QUOT = DABS(DET)*WGHT(IQUAD)
      AREA = AREA + QUOT
      DO 1050 I=1,DOFEL
      DO 1040 J=1,DOFEL
      BTDB(I,J) = BTDB(I,J)*QUOT
      FTF(I,J) = FTF(I,J)*QUOT*RHO
 1040 CONTINUE
 1050 CONTINUE
      CALL MATADD(ELK, IELK, JELK, BTDB, IBTDB, JBTDB, DOFEL,
     *     DOFEL, ITEST)
      CALL MATADD(ELM, IELM, JELM, FTF, IFTF, JFTF, DOFEL, DOFEL,
     *     ITEST)
 1060 CONTINUE
C
C                            ASSEMBLY OF SYSTEM STIFFNESS MATRIX
C                            SYSK, SYSTEM LUMPED MASS MATRIX SYSM
C
      CALL DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      CALL ASFUL(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, STEER,
     *     ISTEER, DOFEL, ITEST)
      CALL ASLMS(SYSM, ISYSM, ELM, IELM, JELM, STEER, ISTEER,
     *     DOFEL, DOFNOD, AREA, ITEST)
 1070 CONTINUE
C
C*                           *********************
C*                           *                   *
C*                           * EQUATION SOLUTION *
C*                           *                   *
C*                           *********************
C
C
C                            REDUCTION OF SYSTEM MASS MATRIX BY
C                            CHOLESKI REDUCTION AND CONSTRUCTION OF
C                            MODIFIED SYSTEM STIFFNESS MATRIX
C
      DO 1080 I=1,TOTDOF
      SYSM(I) = 1.0D0/DSQRT(SYSM(I))
 1080 CONTINUE
      DO 1100 I=1,TOTDOF
      DO 1090 J=1,TOTDOF
      SYSK(I,J) = SYSM(I)*SYSK(I,J)*SYSM(J)
 1090 CONTINUE
 1100 CONTINUE
C
C                            HOUSEHOLDER TRIDIAGONALISATION OF SYSK
C                            AND EIGENVALUE AND EIGENVECTOR
C                            RECOVERY USING QL TRANSFORMATIONS
C
      TOL = VTOL(X)
      CALL HOUSE(SYSK, ISYSK, JSYSK, SYSK, ISYSK, JSYSK, DIAG,
     *     IDIAG, SUB, ISUB, TOTDOF, TOL, ITEST)
      EPS = VEPS(X)
      CALL QLVEC(DIAG, IDIAG, SUB, ISUB, SYSK, ISYSK, JSYSK,
     *     TOTDOF, EPS, ITEST)
      WRITE (NOUT,9080)
      CALL PRTVEC(DIAG, IDIAG, TOTDOF, NOUT, ITEST)
      DO 1120 J=1,NMODES
      DO 1110 I=1,TOTDOF
      DIAG(I) = SYSK(I,J)*SYSM(I)
 1110 CONTINUE
      WRITE (NOUT,9090) J
      CALL PRTVEC(DIAG, IDIAG, TOTDOF, NOUT, ITEST)
 1120 CONTINUE
      STOP
 8010 FORMAT (16I5)
 8020 FORMAT (I5, 6F10.0)
 8030 FORMAT (6F10.0)
 9010 FORMAT (//25H **** NODAL GEOMETRY ****//1H )
 9020 FORMAT (1H , 16I5)
 9030 FORMAT (1H , I5, 6F10.5)
 9040 FORMAT (//27H **** ELEMENT TOPOLOGY ****//1H )
 9050 FORMAT (//30H **** MATERIAL PROPERTIES ****//1H )
 9060 FORMAT (1H , F10.5, E10.3, F10.5)
 9070 FORMAT (//25H **** RESTRAINT DATA ****//1H )
 9080 FORMAT (//22H **** FREQUENCIES ****/1H )
 9090 FORMAT (/21H MODE SHAPE FOR MODE , I5/1H )
      END
C***********************************************************************
C$SPLIT$SEG2P2$*********************************************************
C***********************************************************************
      INTEGER DIF, DIMEN, DOFEL, DOFNOD, ELNUM, ELTOP, ELTYP,
     *     FREDOM, HBAND, I, IA0, IA1, IABSS, IB, IBT, IBTDB,
     *     ICOORD, ID, ID2A0, ID2A1, IDA0, IDA1, IDB, IELK,
     *     IELM, IELTOP, IFUN, IGDER, IGEOM, IJAC, IJACIN,
     *     ILDER, ILOADS, INF, INTN, IQUAD, IRESTR, ISHP, ISTEER,
     *     ISYSK, ISYSM, ISYSW, ITEST, ITSHP, IWGHT, IWORK,
     *     J, JABSS, JB, JBT, JBTDB, JCOORD, JD, JDB, JELK,
     *     JELM, JELTOP, JGDER, JGEOM, JJAC, JJACIN, JLDER,
     *     JNF, JNTN, JRESTR, JSHP, JSYSK, JSYSM, JSYSW, JTSHP,
     *     K, LODFRE, NELE, NF, NIN, NODEL, NODNUM, NOUT, NQP,
     *     NSTEPS, NUMLOD, NUMSS, NWORK, OUTNOD, RESNOD, RESTR,
     *     STEER, TOTDOF, TOTELS, TOTLOD, TOTNOD
      DOUBLE PRECISION A0, A1, ABSS, ALPHA, AMP, AREA, B, BETA,
     *     BT, BTDB, C1, C2, C3, C4, C5, C6, C7, COORD, D,
     *     D2A0, D2A1, DA0, DA1, DB, DET, DTIM, E, ELK, ELM,
     *     ETA, FORCE, FUN, GDER, GEOM, JAC, JACIN, LDER, LOAD,
     *     LOADS, NTN, NU, OMEGA, PHASE, QUOT, RHO, SHP, SYSK,
     *     SYSM, SYSW, T, THETA, TIME, TSHP, WGHT, WORK, XI
      LOGICAL FIRST
      DIMENSION ABSS(3,9), B(6,24), BT(24,6), BTDB(24,24),
     *     D(6,6), DB(6,24), ELK(24,24), ELM(24,24), FUN(8),
     *     GDER(3,8), GEOM(8,3), JAC(3,3), JACIN(3,3),
     *     LDER(3,8), LODFRE(20), NTN(24,24), NWORK(8),
     *     SHP(3,24), STEER(8), TSHP(24,3), WGHT(9)
C
C                            PROBLEM SIZE DEPENDENT ARRAYS
C
      DIMENSION A0(100), A1(100), COORD(100,3), D2A0(100),
     *     D2A1(100), DA0(100), DA1(100), ELTOP(100,10),
     *     LOADS(100), NF(100,3), RESTR(50,4), SYSK(100,25),
     *     SYSM(100,25), SYSW(100,25), WORK(100)
C
      DATA IABSS /3/, IB /6/, IBT /24/, IBTDB /24/, ID /6/,
     *     IDB /6/, IELK /24/, IELM /24/, IFUN /8/, IGDER /3/,
     *     IGEOM /8/, IJAC /3/, IJACIN /3/, ILDER /3/,
     *     INTN /24/, ISHP /3/, ISTEER /8/, ITSHP /24/,
     *     IWGHT /9/, JABSS /9/, JB /24/, JBT /6/, JBTDB /24/,
     *     JD /6/, JDB /24/, JELK /24/, JELM /24/, JGDER /8/,
     *     JGEOM /3/, JJAC /3/, JJACIN /3/, JLDER /8/,
     *     JNTN /24/, JSHP /24/, JTSHP /3/
C
C                            PROBLEM SIZE DEPENDENT DATA STATEMENTS
C
      DATA IA0 /100/, IA1 /100/, ICOORD /100/, ID2A0 /100/,
     *     ID2A1 /100/, IDA0 /100/, IDA1 /100/, IELTOP /100/,
     *     ILOADS /100/, INF /100/, IRESTR /50/, ISYSK /100/,
     *     ISYSM /100/, ISYSW /100/, IWORK /100/, JCOORD /3/,
     *     JELTOP /10/, JNF /3/, JRESTR /4/, JSYSK /25/,
     *     JSYSM /25/, JSYSW /25/
C
      DATA NIN /5/, NOUT /6/
C
C                            SET UP TIME DEPENDENT FORCING
C                            FUNCTION AS STATEMENT FUNCTION
C
      FORCE(T) = AMP*DCOS(OMEGA*T+PHASE)
C
C                            SET ITEST FOR FULL CHECKING
C
      ITEST = 0
C
C*                           **********************
C*                           *                    *
C*                           * INPUT DATA SECTION *
C*                           *                    *
C*                           **********************
C
C                            INPUT OF NODAL GEOMETRY
C
      WRITE (NOUT,9010)
      READ (NIN,8010) TOTNOD, DIMEN
      WRITE (NOUT,9020) TOTNOD, DIMEN
      DO 1010 I=1,TOTNOD
      READ (NIN,8020) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
      WRITE (NOUT,9030) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
 1010 CONTINUE
C
C                            INPUT OF ELEMENT TOPOLOGY
C
      WRITE (NOUT,9040)
      READ (NIN,8010) ELTYP, TOTELS, NODEL
      WRITE (NOUT,9020) ELTYP, TOTELS, NODEL
      DO 1020 I=1,TOTELS
      READ (NIN,8010) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      WRITE (NOUT,9020) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      ELTOP(ELNUM,1) = ELTYP
      ELTOP(ELNUM,2) = NODEL
 1020 CONTINUE
C
C                            INPUT OF MATERIAL PROPERTIES AND
C                            CONSTRUCTION OF STRESS-STRAIN MATRIX D
C                            FOR PLANE STRAIN
C
      WRITE (NOUT,9050)
      READ (NIN,8030) NU, E, RHO
      WRITE (NOUT,9060) NU, E, RHO
      CALL DPSN(D, ID, JD, E, NU, NUMSS, ITEST)
C
C                            INPUT OF TIME STEPPING PARAMETERS,
C                            RAYLEIGH DAMPING COEFFICIENTS
C
      READ (NIN,8020) NSTEPS, DTIM, THETA
      WRITE (NOUT,9030) NSTEPS, DTIM, THETA
      READ (NIN,8030) ALPHA, BETA
      WRITE (NOUT,9060) ALPHA, BETA
C
C                            INPUT OF NUMBER OF DEGREES OF FREEDOM
C                            PER NODE, INPUT OF RESTRAINED NODE
C                            DATA AND CONSTRUCTION OF NODAL FREEDOM
C                            ARRAY NF
C
      WRITE (NOUT,9070)
      READ (NIN,8010) DOFNOD
      WRITE (NOUT,9020) DOFNOD
      READ (NIN,8010) RESNOD
      WRITE (NOUT,9020) RESNOD
      K = DOFNOD + 1
      DO 1030 I=1,RESNOD
      READ (NIN,8010) (RESTR(I,J),J=1,K)
      WRITE (NOUT,9020) (RESTR(I,J),J=1,K)
 1030 CONTINUE
      CALL FORMNF(RESTR, IRESTR, JRESTR, RESNOD, TOTNOD, DOFNOD,
     *     NF, INF, JNF, TOTDOF, ITEST)
C
C                            LOADING DATA INPUT AND FORCING
C                            FUNCTION PARAMETERS
C
      READ (NIN,8030) AMP, OMEGA, PHASE
      WRITE (NOUT,9060) AMP, OMEGA, PHASE
      READ (NIN,8010) NUMLOD
      WRITE (NOUT,9020) NUMLOD
      TOTLOD = 0
      DO 1050 I=1,NUMLOD
      READ (NIN,8010) NODNUM, (NWORK(J),J=1,DOFNOD)
      WRITE (NOUT,9020) NODNUM, (NWORK(J),J=1,DOFNOD)
      DO 1040 J=1,DOFNOD
      IF (NWORK(J).EQ.0) GO TO 1040
      K = NF(NODNUM,J)
      IF (K.EQ.0) GO TO 1040
      TOTLOD = TOTLOD + 1
      LODFRE(I) = K
 1040 CONTINUE
 1050 CONTINUE
C
C                            OUTPUT CONTROL DATA
C
      READ (NIN,8010) OUTNOD, FREDOM
      WRITE (NOUT,9020) OUTNOD, FREDOM
C
C
C                            CALCULATION OF SEMI-BANDWIDTH
C
      FIRST = .TRUE.
      DO 1060 NELE=1,TOTELS
      CALL FREDIF(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, FIRST, DIF, ITEST)
 1060 CONTINUE
      HBAND = DIF + 1
C
C*                           *******************************
C*                           *                             *
C*                           * SYSTEM STIFFNESS MATRIX AND *
C*                           *     MASS MATRIX ASSEMBLY    *
C*                           *                             *
C*                           *******************************
C
      CALL VECNUL(WORK, IWORK, TOTDOF, ITEST)
      CALL MATNUL(SYSK, ISYSK, JSYSK, TOTDOF, HBAND, ITEST)
      CALL MATNUL(SYSM, ISYSM, JSYSM, TOTDOF, HBAND, ITEST)
      DOFEL = NODEL*DOFNOD
      CALL QQUA4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      DO 1100 NELE=1,TOTELS
      AREA = 0.0D0
      CALL ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C
C                            INTEGRATION LOOP FOR ELEMENT STIFFNESS
C                            AND ELEMENT LUMPED MASS USING NQP
C                            QUADRATURE POINTS
C
      CALL MATNUL(ELK, IELK, JELK, DOFEL, DOFEL, ITEST)
      CALL MATNUL(ELM, IELM, JELM, DOFEL, DOFEL, ITEST)
      DO 1090 IQUAD=1,NQP
C
C                            FORM LINEAR SHAPE FUNCTION AND SPACE
C                            DERIVATIVES IN THE LOCAL CORRDINATES.
C                            TRANSFORM LOCAL DERIVATIVES TO GLOBAL
C                            COORDINATE SYSTEM
C
      XI = ABSS(1,IQUAD)
      ETA = ABSS(2,IQUAD)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
      CALL MATMUL(LDER, ILDER, JLDER, GEOM, IGEOM, JGEOM, JAC,
     *     IJAC, JJAC, DIMEN, NODEL, DIMEN, ITEST)
      CALL MATINV(JAC, IJAC, JJAC, JACIN, IJACIN, JJACIN, DIMEN,
     *     DET, ITEST)
      CALL MATMUL(JACIN, IJACIN, JJACIN, LDER, ILDER, JLDER, GDER,
     *     IGDER, JGDER, DIMEN, DIMEN, NODEL, ITEST)
C
C                            FORMATION OF STRAIN-DISPLACEMENT
C                            MATRIX B AND FORMATION OF INTEGRAND
C                            FOR ELEMENT STIFFNESS MATRIX ELK
C
      CALL B2C2(B, IB, JB, GDER, IGDER, JGDER, NODEL, ITEST)
      CALL MATMUL(D, ID, JD, B, IB, JB, DB, IDB, JDB, NUMSS,
     *     NUMSS, DOFEL, ITEST)
      CALL MATRAN(B, IB, JB, BT, IBT, JBT, NUMSS, DOFEL, ITEST)
      CALL MATMUL(BT, IBT, JBT, DB, IDB, JDB, BTDB, IBTDB, JBTDB,
     *     DOFEL, NUMSS, DOFEL, ITEST)
C
C                            FORMATION OF INTEGRAND FOR ELEMENT
C                            MASS MATRIX ELM
C
      CALL SHAPFN(SHP, ISHP, JSHP, FUN, IFUN, NODEL, DOFNOD, ITEST)
      CALL MATRAN(SHP, ISHP, JSHP, TSHP, ITSHP, JTSHP, DOFNOD,
     *     DOFEL, ITEST)
      CALL MATMUL(TSHP, ITSHP, JTSHP, SHP, ISHP, JSHP, NTN, INTN,
     *     JNTN, DOFEL, DOFNOD, DOFEL, ITEST)
C
      QUOT = DABS(DET)*WGHT(IQUAD)
      AREA = AREA + QUOT
      DO 1080 I=1,DOFEL
      DO 1070 J=1,DOFEL
      BTDB(I,J) = BTDB(I,J)*QUOT
      NTN(I,J) = NTN(I,J)*QUOT*RHO
 1070 CONTINUE
 1080 CONTINUE
      CALL MATADD(ELK, IELK, JELK, BTDB, IBTDB, JBTDB, DOFEL,
     *     DOFEL, ITEST)
      CALL MATADD(ELM, IELM, JELM, NTN, INTN, JNTN, DOFEL, DOFEL,
     *     ITEST)
 1090 CONTINUE
C
C                            ASSEMBLY OF SYSTEM STIFFNESS MATRIX
C                            SYSK, SYSTEM LUMPED MASS MATRIX SYSM
C
      CALL DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      CALL ASSYM(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
      CALL ASSYM(SYSM, ISYSM, JSYSM, ELM, IELM, JELM, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
 1100 CONTINUE
C
C*                           *********************
C*                           *                   *
C*                           * EQUATION SOLUTION *
C*                           *                   *
C*                           *********************
C
C                            SET INITIAL CONDITIONS
C
      CALL VECNUL(A0, IA0, TOTDOF, ITEST)
      CALL VECNUL(DA0, IDA0, TOTDOF, ITEST)
      CALL VECNUL(D2A0, ID2A0, TOTDOF, ITEST)
      C1 = ALPHA + 1.D0/(THETA*DTIM)
      C2 = BETA + THETA*DTIM
      C3 = (1.D0-THETA)*DTIM
      C4 = BETA - (1.D0-THETA)*DTIM
      C5 = 1.D0/(THETA*DTIM)
      C6 = (1.D0-THETA)/THETA
      C7 = THETA*DTIM
C
C                            CONSTRUCTION OF MODIFIED SYSTEM
C                            MATRICES AND REDUCTION OF LEFT HAND
C                            SIDE MATRIX SYSK BY CHOLESKI
C                            REDUCTION.
C
      DO 1120 I=1,TOTDOF
      DO 1110 J=1,HBAND
      SYSW(I,J) = C1*SYSM(I,J) + C4*SYSK(I,J)
      SYSK(I,J) = C1*SYSM(I,J) + C2*SYSK(I,J)
      SYSM(I,J) = SYSM(I,J)/THETA
 1110 CONTINUE
 1120 CONTINUE
      CALL CHORDN(SYSK, ISYSK, JSYSK, TOTDOF, HBAND, ITEST)
C
C                            SOLUTION FOR DISPLACEMENTS, VELOCITIES
C                            AND ACCELERATIONS AT EACH TIME STEP
C
      WRITE (NOUT,9080) OUTNOD, FREDOM
      FREDOM = NF(OUTNOD,FREDOM)
      WRITE (NOUT,9090)
      WRITE (NOUT,9100)
      TIME = 0.0D0
      DO 1150 I=1,NSTEPS
      TIME = TIME + DTIM
      CALL VECNUL(LOADS, ILOADS, TOTDOF, ITEST)
      LOAD = C7*FORCE(TIME) + C3*FORCE(TIME-DTIM)
      DO 1130 J=1,TOTLOD
      K = LODFRE(J)
      LOADS(K) = LOAD
 1130 CONTINUE
      CALL MVSYB(SYSM, ISYSM, JSYSM, DA0, IDA0, WORK, IWORK,
     *     TOTDOF, HBAND, ITEST)
      CALL VECADD(LOADS, ILOADS, WORK, IWORK, TOTDOF, ITEST)
      CALL MVSYB(SYSW, ISYSW, JSYSW, A0, IA0, WORK, IWORK, TOTDOF,
     *     HBAND, ITEST)
      CALL VECADD(LOADS, ILOADS, WORK, IWORK, TOTDOF, ITEST)
      CALL CHOSUB(SYSK, ISYSK, JSYSK, LOADS, ILOADS, TOTDOF,
     *     HBAND, ITEST)
      CALL VECCOP(LOADS, ILOADS, A1, IA1, TOTDOF, ITEST)
      DO 1140 K=1,TOTDOF
      DA1(K) = C5*(A1(K)-A0(K)) - C6*DA0(K)
      D2A1(K) = C5*(DA1(K)-DA0(K)) - C6*D2A0(K)
 1140 CONTINUE
      CALL VECCOP(A1, IA1, A0, IA0, TOTDOF, ITEST)
      CALL VECCOP(DA1, IDA1, DA0, IDA0, TOTDOF, ITEST)
      CALL VECCOP(D2A1, ID2A1, D2A0, ID2A0, TOTDOF, ITEST)
      WRITE (NOUT,9110) TIME, A1(FREDOM), DA1(FREDOM), D2A1(FREDOM)
 1150 CONTINUE
      STOP
 8010 FORMAT (16I5)
 8020 FORMAT (I5, 6F10.0)
 8030 FORMAT (6F10.0)
 9010 FORMAT (1H //25H **** NODAL GEOMETRY ****//1H )
 9020 FORMAT (1H , 16I5)
 9030 FORMAT (1H , I5, 6F10.5)
 9040 FORMAT (1H //27H **** ELEMENT TOPOLOGY ****//1H )
 9050 FORMAT (1H //30H **** MATERIAL PROPERTIES ****//1H )
 9060 FORMAT (1H , 10D10.3)
 9070 FORMAT (1H //25H **** RESTRAINT DATA ****//1H )
 9080 FORMAT (18H1RESULTS FOR NODE , I5, 2X, 8HFREEDOM , I1///1H )
 9090 FORMAT (1H ///45X, 1H', 14X, 1H")
 9100 FORMAT (1H , 14X, 1HT, 3(14X, 1HV)//1H )
 9110 FORMAT (1H , 10X, 4(D10.3, 5X))
      END
C***********************************************************************
C$SPLIT$SEG2P3$*********************************************************
C***********************************************************************
      INTEGER DIMEN, DOFEL, DOFNOD, ELNUM, ELTOP, ELTYP, I,
     *     IABSS, IB, IBT, IBTDB, ICOORD, ID, IDB, IDIAG, IELK,
     *     IELM, IELTOP, IFUN, IGDER, IGEOM, IJAC, IJACIN,
     *     ILDER, INF, INTN, IQUAD, IRESTR, ISHP, ISTEER, ISTEP,
     *     ISUB, ISYSK, ISYSM, ITEST, ITSHP, IWGHT, IWORK,
     *     J, JABSS, JB, JBT, JBTDB, JCOORD, JD, JDB, JELK,
     *     JELM, JELTOP, JGDER, JGEOM, JJAC, JJACIN, JLDER,
     *     JNF, JNTN, JRESTR, JSHP, JSYSK, JTSHP, K, L, LODFRE,
     *     NELE, NF, NIN, NMODES, NODEL, NODNUM, NOUT, NQP,
     *     NSTEPS, NUMLOD, NUMSS, NWORK, RESNOD, RESTR, STEER,
     *     TOTDOF, TOTELS, TOTLOD, TOTNOD
      DOUBLE PRECISION ABSS, AMP, AREA, B, BT, BTDB, COORD,
     *     D, DAMPR, DB, DET, DIAG, DTIM, E, ELK, ELM, EPS,
     *     ETA, FUN, GDER, GENSOL, GEOM, JAC, JACIN, LDER,
     *     NTN, NU, OMEGA, P, QUOT, RHO, SHP, SUB, SYSK, SYSM,
     *     TIME, TOL, TSHP, VEPS, VTOL, WGHT, WORK, X, XI,
     *     XMODE
      DIMENSION ABSS(3,9), B(6,24), BT(24,6), BTDB(24,24),
     *     D(6,6), DB(6,24), ELK(24,24), ELM(24,24), FUN(8),
     *     GDER(3,8), GEOM(8,3), JAC(3,3), JACIN(3,3),
     *     LDER(3,8), LODFRE(20), NTN(24,24), SHP(3,24),
     *     STEER(24), TSHP(24,3), WGHT(9)
C
C                            PROBLEM SIZE DEPENDENT ARRAYS
C
      DIMENSION COORD(100,3), DIAG(100), ELTOP(100,10),
     *     NF(100,3), NWORK(3), RESTR(20,4), SUB(100),
     *     SYSK(100,100), SYSM(100), WORK(100), XMODE(100)
C
      DATA IABSS /3/, IB /6/, IBT /24/, IBTDB /24/, ID /6/,
     *     IDB /6/, IELK /24/, IELM /24/, IFUN /8/, IGDER /3/,
     *     IGEOM /8/, IJAC /3/, IJACIN /3/, ILDER /3/,
     *     INTN /24/, ISHP /3/, ISTEER /24/, ITSHP /24/,
     *     IWGHT /9/, JABSS /9/, JB /24/, JBT /6/, JBTDB /8/,
     *     JD /6/, JDB /24/, JELK /24/, JELM /24/, JGDER /8/,
     *     JGEOM /3/, JJAC /3/, JJACIN /3/, JLDER /8/,
     *     JNTN /24/, JSHP /24/, JTSHP /3/
C
C                            PROBLEM SIZE DEPENDENT DATA STATEMENTS
C
C
      DATA ICOORD /100/, IDIAG /100/, IELTOP /100/, INF /100/,
     *     IRESTR /20/, ISUB /100/, ISYSK /100/, ISYSM /100/,
     *     IWORK /100/, JCOORD /3/, JELTOP /10/, JNF /3/,
     *     JRESTR /4/, JSYSK /100/
C
      DATA NIN /5/, NOUT /6/
C
C                            SET ITEST FOR FULL CHECKING
C
      ITEST = 0
C
C*                           **********************
C*                           *                    *
C*                           * INPUT DATA SECTION *
C*                           *                    *
C*                           **********************
C
C                            INPUT OF NODAL GEOMETRY
C
      WRITE (NOUT,9010)
      READ (NIN,8010) TOTNOD, DIMEN
      WRITE (NOUT,9020) TOTNOD, DIMEN
      DO 1010 I=1,TOTNOD
      READ (NIN,8020) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
      WRITE (NOUT,9030) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
 1010 CONTINUE
C
C                            INPUT OF ELEMENT TOPOLOGY
C
      WRITE (NOUT,9040)
      READ (NIN,8010) ELTYP, TOTELS, NODEL
      WRITE (NOUT,9020) ELTYP, TOTELS, NODEL
      DO 1020 I=1,TOTELS
      READ (NIN,8010) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      WRITE (NOUT,9020) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      ELTOP(ELNUM,1) = ELTYP
      ELTOP(ELNUM,2) = NODEL
 1020 CONTINUE
C
C                            INPUT OF MATERIAL PROPERTIES AND
C                            CONSTRUCTION OF STRESS-STRAIN MATRIX D
C                            FOR PLANE STRAIN
C
      WRITE (NOUT,9050)
      READ (NIN,8030) NU, E, RHO
      WRITE (NOUT,9060) NU, E, RHO
      CALL DPSN(D, ID, JD, E, NU, NUMSS, ITEST)
C
C                            INPUT OF NUMBER OF DEGREES OF FREEDOM
C                            PER NODE, INPUT OF RESTRAINED NODE
C                            DATA AND CONSTRUCTION OF NODAL FREEDOM
C                            ARRAY NF
C
      WRITE (NOUT,9070)
      READ (NIN,8010) DOFNOD
      WRITE (NOUT,9020) DOFNOD
      READ (NIN,8010) RESNOD
      WRITE (NOUT,9020) RESNOD
      K = DOFNOD + 1
      DO 1030 I=1,RESNOD
      READ (NIN,8010) (RESTR(I,J),J=1,K)
      WRITE (NOUT,9020) (RESTR(I,J),J=1,K)
 1030 CONTINUE
      CALL FORMNF(RESTR, IRESTR, JRESTR, RESNOD, TOTNOD, DOFNOD,
     *     NF, INF, JNF, TOTDOF, ITEST)
C
C                            INPUT NUMBER OF MODES AND DAMPING
C                            RATIO
C
      WRITE (NOUT,9080)
      READ (NIN,8020) NMODES, DAMPR
      WRITE (NOUT,9030) NMODES, DAMPR
C
C                            INPUT TIME STEP LENGTH AND NUMBER OF
C                            STEPS
C
      WRITE (NOUT,9090)
      READ (NIN,8040) DTIM, NSTEPS
      WRITE (NOUT,9100) DTIM, NSTEPS
C
C                            INPUT LOADING DATA
C
      WRITE (NOUT,9110)
      READ (NIN,8010) NUMLOD
      WRITE (NOUT,9020) NUMLOD
      TOTLOD = 0
      DO 1050 I=1,NUMLOD
      READ (NIN,8010) NODNUM, (NWORK(J),J=1,DOFNOD)
      WRITE (NOUT,9020) NODNUM, (NWORK(J),J=1,DOFNOD)
      DO 1040 J=1,DOFNOD
      IF (NWORK(J).EQ.0) GO TO 1040
      K = NF(NODNUM,J)
      IF (K.EQ.0) GO TO 1040
      TOTLOD = TOTLOD + 1
      LODFRE(TOTLOD) = K
 1040 CONTINUE
 1050 CONTINUE
C
C                            INPUT FORCING FUNCTION DATA
C
      WRITE (NOUT,9120)
      READ (NIN,8030) AMP, OMEGA
      WRITE (NOUT,9060) AMP, OMEGA
C
C*                           *******************************
C*                           *                             *
C*                           * SYSTEM STIFFNESS MATRIX AND *
C*                           *     MASS MATRIX ASSEMBLY    *
C*                           *                             *
C*                           *******************************
C
      CALL MATNUL(SYSK, ISYSK, JSYSK, TOTDOF, TOTDOF, ITEST)
      CALL VECNUL(SYSM, ISYSM, TOTDOF, ITEST)
      DOFEL = NODEL*DOFNOD
      CALL QQUA4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      DO 1090 NELE=1,TOTELS
      AREA = 0.0D0
      CALL ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C
C                            INTEGRATION LOOP FOR ELEMENT STIFFNESS
C                            AND ELEMENT LUMPED MASS USING NQP
C                            QUADRATURE POINTS
C
      CALL MATNUL(ELK, IELK, JELK, DOFEL, DOFEL, ITEST)
      CALL MATNUL(ELM, IELM, JELM, DOFEL, DOFEL, ITEST)
      DO 1080 IQUAD=1,NQP
C
C                            FORM LINEAR SHAPE FUNCTION AND SPACE
C                            DERIVATIVES IN THE LOCAL CORRDINATES.
C                            TRANSFORM LOCAL DERIVATIVES TO GLOBAL
C                            COORDINATE SYSTEM
C
      XI = ABSS(1,IQUAD)
      ETA = ABSS(2,IQUAD)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
      CALL MATMUL(LDER, ILDER, JLDER, GEOM, IGEOM, JGEOM, JAC,
     *     IJAC, JJAC, DIMEN, NODEL, DIMEN, ITEST)
      CALL MATINV(JAC, IJAC, JJAC, JACIN, IJACIN, JJACIN, DIMEN,
     *     DET, ITEST)
      CALL MATMUL(JACIN, IJACIN, JJACIN, LDER, ILDER, JLDER, GDER,
     *     IGDER, JGDER, DIMEN, DIMEN, NODEL, ITEST)
C
C                            FORMATION OF STRAIN-DISPLACEMENT
C                            MATRIX B AND FORMATION OF INTEGRAND
C                            FOR ELEMENT STIFFNESS MATRIX ELK
C
      CALL B2C2(B, IB, JB, GDER, IGDER, JGDER, NODEL, ITEST)
      CALL MATMUL(D, ID, JD, B, IB, JB, DB, IDB, JDB, NUMSS,
     *     NUMSS, DOFEL, ITEST)
      CALL MATRAN(B, IB, JB, BT, IBT, JBT, NUMSS, DOFEL, ITEST)
      CALL MATMUL(BT, IBT, JBT, DB, IDB, JDB, BTDB, IBTDB, JBTDB,
     *     DOFEL, NUMSS, DOFEL, ITEST)
C
C                            FORMATION OF INTEGRAND FOR ELEMENT
C                            MASS MATRIX ELM
C
      CALL SHAPFN(SHP, ISHP, JSHP, FUN, IFUN, NODEL, DOFNOD, ITEST)
      CALL MATRAN(SHP, ISHP, JSHP, TSHP, ITSHP, JTSHP, DOFNOD,
     *     DOFEL, ITEST)
      CALL MATMUL(TSHP, ITSHP, JTSHP, SHP, ISHP, JSHP, NTN, INTN,
     *     JNTN, DOFEL, DOFNOD, DOFEL, ITEST)
C
      QUOT = DABS(DET)*WGHT(IQUAD)
      AREA = AREA + QUOT
      DO 1070 I=1,DOFEL
      DO 1060 J=1,DOFEL
      BTDB(I,J) = BTDB(I,J)*QUOT
      NTN(I,J) = NTN(I,J)*QUOT*RHO
 1060 CONTINUE
 1070 CONTINUE
      CALL MATADD(ELK, IELK, JELK, BTDB, IBTDB, JBTDB, DOFEL,
     *     DOFEL, ITEST)
      CALL MATADD(ELM, IELM, JELM, NTN, INTN, JNTN, DOFEL, DOFEL,
     *     ITEST)
 1080 CONTINUE
C
C                            ASSEMBLY OF SYSTEM STIFFNESS MATRIX
C                            SYSK, SYSTEM LUMPED MASS MATRIX SYSM
C
      CALL DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      CALL ASFUL(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, STEER,
     *     ISTEER, DOFEL, ITEST)
      CALL ASLMS(SYSM, ISYSM, ELM, IELM, JELM, STEER, ISTEER,
     *     DOFEL, DOFNOD, AREA, ITEST)
 1090 CONTINUE
C
C*                           *********************
C*                           *                   *
C*                           * EQUATION SOLUTION *
C*                           *                   *
C*                           *********************
C
C                            REDUCTION OF SYSTEM MASS MATRIX BY
C                            CHOLESKI REDUCTION AND CONSTRUCTION OF
C                            MODIFIED SYSTEM STIFFNESS MATRIX
C
      DO 1100 I=1,TOTDOF
      SYSM(I) = 1.0D0/DSQRT(SYSM(I))
 1100 CONTINUE
      DO 1120 I=1,TOTDOF
      DO 1110 J=1,TOTDOF
      SYSK(I,J) = SYSM(I)*SYSK(I,J)*SYSM(J)
 1110 CONTINUE
 1120 CONTINUE
C
C                            HOUSEHOLDER TRIDIAGONALISATION OF
C                            SYSK AND EIGENVALUE AND EIGENVECTOR
C                            RECOVERY USING QL TRANSFORMATIONS
C
      TOL = VTOL(X)
      CALL HOUSE(SYSK, ISYSK, JSYSK, SYSK, ISYSK, JSYSK, DIAG,
     *     IDIAG, SUB, ISUB, TOTDOF, TOL, ITEST)
      EPS = VEPS(X)
      CALL QLVEC(DIAG, IDIAG, SUB, ISUB, SYSK, ISYSK, JSYSK,
     *     TOTDOF, EPS, ITEST)
      WRITE (NOUT,9130)
      CALL PRTVEC(DIAG, IDIAG, TOTDOF, NOUT, ITEST)
      TIME = 0.D0
      DO 1180 ISTEP=1,NSTEPS
      TIME = TIME + DTIM
      WRITE (NOUT,9140) ISTEP, TIME
      DO 1150 J=1,NMODES
      DO 1130 I=1,TOTDOF
      WORK(I) = SYSK(I,J)*SYSM(I)
 1130 CONTINUE
      P = 0.0D0
      DO 1140 K=1,TOTLOD
      L = LODFRE(K)
      P = P + WORK(L)
 1140 CONTINUE
      XMODE(J) = GENSOL(TIME,P,DAMPR,DIAG(J),AMP,OMEGA)
 1150 CONTINUE
      CALL VECNUL(WORK, IWORK, TOTDOF, ITEST)
      DO 1170 I=1,TOTDOF
      DO 1160 J=1,NMODES
      WORK(I) = WORK(I) + SYSK(I,J)*SYSM(I)*XMODE(J)
 1160 CONTINUE
 1170 CONTINUE
      CALL PRTVAL(WORK, IWORK, NF, INF, JNF, DOFNOD, TOTNOD, NOUT,
     *     ITEST)
 1180 CONTINUE
      STOP
 8010 FORMAT (16I5)
 8020 FORMAT (I5, 6F10.0)
 8030 FORMAT (6F10.0)
 8040 FORMAT (F10.0, I5)
 9010 FORMAT (//25H **** NODAL GEOMETRY ****/1H )
 9020 FORMAT (1H , 16I5)
 9030 FORMAT (1H , I5, 6F10.5)
 9040 FORMAT (//27H **** ELEMENT TOPOLOGY ****/1H )
 9050 FORMAT (//30H **** MATERIAL PROPERTIES ****/1H )
 9060 FORMAT (1H , F10.5, E12.5, F10.5)
 9070 FORMAT (//25H **** RESTRAINT DATA ****/1H )
 9080 FORMAT (//44H **** NUMBER OF MODES AND DAMPING RATIO ****/
     *     1H )                                                     
 9090 FORMAT (//40H **** TIME STEP AND NUMBER OF STEPS ****/1H )
 9100 FORMAT (1H , F10.5, I5)
 9110 FORMAT (//23H **** LOADING DATA ****/1H )
 9120 FORMAT (//32H **** FORCING FUNCTION DATA ****/1H )
 9130 FORMAT (//22H **** EIGENVALUES ****/1H )
 9140 FORMAT (//27H **** DISPLACEMENTS AT STEP, I5, 2X, 6HTIME =,
     *     F10.5, 5H ****)                                            
      END
      DOUBLE PRECISION FUNCTION GENSOL(TIME, P, DAMPR, EIGVAL,
     *     AMP, OMEGA)
      DOUBLE PRECISION AMP, COEF1, COEF2, DAMPR, DENOM, EIGVAL,
     *     OMEGA, P, TIME
      DENOM = (EIGVAL-OMEGA**2)**2 + 4.0D0*DAMPR**2*OMEGA**2*EIGVAL
      COEF1 = P*(EIGVAL-OMEGA**2)/DENOM
      COEF2 = P*2.0D0*OMEGA*DSQRT(EIGVAL)*DAMPR/DENOM
      GENSOL = COEF1*DCOS(OMEGA*TIME) + COEF2*DSIN(OMEGA*TIME)
      RETURN
      END
C***********************************************************************
C$SPLIT$SEG3P1$*********************************************************
C***********************************************************************
      INTEGER BNDNOD, BNODE, DIF, DIMEN, DOFEL, DOFNOD, ELNUM,
     *     ELTOP, ELTYP, HBAND, I, IABSS, ICOORD, IDTPD, IELK,
     *     IELTOP, IELQ, IFUN, IGDER, IGDERT, IGEOM, IJAC,
     *     IJACIN, ILDER, INF, IP, IPD, IQUAD, IRHS, ISCVEC,
     *     ISTEER, ISYSK, ITEST, IWGHT, J, JABSS, JCOORD, JDTPD,
     *     JELK, JELTOP, JGDER, JGDERT, JGEOM, JJAC, JJACIN,
     *     JLDER, JNF, JP, JPD, JSYSK, NELE, NF, NIN, NODEL,
     *     NODNUM, NOUT, NQP, STEER, TOTDOF, TOTELS, TOTNOD
      DOUBLE PRECISION ABSS, BVAL, COORD, DET, DTPD, ELK, ELQ,
     *     ETA, FUN, GDER, GDERT, GEOM, JAC, JACIN, LDER, P,
     *     PD, QUOT, RHS, SCALE, SCVEC, SOURCE, STRGTH, SYSK,
     *     WGHT, X, XI, Y
      LOGICAL FIRST
      DIMENSION ABSS(3,9), DTPD(8,8), ELK(8,8), ELQ(8),
     *     FUN(8), GDER(3,8), GDERT(8,3), GEOM(8,3), JAC(3,3),
     *     JACIN(3,3), LDER(3,8), P(3,3), PD(3,8), SCVEC(8),
     *     STEER(8), WGHT(9)
C
C                            PROBLEM SIZE DEPENDENT ARRAYS
C
      DIMENSION BNODE(30), BVAL(30), COORD(100,3),
     *     ELTOP(100,10), NF(100,1), RHS(100), SYSK(100,25)
C
      DATA IABSS /3/, IDTPD /8/, IELK /8/, IELQ /8/, IFUN /8/,
     *     IGDER /3/, IGDERT /8/, IGEOM /8/, IJAC /3/, IJACIN /3/,
     *     ILDER /3/, IP /3/, IPD /3/, ISCVEC /8/, ISTEER /8/,
     *     IWGHT /9/, JABSS /9/, JCOORD /3/, JDTPD /8/,
     *     JELK /8/, JGDER /8/, JGDERT /3/, JGEOM /3/, JJAC /3/,
     *     JJACIN /3/, JLDER /8/, JNF /1/, JP /3/, JPD /8/,
     *     SCALE /1.0D+10/
C
C                            PROBLEM SIZE DEPENDENT DATA STATEMENTS
C
      DATA ICOORD /100/, IELTOP /100/, INF /100/, IRHS /100/,
     *     ISYSK /100/, JELTOP /10/, JSYSK /25/
C
      DATA NIN /5/, NOUT /6/
C
C                            SET ITEST FOR FULL CHECKING
C
      ITEST = 0
C
C*                           **********************
C*                           *                    *
C*                           * INPUT DATA SECTION *
C*                           *                    *
C*                           **********************
C
C                            INPUT OF NODAL GEOMETRY
C
      WRITE (NOUT,9010)
      READ (NIN,8010) TOTNOD, DIMEN
      WRITE (NOUT,9020) TOTNOD, DIMEN
      DO 1010 I=1,TOTNOD
      READ (NIN,8020) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
      WRITE (NOUT,9030) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
 1010 CONTINUE
C
C                            INPUT OF ELEMENT TOPOLOGY
C
      WRITE (NOUT,9040)
      READ (NIN,8010) ELTYP, TOTELS, NODEL
      WRITE (NOUT,9020) ELTYP, TOTELS, NODEL
      DO 1020 I=1,TOTELS
      READ (NIN,8010) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      WRITE (NOUT,9020) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      ELTOP(ELNUM,1) = ELTYP
      ELTOP(ELNUM,2) = NODEL
 1020 CONTINUE
C
C                            INPUT OF PERMEABILITIES, CON-
C                            STRUCTION OF PERMEABILITY MATRIX P AND
C                            SOURCE STRENGTH
C
      WRITE (NOUT,9050)
      CALL MATNUL(P, IP, JP, DIMEN, DIMEN, ITEST)
      READ (NIN,8030) (P(I,I),I=1,DIMEN)
      WRITE (NOUT,9060) (P(I,I),I=1,DIMEN)
C
      WRITE (NOUT,9070)
      READ (NIN,8030) STRGTH
      WRITE (NOUT,9060) STRGTH
C
C                            INPUT OF NUMBER OF DEGREES OF FREEDOM
C                            PER NODE, INPUT OF BOUNDARY CON-
C                            DITIONS AND CONSTRUCTION OF NODAL
C                            FREEDOM ARRAY NF
C
      WRITE (NOUT,9080)
      READ (NIN,8010) DOFNOD
      WRITE (NOUT,9020) DOFNOD
      READ (NIN,8010) BNDNOD
      WRITE (NOUT,9020) BNDNOD
      DO 1030 I=1,BNDNOD
      READ (NIN,8040) BNODE(I), BVAL(I)
      WRITE (NOUT,9030) BNODE(I), BVAL(I)
 1030 CONTINUE
      TOTDOF = 0
      DO 1050 I=1,TOTNOD
      DO 1040 J=1,DOFNOD
      TOTDOF = TOTDOF + 1
      NF(I,J) = TOTDOF
 1040 CONTINUE
 1050 CONTINUE
C
C                            CALCULATION OF SEMI-BANDWIDTH
C
      FIRST = .TRUE.
      DO 1060 NELE=1,TOTELS
      CALL FREDIF(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, FIRST, DIF, ITEST)
 1060 CONTINUE
      HBAND = DIF + 1
C
C*                           ************************************
C*                           *                                  *
C*                           * SYSTEM STIFFNESS MATRIX ASSEMBLY *
C*                           *                                  *
C*                           ************************************
C
      CALL VECNUL(RHS, IRHS, TOTDOF, ITEST)
      CALL MATNUL(SYSK, ISYSK, JSYSK, TOTDOF, HBAND, ITEST)
      DOFEL = NODEL*DOFNOD
      CALL QQUA4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      DO 1100 NELE=1,TOTELS
      CALL ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C
C                            INTEGRATION LOOP FOR ELEMENT STIFFNESS
C                            USING NQP QUADRATURE POINTS
C
      CALL MATNUL(ELK, IELK, JELK, DOFEL, DOFEL, ITEST)
      CALL VECNUL(ELQ, IELQ, DOFEL, ITEST)
      DO 1090 IQUAD=1,NQP
C
C                            FORM LINEAR SHAPE FUNCTION AND SPACE
C                            DERIVATIVES IN THE LOCAL CORRDINATES.
C                            TRANSFORM LOCAL DERIVATIVES TO GLOBAL
C                            COORDINATE SYSTEM
C
      XI = ABSS(1,IQUAD)
      ETA = ABSS(2,IQUAD)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
C
      CALL SCAPRD(GEOM(1,1), IGEOM, FUN, IFUN, NODEL, X, ITEST)
      CALL SCAPRD(GEOM(1,2), IGEOM, FUN, IFUN, NODEL, Y, ITEST)
C
      CALL MATMUL(LDER, ILDER, JLDER, GEOM, IGEOM, JGEOM, JAC,
     *     IJAC, JJAC, DIMEN, NODEL, DIMEN, ITEST)
      CALL MATINV(JAC, IJAC, JJAC, JACIN, IJACIN, JJACIN, DIMEN,
     *     DET, ITEST)
      CALL MATMUL(JACIN, IJACIN, JJACIN, LDER, ILDER, JLDER, GDER,
     *     IGDER, JGDER, DIMEN, DIMEN, NODEL, ITEST)
C
C                            FORMATION OF ELEMENT STIFFNESS ELK
C
      CALL MATMUL(P, IP, JP, GDER, IGDER, JGDER, PD, IPD, JPD,
     *     DIMEN, DIMEN, DOFEL, ITEST)
      CALL MATRAN(GDER, IGDER, JGDER, GDERT, IGDERT, JGDERT,
     *     DIMEN, DOFEL, ITEST)
      CALL MATMUL(GDERT, IGDERT, JGDERT, PD, IPD, JPD, DTPD,
     *     IDTPD, JDTPD, DOFEL, DIMEN, DOFEL, ITEST)
      QUOT = DABS(DET)*WGHT(IQUAD)
      DO 1080 I=1,DOFEL
      DO 1070 J=1,DOFEL
      DTPD(I,J) = DTPD(I,J)*QUOT
 1070 CONTINUE
      SCVEC(I) = FUN(I)*SOURCE(X,Y,STRGTH)*QUOT
 1080 CONTINUE
      CALL MATADD(ELK, IELK, JELK, DTPD, IDTPD, JDTPD, DOFEL,
     *     DOFEL, ITEST)
      CALL VECADD(ELQ, IELQ, SCVEC, ISCVEC, DOFEL, ITEST)
 1090 CONTINUE
C
C                            ASSEMBLY OF SYSTEM STIFFNESS MATRIX
C
      CALL DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      CALL ASSYM(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
      CALL ASRHS(RHS, IRHS, ELQ, IELQ, STEER, ISTEER, DOFEL, ITEST)
 1100 CONTINUE
C
C*                           *********************
C*                           *                   *
C*                           * EQUATION SOLUTION *
C*                           *                   *
C*                           *********************
C
C                            MODIFICATION OF STIFFNESS MATRIX AND
C                            RIGHT-HAND SIDE TO IMPLEMENT BOUNDARY
C                            CONDITIONS
C
      DO 1110 I=1,BNDNOD
      J = BNODE(I)
      SYSK(J,HBAND) = SYSK(J,HBAND)*SCALE
      RHS(J) = SYSK(J,HBAND)*BVAL(I)
 1110 CONTINUE
C
C                            SOLUTION OF SYSTEM MATRIX FOR THE
C                            NODAL VALUES OF THE POTENTIAL
C
      CALL CHOSOL(SYSK, ISYSK, JSYSK, RHS, IRHS, TOTDOF, HBAND,
     *     ITEST)
      WRITE (NOUT,9090)
      CALL PRTVAL(RHS, IRHS, NF, INF, JNF, DOFNOD, TOTNOD, NOUT,
     *     ITEST)
      STOP
 8010 FORMAT (16I5)
 8020 FORMAT (I5, 6F10.0)
 8030 FORMAT (2F10.0)
 8040 FORMAT (I5, 6F10.0)
 9010 FORMAT (//25H **** NODAL GEOMETRY ****//1H )
 9020 FORMAT (1H , 16I5)
 9030 FORMAT (1H , I5, 6F10.5)
 9040 FORMAT (//27H **** ELEMENT TOPOLOGY ****//1H )
 9050 FORMAT (//25H **** PERMEABILITIES ****//1H )
 9060 FORMAT (1H , 2F10.5)
 9070 FORMAT (//26H **** SOURCE STRENGTH ****//1H )
 9080 FORMAT (//30H **** BOUNDARY CONDITIONS ****//1H )
 9090 FORMAT (//27H **** NODAL POTENTIALS ****//1H )
      END
C
      DOUBLE PRECISION FUNCTION SOURCE(X, Y, STRGTH)
      DOUBLE PRECISION STRGTH, X, Y
      SOURCE = 0.0D0
      IF ((X.GE.1.0D0) .AND. (X.LE.2.0D0) .AND. (Y.GE.1.0D0) .AND.
     *     (Y.LE.2.0D0)) SOURCE = STRGTH
      RETURN
      END
C***********************************************************************
C$SPLIT$SEG3P2$*********************************************************
C***********************************************************************
      INTEGER BDCND, BLIST, BTYPE, DIF, DIMEN, DOFEL, DOFNOD,
     *     ELNUM, ELTOP, ELTYP, HBAND, I, IABSS, IBDCND,
     *     IBELM, IBELV, IBLIST, IBN, IBNTN, ICOORD, ICOSIN,
     *     IDTPD, IELK, IELTOP, IFUN, IGDER, IGDERT, IGEOM,
     *     IJAC, IJACIN, ILABSS, ILDER, INF, IP, IPD, IQUAD,
     *     IRHS, ISTEER, ISYSK, ITEST, ITYPE, IWGHT, J, JABSS,
     *     JBDCND, JBELM, JBLIST, JBNTN, JCOORD, JDTPD, JELK,
     *     JELTOP, JGDER, JGDERT, JGEOM, JJAC, JJACIN, JLDER,
     *     JNF, JP, JPD, JSYSK, K, L, M, NELE, NF, NIN, NODEL,
     *     NODNUM, NODSID, NOUT, NQP, NUMNOD, NUMSID, SIDNUM,
     *     STEER, TOTBND, TOTDOF, TOTELS, TOTNOD
      DOUBLE PRECISION ABSS, BELM, BELV, BN, BNTN, COEFF, COORD,
     *     COSIN, DET, DTPD, ELK, ETA, F1, F2, FUN, G1, G2,
     *     GDER, GDERT, GEOM, H, JAC, JACIN, LABSS, LDER,
     *     P, PD, PX, PY, QUOT, RHS, SCALE, SYSK, ULEN,
     *     WGHT, X, XI, XX, Y, YY
      LOGICAL FIRST
      DIMENSION ABSS(3,9), BELM(8,8), BELV(8), BN(8),
     *     BNTN(8,8), COSIN(3), DTPD(8,8), ELK(8,8), FUN(8),
     *     GDER(3,8), GDERT(8,3), GEOM(8,3), JAC(3,3),
     *     JACIN(3,3), LABSS(3), LDER(3,8), P(3,3), PD(3,8),
     *     STEER(8), WGHT(9)
C
C                            PROBLEM SIZE DEPENDENT ARRAYS
C
      DIMENSION BDCND(5,40), BLIST(50,5), COORD(100,3),
     *     ELTOP(100,10), NF(100,1), RHS(100), SYSK(100,25)
C
      DATA IABSS /3/, IBELM /8/, IBELV /8/, IBN /8/, IBNTN /8/,
     *     ICOSIN /3/, IDTPD /8/, IELK /8/, IFUN /8/, IGDER /3/,
     *     IGDERT /8/, IGEOM /8/, IJAC /3/, IJACIN /3/,
     *     ILABSS /3/, ILDER /3/, IP /3/, IPD /3/, ISTEER /8/,
     *     IWGHT /9/, JABSS /9/, JBELM /8/, JBNTN /8/, JCOORD /3/,
     *     JDTPD /8/, JELK /8/, JGDER /8/, JGDERT /3/, JGEOM /3/,
     *     JJAC /3/, JJACIN /3/, JLDER /8/, JNF /1/, JP /3/,
     *     JPD /8/, SCALE /1.0D+10/
C
C                            PROBLEM SIZE DEPENDENT DATA STATEMENTS
C
      DATA IBDCND /5/, IBLIST /50/, ICOORD /100/, IELTOP /100/,
     *     INF /100/, IRHS /100/, ISYSK /100/, JBDCND /40/,
     *     JBLIST /5/, JELTOP /10/, JSYSK /25/
C
      DATA NIN /5/, NOUT /6/
C
C                            STATEMENT FUNCTIONS FOR
C                            BOUNDARY CONDITIONS
C
      H(XX,YY) = 0.D0
      F1(XX,YY) = -1.D0
      F2(XX,YY) = 0.D0
      G1(XX,YY) = 0.D0
      G2(XX,YY) = 0.D0
C
C                            STATEMENT FUNCTIONS FOR
C                            PX AND PY
C
      PX(XX,YY) = 1.D0
      PY(XX,YY) = 1.D0
C
C                            SET ITEST FOR FULL CHECKING
C
      ITEST = 0
C
C*                           **********************
C*                           *                    *
C*                           * INPUT DATA SECTION *
C*                           *                    *
C*                           **********************
C
C                            INPUT OF NODAL GEOMETRY
C
      WRITE (NOUT,9010)
      READ (NIN,8010) TOTNOD, DIMEN
      WRITE (NOUT,9020) TOTNOD, DIMEN
      DO 1010 I=1,TOTNOD
      READ (NIN,8020) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
      WRITE (NOUT,9030) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
 1010 CONTINUE
C
C                            INPUT OF ELEMENT TOPOLOGY
C
      WRITE (NOUT,9040)
      READ (NIN,8010) ELTYP, TOTELS, NODEL
      WRITE (NOUT,9020) ELTYP, TOTELS, NODEL
      DO 1020 I=1,TOTELS
      READ (NIN,8010) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      WRITE (NOUT,9020) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      ELTOP(ELNUM,1) = ELTYP
      ELTOP(ELNUM,2) = NODEL
 1020 CONTINUE
C
C                            INPUT OF NUMBER OF DEGREES OF FREEDOM
C                            PER NODE, INPUT OF BOUNDARY CON-
C                            DITIONS AND CONSTRUCTION OF NODAL
C                            FREEDOM ARRAY NF
C
      WRITE (NOUT,9050)
      READ (NIN,8010) DOFNOD
      WRITE (NOUT,9020) DOFNOD
      READ (NIN,8010) TOTBND
      WRITE (NOUT,9020) TOTBND
      DO 1030 I=1,TOTBND
      READ (NIN,8010) BTYPE, NUMNOD, NODSID, (BDCND(I,J+3),J=1,
     *     NUMNOD)
      WRITE (NOUT,9020) BTYPE, NUMNOD, NODSID,
     *     (BDCND(I,J+3),J=1,NUMNOD)
      BDCND(I,1) = BTYPE
      BDCND(I,2) = NUMNOD
      BDCND(I,3) = NODSID
 1030 CONTINUE
C
C                            SETUP NODAL FREEDOM ARRAY
C
      TOTDOF = 0
      DO 1050 I=1,TOTNOD
      DO 1040 J=1,DOFNOD
      TOTDOF = TOTDOF + 1
      NF(I,J) = TOTDOF
 1040 CONTINUE
 1050 CONTINUE
C
C                            CALCULATION OF SEMI-BANDWIDTH
C
      FIRST = .TRUE.
      DO 1060 NELE=1,TOTELS
      CALL FREDIF(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, FIRST, DIF, ITEST)
 1060 CONTINUE
      HBAND = DIF + 1
C
C*                           ************************************
C*                           *                                  *
C*                           * SYSTEM STIFFNESS MATRIX ASSEMBLY *
C*                           *                                  *
C*                           ************************************
C
      CALL MATNUL(P, IP, JP, DIMEN, DIMEN, ITEST)
      CALL MATNUL(SYSK, ISYSK, JSYSK, TOTDOF, HBAND, ITEST)
      DOFEL = NODEL*DOFNOD
      CALL QQUA4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      DO 1100 NELE=1,TOTELS
      CALL ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C
C                            INTEGRATION LOOP FOR ELEMENT MATRICES
C                            USING NQP QUADRATURE POINTS
C
      CALL MATNUL(ELK, IELK, JELK, DOFEL, DOFEL, ITEST)
      DO 1090 IQUAD=1,NQP
C
C                            FORM SHAPE FUNCTION AND SPACE
C                            DERIVATIVES IN THE LOCAL CORRDINATES.
C                            TRANSFORM LOCAL DERIVATIVES TO GLOBAL
C                            COORDINATE SYSTEM
C
      XI = ABSS(1,IQUAD)
      ETA = ABSS(2,IQUAD)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
      CALL MATMUL(LDER, ILDER, JLDER, GEOM, IGEOM, JGEOM, JAC,
     *     IJAC, JJAC, DIMEN, NODEL, DIMEN, ITEST)
      CALL MATINV(JAC, IJAC, JJAC, JACIN, IJACIN, JJACIN, DIMEN,
     *     DET, ITEST)
      CALL MATMUL(JACIN, IJACIN, JJACIN, LDER, ILDER, JLDER, GDER,
     *     IGDER, JGDER, DIMEN, DIMEN, NODEL, ITEST)
C
C                           CALCULATE (XI,ETA) IN GLOBAL (X,Y)
C                           COORDINATES AND FORM P MATRIX
C
      CALL SCAPRD(GEOM(1,1), IGEOM, FUN, IFUN, NODEL, X, ITEST)
      CALL SCAPRD(GEOM(1,2), IGEOM, FUN, IFUN, NODEL, Y, ITEST)
      P(1,1) = PX(X,Y)
      P(2,2) = PY(X,Y)
C
C                            FORM INTEGRAND ELEMENT STIFFNESS ELK
C
      CALL MATMUL(P, IP, JP, GDER, IGDER, JGDER, PD, IPD, JPD,
     *     DIMEN, DIMEN, DOFEL, ITEST)
      CALL MATRAN(GDER, IGDER, JGDER, GDERT, IGDERT, JGDERT,
     *     DIMEN, DOFEL, ITEST)
      CALL MATMUL(GDERT, IGDERT, JGDERT, PD, IPD, JPD, DTPD,
     *     IDTPD, JDTPD, DOFEL, DIMEN, DOFEL, ITEST)
      QUOT = DABS(DET)*WGHT(IQUAD)
      DO 1080 I=1,DOFEL
      DO 1070 J=1,DOFEL
      DTPD(I,J) = DTPD(I,J)*QUOT
 1070 CONTINUE
 1080 CONTINUE
      CALL MATADD(ELK, IELK, JELK, DTPD, IDTPD, JDTPD, DOFEL,
     *     DOFEL, ITEST)
 1090 CONTINUE
C
C                            ASSEMBLY OF SYSTEM STIFFNESS MATRIX
C
      CALL DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      CALL ASSYM(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
 1100 CONTINUE
C
C*                           ************************************
C*                           *                                  *
C*                           * INSERTION OF BOUNDARY CONDITIONS *
C*                           *                                  *
C*                           ************************************
C
      CALL VECNUL(RHS, IRHS, TOTDOF, ITEST)
      CALL QLIN2(WGHT, IWGHT, LABSS, ILABSS, NQP, ITEST)
      DO 1230 ITYPE=1,TOTBND
      BTYPE = BDCND(ITYPE,1)
      NUMNOD = BDCND(ITYPE,2)
      GO TO (1110, 1130, 1130), BTYPE
C
C                            PRESCRIBED VALUES  (DIRICHLET)
C
 1110 DO 1120 J=1,NUMNOD
      K = BDCND(ITYPE,J+3)
      SYSK(K,HBAND) = SYSK(K,HBAND)*SCALE
      X = COORD(K,1)
      Y = COORD(K,2)
      RHS(K) = SYSK(K,HBAND)*H(X,Y)
 1120 CONTINUE
      GO TO 1230
C
C                            DERIVATIVES (NEUMANN AND CAUCHY)
C
 1130 CALL SIDENO(TOTELS, ELTOP, IELTOP, JELTOP, ITYPE, BDCND,
     *     IBDCND, JBDCND, NUMSID, BLIST, IBLIST, JBLIST, ITEST)
      DO 1220 M=1,NUMSID
      ELNUM = BLIST(M,1)
      SIDNUM = BLIST(M,2)
      CALL VECNUL(BELV, IBELV, DOFEL, ITEST)
      CALL MATNUL(BELM, IBELM, JBELM, DOFEL, DOFEL, ITEST)
C
C                            CONSTRUCT QUADRATURE RULE AND LOCAL
C                            GEOMETRY
C
      CALL ELGEOM(ELNUM, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
      CALL BQQUA(ABSS, IABSS, JABSS, LABSS, ILABSS, NQP, SIDNUM,
     *     COEFF, ITEST)
C
C                            PERFORM BOUNDARY INTEGRATION
C
      DO 1190 J=1,NQP
      XI = ABSS(1,J)
      ETA = ABSS(2,J)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
      CALL LINQUA(XI, ETA, GEOM, IGEOM, JGEOM, NODEL, SIDNUM,
     *     ULEN, ITEST)
      QUOT = ULEN*WGHT(J)*COEFF
C
C                            CALCULATE (XI,ETA) IN GLOBAL (X,Y)
C                            COORDINATES
C
      CALL SCAPRD(GEOM(1,1), IGEOM, FUN, IFUN, NODEL, X, ITEST)
      CALL SCAPRD(GEOM(1,2), IGEOM, FUN, IFUN, NODEL, Y, ITEST)
C
C                            CALCULATION OF THE NORMAL DIRECTION
C                            COSINES
C
      CALL MATMUL(LDER, ILDER, JLDER, GEOM, IGEOM, JGEOM, JAC,
     *     IJAC, JJAC, DIMEN, NODEL, DIMEN, ITEST)
      CALL MATINV(JAC, IJAC, JJAC, JACIN, IJACIN, JJACIN, DIMEN,
     *     DET, ITEST)
      CALL DCSQUA(JACIN, IJACIN, JJACIN, SIDNUM, COSIN, ICOSIN,
     *     ITEST)
      GO TO (1220, 1140, 1160), BTYPE
C
C                            NEUMANN CONDITIONS
C
 1140 DO 1150 K=1,DOFEL
      BN(K) = (COSIN(1)*P(1,1)*F1(X,Y)+COSIN(2)*P(2,2)*F2(X,Y))*
     *     FUN(K)*QUOT
 1150 CONTINUE
      CALL VECADD(BELV, IBELV, BN, IBN, DOFEL, ITEST)
      GO TO 1190
C
C                            CAUCHY CONDITIONS
C
 1160 DO 1180 K=1,DOFEL
      DO 1170 L=1,DOFEL
      BNTN(K,L) = -FUN(K)*FUN(L)*QUOT*(COSIN(1)*P(1,1)*G1(X,Y)+
     *     COSIN(2)*P(2,2)*G2(X,Y))
 1170 CONTINUE
 1180 CONTINUE
      CALL MATADD(BELM, IBELM, JBELM, BNTN, IBNTN, JBNTN, DOFEL,
     *     DOFEL, ITEST)
 1190 CONTINUE
C
C                            ASSEMBLY OF BOUNDARY CONDITIONS
C
      CALL DIRECT(ELNUM, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      GO TO (1220, 1200, 1210), BTYPE
 1200 CALL ASRHS(RHS, IRHS, BELV, IBELV, STEER, ISTEER, NODEL,
     *     ITEST)
      GO TO 1220
 1210 CALL ASSYM(SYSK, ISYSK, JSYSK, BELM, IBELM, JBELM, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
 1220 CONTINUE
 1230 CONTINUE
C
C*                           *********************
C*                           *                   *
C*                           * EQUATION SOLUTION *
C*                           *                   *
C*                           *********************
C
      CALL CHOSOL(SYSK, ISYSK, JSYSK, RHS, IRHS, TOTDOF, HBAND,
     *     ITEST)
      WRITE (NOUT,9060)
      CALL PRTVAL(RHS, IRHS, NF, INF, JNF, DOFNOD, TOTNOD, NOUT,
     *     ITEST)
      STOP
 8010 FORMAT (16I5)
 8020 FORMAT (I5, 6F10.0)
 9010 FORMAT (//25H **** NODAL GEOMETRY ****//1H )
 9020 FORMAT (1H , 16I5)
 9030 FORMAT (1H , I5, 6F10.5)
 9040 FORMAT (//27H **** ELEMENT TOPOLOGY ****//1H )
 9050 FORMAT (//30H **** BOUNDARY CONDITIONS ****//1H )
 9060 FORMAT (//27H **** NODAL POTENTIALS ****//1H )
      END
C***********************************************************************
C$SPLIT$SEG4P1$*********************************************************
C***********************************************************************
      INTEGER BNDNOD, BNODE, DIF, DIMEN, DOFEL, DOFNOD, ELNUM,
     *     ELTOP, ELTYP, HBAND, I, IABSS, ICOORD, IDTPD, IELK,
     *     IELM, IELTOP, IFTF, IFUN, IGDER, IGDERT, IGEOM,
     *     IJAC, IJACIN, ILDER, INF, INTNOD, IP, IPD, IQUAD,
     *     IRHS, ISTEER, ISYSK, ISYSM, ITEST, IWGHT, IWORK1,
     *     IWORK2, J, JABSS, JCOORD, JDTPD, JELK, JELM, JELTOP,
     *     JFTF, JGDER, JGDERT, JGEOM, JJAC, JJACIN, JLDER,
     *     JNF, JP, JPD, JSYSK, JSYSM, K, NELE, NF, NIN, NODEL,
     *     NODNUM, NOUT, NQP, NSTEPS, STEER, TOTDOF, TOTELS,
     *     TOTNOD
      DOUBLE PRECISION ABSS, BVAL, COORD, DET, DTIM, DTPD,
     *     ELK, ELM, ETA, FTF, FUN, GDER, GDERT, GEOM, JAC,
     *     JACIN, LDER, P, PD, PERM, QUOT, RHS, SCALE, SYSK,
     *     SYSM, THETA, WGHT, WORK1, WORK2, XI
      LOGICAL FIRST
      DIMENSION ABSS(3,9), BNODE(30), BVAL(30), DTPD(8,8),
     *     ELK(8,8), ELM(8,8), FTF(8,8), FUN(8), GDER(3,8),
     *     GDERT(8,3), GEOM(8,3), JAC(3,3), JACIN(3,3),
     *     LDER(3,8), P(3,3), PD(3,8), PERM(3), STEER(8),
     *     WGHT(9)
C
C                            PROBLEM SIZE DEPENDENT ARRAYS
C
      DIMENSION COORD(100,3), ELTOP(100,10), NF(100,1),
     *     RHS(100), SYSK(100,25), SYSM(100,25), WORK1(100),
     *     WORK2(100)
C
      DATA IABSS /3/, IDTPD /8/, IELK /8/, IELM /8/, IFTF /8/,
     *     IFUN /8/, IGDER /3/, IGDERT /8/, IGEOM /8/, IJAC /3/,
     *     IJACIN /3/, ILDER /3/, IP /3/, IPD /3/, ISTEER /8/,
     *     IWGHT /9/, JABSS /9/, JCOORD /3/, JDTPD /8/,
     *     JELK /8/, JELM /8/, JFTF /8/, JGDER /8/, JGDERT /3/,
     *     JGEOM /3/, JJAC /3/, JJACIN /3/, JLDER /8/, JNF /1/,
     *     JP /3/, JPD /8/, SCALE /1.0D+10/
C
C                            PROBLEM SIZE DEPENDENT DATA STATEMENTS
C
      DATA ICOORD /100/, IELTOP /100/, INF /100/, IRHS /100/,
     *     ISYSK /100/, ISYSM /100/, IWORK1 /100/, IWORK2 /100/,
     *     JELTOP /10/, JSYSK /25/, JSYSM /25/
C
      DATA NIN /5/, NOUT /6/
C
C                            SET ITEST FOR FULL CHECKING
C
      ITEST = 0
C
C*                           **********************
C*                           *                    *
C*                           * INPUT DATA SECTION *
C*                           *                    *
C*                           **********************
C
C                            INPUT OF NODAL GEOMETRY
C
      WRITE (NOUT,9010)
      READ (NIN,8010) TOTNOD, DIMEN
      WRITE (NOUT,9020) TOTNOD, DIMEN
      DO 1010 I=1,TOTNOD
      READ (NIN,8020) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
      WRITE (NOUT,9030) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
 1010 CONTINUE
C
C                            INPUT OF ELEMENT TOPOLOGY
C
      WRITE (NOUT,9040)
      READ (NIN,8010) ELTYP, TOTELS, NODEL
      WRITE (NOUT,9020) ELTYP, TOTELS, NODEL
      DO 1020 I=1,TOTELS
      READ (NIN,8010) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      WRITE (NOUT,9020) ELNUM, (ELTOP(ELNUM,J+2),J=1,NODEL)
      ELTOP(ELNUM,1) = ELTYP
      ELTOP(ELNUM,2) = NODEL
 1020 CONTINUE
C
C                            INPUT OF PERMEABILITIES AND CON-
C                            STRUCTION OF PERMEABILITY MATRIX P
C
      WRITE (NOUT,9050)
      READ (NIN,8030) (PERM(I),I=1,DIMEN)
      WRITE (NOUT,9060) (PERM(I),I=1,DIMEN)
      CALL MATNUL(P, IP, JP, DIMEN, DIMEN, ITEST)
      DO 1030 I=1,DIMEN
      P(I,I) = PERM(I)
 1030 CONTINUE
C
C                            INPUT OF NUMBER OF DEGREES OF FREEDOM
C                            PER NODE, INPUT OF BOUNDARY CON-
C                            DITIONS AND CONSTRUCTION OF NODAL
C                            FREEDOM ARRAY NF
C
      WRITE (NOUT,9070)
      READ (NIN,8010) DOFNOD
      WRITE (NOUT,9020) DOFNOD
      READ (NIN,8010) BNDNOD
      WRITE (NOUT,9020) BNDNOD
      DO 1040 I=1,BNDNOD
      READ (NIN,8040) BNODE(I), BVAL(I)
      WRITE (NOUT,9030) BNODE(I), BVAL(I)
 1040 CONTINUE
      TOTDOF = 0
      DO 1060 I=1,TOTNOD
      DO 1050 J=1,DOFNOD
      TOTDOF = TOTDOF + 1
      NF(I,J) = TOTDOF
 1050 CONTINUE
 1060 CONTINUE
C
C                            INPUT OF INITIAL CONDINTIONS
C
      WRITE (NOUT,9080)
      CALL VECNUL(RHS, IRHS, TOTDOF, ITEST)
      READ (NIN,8010) INTNOD
      WRITE (NOUT,9090) INTNOD
      DO 1070 I=1,INTNOD
      READ (NIN,8040) NODNUM, WORK1(1)
      WRITE (NOUT,9030) NODNUM, WORK1(1)
      J = NF(NODNUM,1)
      RHS(J) = WORK1(1)
 1070 CONTINUE
C
C                            INPUT TIME STEPPING DATA
C
      WRITE (NOUT,9100)
      READ (NIN,8020) NSTEPS, DTIM, THETA
      WRITE (NOUT,9110) NSTEPS, DTIM, THETA
C
C                            CALCULATION OF SEMI-BANDWIDTH
C
      FIRST = .TRUE.
      DO 1080 NELE=1,TOTELS
      CALL FREDIF(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, FIRST, DIF, ITEST)
 1080 CONTINUE
      HBAND = DIF + 1
C
C*                           ************************************
C*                           *                                  *
C*                           * SYSTEM STIFFNESS MATRIX ASSEMBLY *
C*                           *                                  *
C*                           ************************************
C
      CALL MATNUL(SYSK, ISYSK, JSYSK, TOTDOF, HBAND, ITEST)
      CALL MATNUL(SYSM, ISYSM, JSYSM, TOTDOF, HBAND, ITEST)
      DOFEL = NODEL*DOFNOD
      CALL QQUA4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      DO 1120 NELE=1,TOTELS
      CALL ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C
C                            INTEGRATION LOOP FOR ELEMENT STIFFNESS
C                            USING NQP QUADRATURE POINTS
C
      CALL MATNUL(ELK, IELK, JELK, DOFEL, DOFEL, ITEST)
      CALL MATNUL(ELM, IELM, JELM, DOFEL, DOFEL, ITEST)
      DO 1110 IQUAD=1,NQP
C
C                            FORM LINEAR SHAPE FUNCTION AND SPACE
C                            DERIVATIVES IN THE LOCAL CORRDINATES.
C                            TRANSFORM LOCAL DERIVATIVES TO GLOBAL
C                            COORDINATE SYSTEM
C
      XI = ABSS(1,IQUAD)
      ETA = ABSS(2,IQUAD)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
      CALL MATMUL(LDER, ILDER, JLDER, GEOM, IGEOM, JGEOM, JAC,
     *     IJAC, JJAC, DIMEN, NODEL, DIMEN, ITEST)
      CALL MATINV(JAC, IJAC, JJAC, JACIN, IJACIN, JJACIN, DIMEN,
     *     DET, ITEST)
      CALL MATMUL(JACIN, IJACIN, JJACIN, LDER, ILDER, JLDER, GDER,
     *     IGDER, JGDER, DIMEN, DIMEN, NODEL, ITEST)
C
C                            FORMATION OF ELEMENT STIFFNESS ELK
C
      CALL MATMUL(P, IP, JP, GDER, IGDER, JGDER, PD, IPD, JPD,
     *     DIMEN, DIMEN, DOFEL, ITEST)
      CALL MATRAN(GDER, IGDER, JGDER, GDERT, IGDERT, JGDERT,
     *     DIMEN, DOFEL, ITEST)
      CALL MATMUL(GDERT, IGDERT, JGDERT, PD, IPD, JPD, DTPD,
     *     IDTPD, JDTPD, DOFEL, DIMEN, DOFEL, ITEST)
      QUOT = DABS(DET)*WGHT(IQUAD)
      DO 1100 I=1,DOFEL
      DO 1090 J=1,DOFEL
      FTF(I,J) = FUN(I)*FUN(J)*QUOT
      DTPD(I,J) = DTPD(I,J)*QUOT
 1090 CONTINUE
 1100 CONTINUE
      CALL MATADD(ELM, IELM, JELM, FTF, IFTF, JFTF, DOFEL, DOFEL,
     *     ITEST)
      CALL MATADD(ELK, IELK, JELK, DTPD, IDTPD, JDTPD, DOFEL,
     *     DOFEL, ITEST)
 1110 CONTINUE
C
C                            ASSEMBLY OF SYSTEM STIFFNESS MATRIX
C                            SYSK
C
      CALL DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      CALL ASSYM(SYSM, ISYSM, JSYSM, ELM, IELM, JELM, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
      CALL ASSYM(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
 1120 CONTINUE
C
C*                           *********************
C*                           *                   *
C*                           * EQUATION SOLUTION *
C*                           *                   *
C*                           *********************
C
C                            MODIFICATION OF STIFFNESS MATRIX AND
C                            RIGHT-HAND SIDE TO IMPLEMENT BOUNDARY
C                            CONDITIONS
C
      DO 1140 I=1,TOTDOF
      DO 1130 J=1,HBAND
      WORK1(1) = THETA*SYSK(I,J) + SYSM(I,J)/DTIM
      WORK1(2) = (1.0D0-THETA)*SYSK(I,J) - SYSM(I,J)/DTIM
      SYSK(I,J) = WORK1(1)
      SYSM(I,J) = -WORK1(2)
 1130 CONTINUE
 1140 CONTINUE
      DO 1150 I=1,BNDNOD
      J = BNODE(I)
      SYSK(J,HBAND) = SYSK(J,HBAND)*SCALE
      WORK1(I) = SYSK(J,HBAND)*BVAL(I)
 1150 CONTINUE
C
C                            SOLUTION OF SYSTEM MATRIX FOR THE
C                            NODAL VALUES OF THE POTENTIAL
C
      CALL CHORDN(SYSK, ISYSK, JSYSK, TOTDOF, HBAND, ITEST)
      DO 1170 I=1,NSTEPS
      WRITE (NOUT,9120) I
      CALL MVSYB(SYSM, ISYSM, JSYSM, RHS, IRHS, WORK2, IWORK2,
     *     TOTDOF, HBAND, ITEST)
C
C                            INSERTION OF BOUNDARY CONDITIONS
C
      DO 1160 J=1,BNDNOD
      K = BNODE(J)
      WORK2(K) = WORK1(J)
 1160 CONTINUE
C
C                            FORWARD AND BACKWARD SUBSTITUTION
C
      CALL CHOSUB(SYSK, ISYSK, JSYSK, WORK2, IWORK2, TOTDOF,
     *     HBAND, ITEST)
      CALL VECCOP(WORK2, IWORK2, RHS, IRHS, TOTDOF, ITEST)
      CALL PRTVAL(RHS, IRHS, NF, INF, JNF, DOFNOD, TOTNOD, NOUT,
     *     ITEST)
 1170 CONTINUE
      STOP
 8010 FORMAT (16I5)
 8020 FORMAT (I5, 6F10.0)
 8030 FORMAT (2F10.0)
 8040 FORMAT (I5, 6F10.0)
 9010 FORMAT (//25H **** NODAL GEOMETRY ****//1H )
 9020 FORMAT (1H , 16I5)
 9030 FORMAT (1H , I5, 6F10.5)
 9040 FORMAT (//27H **** ELEMENT TOPOLOGY ****//1H )
 9050 FORMAT (//25H **** PERMEABILITIES ****//1H )
 9060 FORMAT (1H , 2F10.5)
 9070 FORMAT (//30H **** BOUNDARY CONDITIONS ****//1H )
 9080 FORMAT (//29H **** INITIAL CONDITIONS ****//1H )
 9090 FORMAT (1H , 16I5)
 9100 FORMAT (//29H **** TIME STEPPING DATA ****//1H )
 9110 FORMAT (1H , I5, 6F10.5)
 9120 FORMAT (//32H **** NODAL POTENTIALS FOR STEP , I3, 6H  ****//
     *     1H )                                                     
      END
