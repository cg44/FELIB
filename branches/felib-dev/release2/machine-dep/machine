C***********************************************************************
C$SPLIT$MAXINT$*********************************************************
C***********************************************************************
      INTEGER FUNCTION MAXINT(N)
C-----------------------------------------------------------------------
C PURPOSE
C      RETURNS THE VALUE OF THE LARGEST INTEGER CAPABLE OF
C      BEING STORED BY THE COMPUTER
C      *********************************************
C      **********MACHINE DEPENDENT ROUTINE**********
C      *********************************************
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG) --- SERC COPYRIGHT
C      COMMENTED    23 OCT 1980 (KR)
C
C ARGUMENTS IN
C      N       DUMMY ARGUMENT
C
C
C     INTEGER FUNCTION MAXINT(N)
C***********************************************************************
C
      INTEGER N
C
C+PRIME+IBM+GEC
      MAXINT = 2147483647
      RETURN
      END
C***********************************************************************
C$SPLIT$OVFLO$*********************************************************
C***********************************************************************
      DOUBLE PRECISION FUNCTION OVFLO(X)
C-----------------------------------------------------------------------
C PURPOSE
C      RETURNS THE VALUE OF THE LARGEST POSITIVE REAL FLOATING-
C      POINT NUMBER REPRESENTABLE ON THE COMPUTER
C      *********************************************
C      **********MACHINE DEPENDENT ROUTINE**********
C      *********************************************
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG) --- SERC COPYRIGHT
C      COMMENTED    23 OCT 1980 (KR)
C
C ARGUMENTS IN
C      X       DUMMY ARGUMENT
C
C
C     DOUBLE PRECISION FUNCTION OVFLO(X)
C***********************************************************************
C
      DOUBLE PRECISION X, VALUE
C
C+PRIME OVFLO = 2.0D0 **(32576)
      INTEGER *2 L(4)
      EQUIVALENCE (L(1),VALUE)
      DATA L(1),L(2),L(3),L(4)/:077777,:177777,:177777,:077500/
C+IBM+GEC
C     DATA VALUE /Z7FFFFFFFFFFFFFFF/
C
      OVFLO = VALUE
      RETURN
      END
C***********************************************************************
C$SPLIT$UNFLO$*********************************************************
C***********************************************************************
      DOUBLE PRECISION FUNCTION UNFLO(X)
C-----------------------------------------------------------------------
C PURPOSE
C      RETURNS THE VALUE OF THE SMALLEST POSITIVE REAL FLOATING-
C      POINT NUMBER EXACTLY REPRESENTABLE ON THE COMPUTER
C      *********************************************
C      **********MACHINE DEPENDENT ROUTINE**********
C      *********************************************
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG) --- SERC COPYRIGHT
C      COMMENTED    23 OCT 1980 (KR)
C
C ARGUMENTS IN
C      X       DUMMY ARGUMENT
C
C
C     DOUBLE PRECISION FUNCTION UNFLO(X)
C***********************************************************************
C
      DOUBLE PRECISION X, VALUE
C
C      FOR PRIME 400 X02ABF = 2.0D0**(-32386)
C+PRIME  UNFLO = 2.0D0**(-32386)
      INTEGER *2 L(4)
      EQUIVALENCE (L(1),VALUE)
      DATA L(1),L(2),L(3),L(4)/:040000,:000000,:000000,:100777/
C+IBM+GEC
C+    DATA VALUE /Z0010000000000000/
C
      UNFLO = VALUE
      RETURN
      END
C***********************************************************************
C$SPLIT$VEPS$*********************************************************
C***********************************************************************
      DOUBLE PRECISION FUNCTION VEPS(X)
C-----------------------------------------------------------------------
C PURPOSE
C      RETURNS THE VALUE OF THE SMALLEST NUMBER VEPS SUCH THAT
C      1.D0+VEPS > 1.DO ON THIS COMPUTER
C      *********************************************
C      **********MACHINE DEPENDENT ROUTINE**********
C      *********************************************
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG) --- SERC COPYRIGHT
C      COMMENTED    23 OCT 1980 (KR)
C
C ARGUMENTS IN
C      X       DUMMY ARGUMENT
C
C
C     DOUBLE PRECISION FUNCTION VEPS(X)
C***********************************************************************
C
      DOUBLE PRECISION X, VALUE
C+PRIME EPS = 2.0D0**(-44)
      INTEGER*2  L(4)
      EQUIVALENCE (VALUE,L(1))
      DATA L(1),L(2),L(3),L(4)/:040000,:000000,:000000,:000125/
C+GEC+IBM
C+GEC DATA VALUE /Z3410000000000000/
C
      VEPS = VALUE
      RETURN
      END
C***********************************************************************
C$SPLIT$VTOL$*********************************************************
C***********************************************************************

      DOUBLE PRECISION FUNCTION VTOL(X)
C-----------------------------------------------------------------------
C PURPOSE
C      RETURNS THE RATIO OF THE SMALLEST NUMBER WHICH DOES NOT
C      CAUSE UNDERFOW TO THE NUMBER VEPS WHICH IS DEFINED BY
C      1.DO+VEPS > 1.D0
C      ***************************************************
C      **********USES MACHINE DEPENDENT ROUTINES**********
C      **********  CODE IS MACHINE INDEPENDENT  **********
C      ***************************************************
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG) --- SERC COPYRIGHT
C      COMMENTED    23 OCT 1980 (KR)
C
C ARGUMENTS IN
C      X       DUMMY ARGUMENT
C
C ROUTINES CALLED
C      UNFLO   VEPS
C
C
C     DOUBLE PRECISION FUNCTION VTOL(X)
C***********************************************************************
C
      DOUBLE PRECISION X, VALUE
C+PRIME VTOL = 2.0D0**(-32342)
      INTEGER *2 L(4)
      EQUIVALENCE (L(1),VALUE)
      DATA L(1),L(2),L(3),L(4)/:040000,:000000,:000000,:101053/
C
      VTOL = VALUE
      RETURN
      END
C***********************************************************************
C$SPLIT$ERRMES$*********************************************************
C***********************************************************************
      INTEGER FUNCTION ERRMES(ITEST, IERROR, SRNAME)
C-----------------------------------------------------------------------
C PURPOSE
C      RETURNS THE VALUE OF IERROR OR TERMINATES THE PROGRAM,
C      PRINTING A FAILURE MESSAGE
C
C HISTORY
C
C      COPYRIGHT (C) 1979 : SERC, RUTHERFORD APPLETON LABORATORY
C                           CHILTON, DIDCOT, OXFORDSHIRE OX11 0QX
C
C      RELEASE 1.1  29 OCT 1979 (CG)
C      COMMENTED    14 FEB 1980 (KR)
C
C ARGUMENTS IN
C      ITEST   CONTAINS EITHER 0 (HARD FAIL) OR 1 (SOFT FAIL).
C              ANY OTHER ENTRY GIVES HARD FAIL.
C      IERROR  CONTAINS THE NUMBER OF THE DETECTED ERROR
C      SRNAME  CONTAINS UP TO 8 CHARACTERS - USUALLY A LIBRARY
C              ROUTINE NAME
C
C ARGUMENTS OUT
C      ERRMES  ROUTINE NAME, CONTAINS THE VALUE OF IERROR
C
C ROUTINES CALLED
C      CAN CALL AUXILIARY ROUTINE IN SOME VERSIONS OF LIBRARY
C
C
C     INTEGER FUNCTION ERRMES(ITEST, IERROR, SRNAME)
C***********************************************************************
C
      INTEGER IERROR, ITEST, UNIT
      DOUBLE PRECISION SRNAME
C
C     PRIME
C
      DATA UNIT /1/
C
C     IBM
C
C     DATA UNIT /6/
C
C     GEC
C
C     DATA UNIT /2/
C
C     HARD FAILURE
C
      IF (ITEST.EQ.-99) GO TO 1020
      IF (ITEST.EQ.1 .OR. IERROR.EQ.0) GO TO 1010
      WRITE (UNIT,9010) SRNAME, IERROR
      STOP
C
C     SOFT FAILURE
C
 1010 ERRMES = IERROR
      RETURN
C
C     TO RETURN RELEASE MESSAGE
C
 1020 WRITE (UNIT,9020)
      RETURN
 9010 FORMAT (43H ERROR DETECTED BY LEVEL 0 LIBRARY ROUTINE , A8,
     *     11H - ITEST = , I5//)                                    
 9020 FORMAT (25H RELEASE 2.1  -  1 SEP 85)
      END
