      SUBROUTINE B2C2(BEE, IBEE, JBEE, DERIV, IDERIV, JDERIV,
     *     NODEL, ITEST)
      INTEGER IBEE, IDERIV, ITEST, JBEE, JDERIV, K, L,
     *     M, NODEL,IERROR,ERRMES
      DOUBLE PRECISION BEE, DERIV,SRNAME
      DIMENSION BEE(IBEE,JBEE), DERIV(IDERIV,JDERIV)
      DATA SRNAME /8H B2C2   /
      K = 3
      L = 2*NODEL
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IDERIV.LT.2.OR.JDERIV.LT.NODEL) IERROR=3
      IF(IBEE.LT.3.OR.JBEE.LT.L) IERROR=2
      IF(NODEL.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   CALL MATNUL(BEE, IBEE, JBEE, K, L, ITEST)
      DO 1010 M=1,NODEL
      K = 2*M
      L = K - 1
      BEE(1,L) = DERIV(1,M)
      BEE(3,K) = DERIV(1,M)
      BEE(2,K) = DERIV(2,M)
      BEE(3,L) = DERIV(2,M)
 1010 CONTINUE
      RETURN
      END
      SUBROUTINE B2P2(BEE, IBEE, JBEE, DERIV, IDERIV, JDERIV, FUN,
     *     IFUN, COORD, ICOORD, JCOORD,  NODEL,
     *     ITEST)
      INTEGER IBEE, ICOORD, IDERIV, IFUN, ITEST, JBEE,
     *     JCOORD, JDERIV, K, L, M, NODEL, IERROR, ERRMES
      DOUBLE PRECISION BEE, COORD, DERIV, FUN, SUM,SRNAME
      DIMENSION BEE(IBEE,JBEE), COORD(ICOORD,JCOORD),
     *     DERIV(IDERIV,JDERIV), FUN(IFUN)
      DATA SRNAME /8H B2P2   /
      K = 4
      L = 2*NODEL
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IDERIV.LT.2.OR.JDERIV.LT.NODEL) IERROR=3
      IF(IBEE.LT.3.OR.JBEE.LT.L) IERROR=2
      IF(NODEL.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   CALL MATNUL(BEE, IBEE, JBEE, K, L, ITEST)
      SUM = 0.0D0
      DO 1010 K=1,NODEL
      SUM = SUM + FUN(K)*COORD(K,1)
 1010 CONTINUE
      DO 1020 M=1,NODEL
      K = 2*M
      L = K - 1
      BEE(1,L) = DERIV(1,M)
      BEE(3,K) = DERIV(1,M)
      BEE(2,K) = DERIV(2,M)
      BEE(3,L) = DERIV(2,M)
      BEE(4,L) = FUN(M)/SUM
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE B3C3(BEE, IBEE, JBEE, DERIV, IDERIV, JDERIV,
     *     NODEL, ITEST)
      INTEGER IBEE, IDERIV, ITEST, JBEE, JDERIV, K, L,
     *     M, N, NODEL,IERROR,ERRMES
      DOUBLE PRECISION BEE, DERIV,SRNAME
      DIMENSION BEE(IBEE,JBEE), DERIV(IDERIV,JDERIV)
      DATA SRNAME /8H B3C3   /
      K = 6
      L = 3*NODEL
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IDERIV.LT.3.OR.JDERIV.LT.NODEL) IERROR=3
      IF(IBEE.LT.6.OR.JBEE.LT.L) IERROR=2
      IF(NODEL.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   CALL MATNUL(BEE, IBEE, JBEE, K, L, ITEST)
      DO 1010 M=1,NODEL
      N = 3*M
      K = N - 1
      L = K - 1
      BEE(1,L) = DERIV(1,M)
      BEE(4,K) = DERIV(1,M)
      BEE(6,N) = DERIV(1,M)
      BEE(2,K) = DERIV(2,M)
      BEE(4,L) = DERIV(2,M)
      BEE(5,N) = DERIV(2,M)
      BEE(3,N) = DERIV(3,M)
      BEE(5,K) = DERIV(3,M)
      BEE(6,L) = DERIV(3,M)
 1010 CONTINUE
      RETURN
      END
      SUBROUTINE DPSN(DEE, IDEE, JDEE, E, NU, NUMSS, ITEST)
      INTEGER I, IDEE, ITEST, J, JDEE, NUMSS,IERROR,ERRMES
      DOUBLE PRECISION DEE, E, NU, NU1, NUNU,SRNAME
      DIMENSION DEE(IDEE,JDEE)
      DATA SRNAME /8H DPSN   /
      NUMSS = 3
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(NU.LT.0.0D0.OR.NU.GE.0.5D0) IERROR=2
      IF(IDEE.LT.NUMSS.OR.JDEE.LT.NUMSS) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   CALL MATNUL(DEE, IDEE, JDEE, NUMSS, NUMSS, ITEST)
      NU1 = NU/(1.0D0-NU)
      NUNU = (1.0D0-2.0D0*NU)*.5D0/(1.0D0-NU)
      DEE(1,1) = 1.0D0
      DEE(2,2) = 1.0D0
      DEE(3,3) = NUNU
      DEE(1,2) = NU1
      DEE(2,1) = NU1
      DO 1020 I=1,3
      DO 1010 J=1,3
      DEE(I,J) = DEE(I,J)*E/(2.0D0*(1.0D0+NU)*NUNU)
 1010 CONTINUE
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE DPSS(DEE, IDEE, JDEE, E, NU, NUMSS, ITEST)
      INTEGER I, IDEE, ITEST, J, JDEE, NUMSS, IERROR,ERRMES
      DOUBLE PRECISION DEE, E, NU,SRNAME
      DIMENSION DEE(IDEE,JDEE)
      DATA SRNAME /8H DPSS   /
      NUMSS = 3
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(NU.LT.0.0D0.OR.NU.GE.0.5D0) IERROR=2
      IF(IDEE.LT.NUMSS.OR.JDEE.LT.NUMSS) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   CALL MATNUL(DEE, IDEE, JDEE, NUMSS, NUMSS, ITEST)
      DEE(1,1) = 1.0D0
      DEE(2,2) = 1.0D0
      DEE(3,3) = (1.0D0-NU)*0.5D0
      DEE(1,2) = NU
      DEE(2,1) = NU
      DO 1020 I=1,3
      DO 1010 J=1,3
      DEE(I,J) = DEE(I,J)*E/(1.0D0-NU*NU)
 1010 CONTINUE
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE DPLT(DEE, IDEE, JDEE, E, NU, T, NUMSS, ITEST)
      INTEGER I, IDEE, ITEST, J, JDEE, NUMSS,IERROR,ERRMES
      DOUBLE PRECISION DEE, E, NU, T, T3,SRNAME
      DIMENSION DEE(IDEE,JDEE)
      DATA SRNAME /8H DPLT   /
      NUMSS = 3
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(NU.LT.0.0D0.OR.NU.GE.0.5D0) IERROR=2
      IF(IDEE.LT.NUMSS.OR.JDEE.LT.NUMSS) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   CALL MATNUL(DEE, IDEE, JDEE, NUMSS, NUMSS, ITEST)
      T3 = T*T*T
      DEE(1,1) = 1.0D0
      DEE(2,2) = 1.0D0
      DEE(3,3) = (1.0D0-NU)*0.5D0
      DEE(1,2) = NU
      DEE(2,1) = NU
      DO 1020 I=1,3
      DO 1010 J=1,3
      DEE(I,J) = DEE(I,J)*T3*E/(12.0D0*(1.0D0-NU*NU))
 1010 CONTINUE
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE DAXI(DEE, IDEE, JDEE, E, NU, NUMSS, ITEST)
      INTEGER I, IDEE, ITEST, J, JDEE, NUMSS, IERROR, ERRMES
      DOUBLE PRECISION DEE, E, NU, NU1, NUNU,SRNAME
      DIMENSION DEE(IDEE,JDEE)
      DATA SRNAME /8H DAXI   /
      NUMSS = 4
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(NU.LT.0.0D0.OR.NU.GE.0.5D0) IERROR=2
      IF(IDEE.LT.NUMSS.OR.JDEE.LT.NUMSS) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   CALL MATNUL(DEE, IDEE, JDEE, NUMSS, NUMSS, ITEST)
      NU1 = NU/(1.0D0-NU)
      NUNU = (1.0D0-2.0D0*NU)/(1.0D0-NU)*.5D0
      DEE(1,1) = 1.0D0
      DEE(2,2) = 1.0D0
      DEE(3,3) = NUNU
      DEE(4,4) = 1.0D0
      DEE(1,2) = NU1
      DEE(2,1) = NU1
      DEE(1,4) = NU1
      DEE(4,1) = NU1
      DEE(2,4) = NU1
      DEE(4,2) = NU1
      DO 1020 I=1,4
      DO 1010 J=1,4
      DEE(I,J) = DEE(I,J)*E*(1.0D0-NU)/(1.0D0-2.0D0*NU)/(1.0D0+NU)
 1010 CONTINUE
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE DISO(DEE, IDEE, JDEE, E, NU, NUMSS, ITEST)
      INTEGER I, IDEE, ITEST, J, JDEE, NUMSS, IERROR, ERRMES
      DOUBLE PRECISION DEE, E, NU, NU1, NUNU, SRNAME
      DIMENSION DEE(IDEE,JDEE)
      NUMSS = 6
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(NU.LT.0.0D0.OR.NU.GE.0.5D0) IERROR=2
      IF(IDEE.LT.NUMSS.OR.JDEE.LT.NUMSS) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   CALL MATNUL(DEE, IDEE, JDEE, NUMSS, NUMSS, ITEST)
      NU1 = NU/(1.0D0-NU)
      NUNU = (1.0D0-2.0D0*NU)/(1.0D0-NU)*.5D0
      DEE(1,1) = 1.0D0
      DEE(2,2) = 1.0D0
      DEE(3,3) = 1.0D0
      DEE(1,2) = NU1
      DEE(2,1) = NU1
      DEE(1,3) = NU1
      DEE(3,1) = NU1
      DEE(2,3) = NU1
      DEE(3,2) = NU1
      DEE(4,4) = NUNU
      DEE(5,5) = NUNU
      DEE(6,6) = NUNU
      DO 1020 I=1,6
      DO 1010 J=1,6
      DEE(I,J) = DEE(I,J)*E/(2.0D0*(1.0D0+NU)*NUNU)
 1010 CONTINUE
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE FREDIF(IELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, FIRST, DIF, ITEST)
      INTEGER DIF, DOFNOD, ELTOP, ERRMES, I, IDEG, IELE,
     *     IELTOP, IERROR, INF, INOD, ITEST, J, JELTOP,
     *     JNF, NF, NODEL, MAX, MIN, MAXINT
      DOUBLE PRECISION SRNAME
      LOGICAL FIRST
      DIMENSION ELTOP(IELTOP,JELTOP), NF(INF,JNF)
      DATA SRNAME /8H FREDIF /
      IF(.NOT.FIRST) GO TO 999
      FIRST=.FALSE.
      DIF=0
999   IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (IELTOP.LT.IELE) IERROR = 3
      IF (JNF.LT.DOFNOD) IERROR = 2
      IF(IELE.LE.0.OR.DOFNOD.LE.0) IERROR=1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 NODEL = ELTOP(IELE,2)
      IF (ITEST.EQ.-1) GO TO 1020
      IERROR = 0
      IF (JELTOP.LT.NODEL+2) IERROR = 4
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
1020  MAX=0
      MIN=MAXINT(MAX)
      DO 1080 I=1,NODEL
      INOD = ELTOP(IELE,I+2)
      IF (ITEST.EQ.-1) GO TO 1030
      IERROR = 0
      IF (INF.LT.INOD) IERROR = 5
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1030 DO 1070 J=1,DOFNOD
      IDEG = NF(INOD,J)
      IF (IDEG.EQ.0) GO TO 1070
      IF(IDEG.GT.MAX) MAX=IDEG
      IF(IDEG.LT.MIN) MIN=IDEG
1070  CONTINUE
1080  CONTINUE
      IF(MAX-MIN.GT.DIF) DIF=MAX-MIN
      RETURN
      END
      SUBROUTINE DIRECT(IELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      INTEGER DOFNOD, ELTOP, ERRMES, IDEG, IELE, IELTOP,
     *     IERROR, INF, INOD, ISTEER, ITEST, JELTOP,
     *     JNF, JNOD, K, NF, NODEL, STEER
      DOUBLE PRECISION SRNAME
      DIMENSION ELTOP(IELTOP,JELTOP), NF(INF,JNF),
     *     STEER(ISTEER)
      DATA SRNAME /8H DIRECT /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (JNF.LT.DOFNOD) IERROR = 3
      IF (IELTOP.LT.IELE) IERROR = 2
      IF(IELE.LE.0.OR.DOFNOD.LE.0) IERROR=1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 NODEL = ELTOP(IELE,2)
      IF (ITEST.EQ.-1) GO TO 1020
      IERROR = 0
      IF (JELTOP.LT.NODEL+2) IERROR = 4
      IF (ISTEER.LT.DOFNOD*NODEL) IERROR = 6
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1020 K = 1
      DO 1050 INOD=1,NODEL
      JNOD = ELTOP(IELE,INOD+2)
      IF (ITEST.EQ.-1) GO TO 1030
      IERROR = 0
      IF (INF.LT.JNOD) IERROR = 5
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1030 DO 1040 IDEG=1,DOFNOD
      STEER(K) = NF(JNOD,IDEG)
      K = K + 1
 1040 CONTINUE
 1050 CONTINUE
      RETURN
      END
      SUBROUTINE ELGEOM(IELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, LCORD, ILCORD, JLCORD, DIMEN, ITEST)
      INTEGER DIMEN, ELTOP, ERRMES, ICOORD, IDIM, IELE, IELTOP,
     *     IERROR, ILCORD, INOD, ITEST, JCOORD, JELTOP, JLCORD,
     *     JNOD, NODEL
      DOUBLE PRECISION COORD, LCORD, SRNAME
      DIMENSION COORD(ICOORD,JCOORD), ELTOP(IELTOP,JELTOP),
     *     LCORD(ILCORD,JLCORD)
      DATA SRNAME /8H ELGEOM /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (JLCORD.LT.DIMEN) IERROR = 4
      IF (JCOORD.LT.DIMEN) IERROR = 3
      IF (IELTOP.LT.IELE) IERROR = 2
      IF(IELE.LE.0.OR.DIMEN.LE.0) IERROR=1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 NODEL = ELTOP(IELE,2)
      IF (ITEST.EQ.-1) GO TO 1020
      IERROR = 0
      IF (JELTOP.LT.NODEL+2) IERROR = 5
      IF(ILCORD.LT.NODEL) IERROR=7
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1020 DO 1050 JNOD=1,NODEL
      INOD = ELTOP(IELE,JNOD+2)
      IF (ITEST.EQ.-1) GO TO 1030
      IERROR = 0
      IF (ICOORD.LT.INOD) IERROR = 6
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1030 DO 1040 IDIM=1,DIMEN
      LCORD(JNOD,IDIM) = COORD(INOD,IDIM)
 1040 CONTINUE
 1050 CONTINUE
      RETURN
      END
      SUBROUTINE MATIDN(A, IA, JA, M, N, ITEST)
      INTEGER ERRMES, I, IA, IERROR, ITEST, J, JA, N, M, L
      DOUBLE PRECISION A, SRNAME
      DIMENSION A(IA,JA)
      DATA SRNAME /8H MATIDN /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (M.GT.IA .OR. N.GT.JA) IERROR = 2
      IF (N.LE.0.OR.M.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1030 I=1,M
      DO 1020 J=1,N
      A(I,J) = 0.0D0
 1020 CONTINUE
 1030 CONTINUE
      L=MIN0(M,N)
      DO 999 I=1,L
      A(I,I)=1.0D0
999   CONTINUE
      RETURN
      END
      SUBROUTINE MATCOP(A, IA, JA, B, IB, JB, M, N, ITEST)
      INTEGER ERRMES, I, IA, IB, IERROR, ITEST, J, JA, JB,
     *     M, N
      DOUBLE PRECISION A, B, SRNAME
      DIMENSION A(IA,JA), B(IB,JB)
      DATA SRNAME /8H MATCOP /
      IF (ITEST.EQ.-1) GO TO 1010
      IF (M.GT.IB .OR. N.GT.JB) IERROR = 3
      IF (M.GT.IA .OR. N.GT.JA) IERROR = 2
      IF (M.GT.0 .AND. N.GT.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1030 I=1,M
      DO 1020 J=1,N
      B(I,J) = A(I,J)
 1020 CONTINUE
 1030 CONTINUE
      RETURN
      END
      SUBROUTINE MATMUL(A, IA, JA, B, IB, JB, C, IC, JC, L, M, N,
     *     ITEST)
      INTEGER ERRMES, I, IA, IB, IC, IERROR, ITEST, J, JA,
     *     JB, JC, K, L, M, N
      DOUBLE PRECISION A, B, C, SRNAME, X
      DIMENSION A(IA,JA), B(IB,JB), C(IC,JC)
      DATA SRNAME /8H MATMUL /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (L.GT.IC .OR. N.GT.JC) IERROR = 4
      IF (M.GT.IB .OR. N.GT.JB) IERROR = 3
      IF (L.GT.IA .OR. M.GT.JA) IERROR = 2
      IF (L.LE.0 .OR. M.LE.0 .OR. N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1040 I=1,L
      DO 1030 J=1,N
      X = 0.0D0
      DO 1020 K=1,M
      X = X + A(I,K)*B(K,J)
 1020 CONTINUE
      C(I,J) = X
 1030 CONTINUE
 1040 CONTINUE
      RETURN
      END
      SUBROUTINE MATVEC(A, IA, JA, V, IV, K, L, Y, IY, ITEST)
      INTEGER ERRMES, I, IA, IERROR, ITEST, IV, IY, J, JA,
     *     K, L
      DOUBLE PRECISION A, SRNAME, V, X, Y
      DIMENSION A(IA,JA), V(IV), Y(IY)
      DATA SRNAME /8H MVMULT /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (K.GT.IY) IERROR = 4
      IF (L.GT.IV) IERROR = 3
      IF (K.GT.IA .OR. L.GT.JA) IERROR = 2
      IF (K.LE.0 .OR. L.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1030 I=1,K
      X = 0.0D0
      DO 1020 J=1,L
      X = X + A(I,J)*V(J)
 1020 CONTINUE
      Y(I) = X
 1030 CONTINUE
      RETURN
      END
      SUBROUTINE MATRAN(A, IA, JA, B, IB, JB, M, N, ITEST)
      INTEGER ERRMES, I, IA, IB, IERROR, ITEST, J, JA, JB,
     *     M, N
      DOUBLE PRECISION A, B, SRNAME
      DIMENSION A(IA,JA), B(IB,JB)
      DATA SRNAME /8H MATRAN /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (N.GT.IB .OR. M.GT.JB) IERROR = 3
      IF (M.GT.IA .OR. N.GT.JA) IERROR = 2
      IF (M.LE.0 .OR. N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1030 I=1,M
      DO 1020 J=1,N
      B(J,I) = A(I,J)
 1020 CONTINUE
 1030 CONTINUE
      RETURN
      END
      SUBROUTINE MATNUL(A, IA, JA, M, N, ITEST)
      INTEGER ERRMES, I, IA, IERROR, ITEST, J, JA, M, N
      DOUBLE PRECISION A, SRNAME
      DIMENSION A(IA,JA)
      DATA SRNAME /8H MATNUL /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (M.GT.IA .OR. N.GT.JA) IERROR = 2
      IF (M.LE.0 .OR. N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1030 I=1,M
      DO 1020 J=1,N
      A(I,J) = 0.0D0
 1020 CONTINUE
 1030 CONTINUE
      RETURN
      END
      SUBROUTINE VECCOP(V, IV, W, IW, N, ITEST)
      INTEGER ERRMES, I, IERROR, ITEST, IV, IW, N
      DOUBLE PRECISION SRNAME, V, W
      DIMENSION V(IV), W(IW)
      DATA SRNAME /8H VECCOP /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (N.GT.IW) IERROR = 3
      IF (N.GT.IV) IERROR = 2
      IF (N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1020 I=1,N
      W(I) = V(I)
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE VECNUL(VEC, IVEC, N, ITEST)
      INTEGER ERRMES, I, IERROR, ITEST, IVEC, N
      DOUBLE PRECISION SRNAME, VEC
      DIMENSION VEC(IVEC)
      DATA SRNAME /8H VECNUL /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (N.GT.IVEC) IERROR = 2
      IF (N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1020 I=1,N
      VEC(I) = 0.0D0
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE SCAPRD(V, IV, W, IW, N, PRODCT, ITEST)
      INTEGER ERRMES, I, IERROR, ITEST, IV, IW, N
      DOUBLE PRECISION PRODCT, SRNAME, V, W
      DIMENSION V(IV), W(IW)
      DATA SRNAME /8H SCAPRD /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (N.GT.IW) IERROR = 3
      IF (N.GT.IV) IERROR = 2
      IF (N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 PRODCT = 0.0D0
      DO 1020 I=1,N
      PRODCT = PRODCT + V(I)*W(I)
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE DYAD(V, IV, W, IW, A, IA, JA, N, ITEST)
      INTEGER ERRMES, I, IA, IERROR, ITEST, IV, IW, J, JA,
     *     N
      DOUBLE PRECISION A, SRNAME, V, W
      DIMENSION A(IA,JA), V(IV), W(IW)
      DATA SRNAME /8H DYAD   /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (N.GT.IW) IERROR = 3
      IF (N.GT.IV) IERROR = 2
      IF (N.LE.0) IERROR = 1
      IF (N.GT.IA .OR. N.GT.JA) IERROR = 4
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1030 I=1,N
      DO 1020 J=1,N
      A(I,J) = V(I)*W(J)
 1020 CONTINUE
 1030 CONTINUE
      RETURN
      END
      SUBROUTINE VECADD(V, IV, W, IW, N, ITEST)
      INTEGER ERRMES, I, IERROR, ITEST, IV, IW, N
      DOUBLE PRECISION SRNAME, V, W
      DIMENSION V(IV), W(IW)
      DATA SRNAME /8H VECADD /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (N.GT.IW) IERROR = 3
      IF (N.GT.IV) IERROR = 2
      IF (N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1020 I=1,N
      V(I) = V(I) + W(I)
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE VECSUB(V, IV, W, IW, N, ITEST)
      INTEGER ERRMES, I, IERROR, ITEST, IV, IW, N
      DOUBLE PRECISION SRNAME, V, W
      DIMENSION V(IV), W(IW)
      DATA SRNAME /8H VECSUB /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (N.GT.IW) IERROR = 3
      IF (N.GT.IV) IERROR = 2
      IF (N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1020 I=1,N
      V(I) = V(I) - W(I)
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE MATADD(A, IA, JA, B, IB, JB, M, N, ITEST)
      INTEGER ERRMES, I, IA, IB, IERROR, ITEST, J, JA, JB,
     *     M, N
      DOUBLE PRECISION A, B, SRNAME
      DIMENSION A(IA,JA), B(IB,JB)
      DATA SRNAME /8H MATADD /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (M.GT.IB .OR. N.GT.JB) IERROR = 3
      IF (M.GT.IA .OR. N.GT.JA) IERROR = 2
      IF (M.LE.0 .OR. N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1030 I=1,M
      DO 1020 J=1,N
      A(I,J) = A(I,J) + B(I,J)
 1020 CONTINUE
 1030 CONTINUE
      RETURN
      END
      SUBROUTINE MATSUB(A, IA, JA, B, IB, JB, M, N, ITEST)
      INTEGER ERRMES, I, IA, IB, IERROR, ITEST, J, JA, JB,
     *     M, N
      DOUBLE PRECISION A, B, SRNAME
      DIMENSION A(IA,JA), B(IB,JB)
      DATA SRNAME /8H MATSUB /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (M.GT.IB .OR. N.GT.JB) IERROR = 3
      IF (M.GT.IA .OR. N.GT.JA) IERROR = 2
      IF (M.LE.0 .OR. N.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 DO 1030 I=1,M
      DO 1020 J=1,N
      A(I,J) = A(I,J) - B(I,J)
 1020 CONTINUE
 1030 CONTINUE
      RETURN
      END
      SUBROUTINE MATINV(A, IA, JA, B, IB, JB, N, DET, ITEST)
      INTEGER ERRMES, IA, IB, IERROR, ITEST, ITEST, JA, JB,
     *     K, L, M, N
      DOUBLE PRECISION A, B, DET, SRNAME, UNFLO, X
      DIMENSION A(IA,JA), B(IB,JB)
      DATA SRNAME /8H MATINV /
      IF (ITEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (N.GT.IB .OR. N.GT.JB) IERROR = 3
      IF (N.GT.IA .OR. N.GT.JA) IERROR = 2
      IF (N.LE.1.OR.N.GE.4) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1010 M = N - 1
      GO TO (1020, 1060), M
 1020 DET = A(1,1)*A(2,2) - A(1,2)*A(2,1)
      IF (ITEST.EQ.-1) GO TO 1030
      IERROR = 0
      IF (DABS(DET).LT.UNFLO(X)) IERROR = 4
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1030 B(1,1) = A(2,2)
      B(1,2) = -A(1,2)
      B(2,1) = -A(2,1)
      B(2,2) = A(1,1)
      DO 1050 K=1,2
      DO 1040 L=1,2
      B(K,L) = B(K,L)/DET
 1040 CONTINUE
 1050 CONTINUE
      RETURN
 1060 DET = A(1,1)*(A(2,2)*A(3,3)-A(3,2)*A(2,3))
      DET = DET - A(1,2)*(A(2,1)*A(3,3)-A(3,1)*A(2,3))
      DET = DET + A(1,3)*(A(2,1)*A(3,2)-A(3,1)*A(2,2))
      IF (ITEST.EQ.-1) GO TO 1070
      IERROR = 0
      IF (DABS(DET).LT.UNFLO(X)) IERROR = 4
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (IERROR.NE.0) RETURN
 1070 B(1,1) = A(2,2)*A(3,3) - A(3,2)*A(2,3)
      B(2,1) = -A(2,1)*A(3,3) + A(3,1)*A(2,3)
      B(3,1) = A(2,1)*A(3,2) - A(3,1)*A(2,2)
      B(1,2) = -A(1,2)*A(3,3) + A(3,2)*A(1,3)
      B(2,2) = A(1,1)*A(3,3) - A(3,1)*A(1,3)
      B(3,2) = -A(1,1)*A(3,2) + A(3,1)*A(1,2)
      B(1,3) = A(1,2)*A(2,3) - A(2,2)*A(1,3)
      B(2,3) = -A(1,1)*A(2,3) + A(2,1)*A(1,3)
      B(3,3) = A(1,1)*A(2,2) - A(2,1)*A(1,2)
      DO 1090 K=1,3
      DO 1080 L=1,3
      B(K,L) = B(K,L)/DET
 1080 CONTINUE
 1090 CONTINUE
      RETURN
      END
      SUBROUTINE CHORDN(KB, IKB, JKB, N, HBAND, ITEST)
      INTEGER A, B, HBAND, I, IK, IKB, ITEST, J, JKB, K, L,
     *     LK, N, W, IERROR, ERRMES
      DOUBLE PRECISION KB, X, SRNAME
      DIMENSION KB(IKB,JKB)
      DATA SRNAME /8H CHORDN  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
C     IF(N.LE.0.OR.HBAND.LE.0) IERROR=1
      IF(IKB.LT.N.OR.JKB.LT.HBAND) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   W = HBAND - 1
      DO 1050 I=1,N
      X = 0.0D0
      DO 1010 J=1,W
      X = X + KB(I,J)*KB(I,J)
 1010 CONTINUE
      IF(ITEST.EQ.-1) GO TO 998
      IERROR=0
      IF((KB(I,W+1)-X).LE.0.0E0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
998   KB(I,W+1) = DSQRT(KB(I,W+1)-X)
      DO 1040 K=1,W
      X = 0.0D0
      IF (I+K.GT.N) GO TO 1040
      IF (K.EQ.W) GO TO 1030
      L = W - K
 1020 IK = I + K
      LK = L + K
      X = X + KB(IK,L)*KB(I,LK)
      L = L - 1
      IF (L.NE.0) GO TO 1020
 1030 A = I + K
      B = W - K + 1
      KB(A,B) = (KB(A,B)-X)/KB(I,W+1)
 1040 CONTINUE
 1050 CONTINUE
      RETURN
      END
      SUBROUTINE CHOFWD(KB, IKB, JKB, LOADS, ILOADS, N, HBAND,
     *     ITEST)
      INTEGER HBAND, I, IJ, IKB, ILOADS, ITEST, J, JKB, K,
     *     N, W, IERROR, ERRMES
      DOUBLE PRECISION KB, LOADS, X, SRNAME
      DIMENSION KB(IKB,JKB), LOADS(ILOADS)
      DATA SRNAME /8H CHOFWD /
      IF(ITEST.EQ.-1) GO TO 99
      IERROR=0
      IF(ILOADS.LT.N) IERROR=3
      IF(IKB.LT.N.OR.JKB.LT.HBAND) IERROR=2
      IF(N.LE.0.OR.HBAND.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
99    W = HBAND - 1
      LOADS(1) = LOADS(1)/KB(1,W+1)
      DO 1020 I=2,N
      X = 0.0D0
      K = 1
      IF (I.LE.W+1) K = W - I + 2
      DO 1010 J=K,W
      IJ = I + J - W - 1
      X = X + KB(I,J)*LOADS(IJ)
 1010 CONTINUE
      LOADS(I) = (LOADS(I)-X)/KB(I,W+1)
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE CHOBAK(KB, IKB, JKB, LOADS, ILOADS, N, HBAND,
     *     ITEST)
      INTEGER HBAND, I, IJ, IKB, ILOADS, ITEST, J, JKB, L,
     *     M, N, W, IERROR, ERRMES
      DOUBLE PRECISION KB, LOADS, X, SRNAME
      DIMENSION KB(IKB,JKB), LOADS(ILOADS)
      DATA SRNAME /8H CHOBAK /
      IF(ITEST.EQ.-1) GO TO 99
      IERROR=0
      IF(ILOADS.LT.N) IERROR=3
      IF(IKB.LT.N.OR.JKB.LT.HBAND) IERROR=2
      IF(N.LE.0.OR.HBAND.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
99    W = HBAND - 1
      LOADS(N) = LOADS(N)/KB(N,W+1)
      I = N - 1
 1010 X = 0.0D0
      L = I + W
      IF (I.GT.N-W) L = N
      M = I + 1
      DO 1020 J=M,L
      IJ = W + I - J + 1
      X = X + KB(J,IJ)*LOADS(J)
 1020 CONTINUE
      LOADS(I) = (LOADS(I)-X)/KB(I,W+1)
      I = I - 1
      IF (I.NE.0) GO TO 1010
      RETURN
      END
      SUBROUTINE CHOSOL(KB, IKB, JKB, LOADS, ILOADS, N, HBAND, ITEST)
      INTEGER A, B, HBAND, I, IK, IKB, ITEST, J, JKB, K, L, W, M, IJ,
     *     LK, N, HBAND, IERROR, ERRMES, ILOADS
      DOUBLE PRECISION KB, X, SRNAME, LOADS
      DIMENSION KB(IKB,JKB), LOADS(ILOADS)
      DATA SRNAME /8H CHOSOL /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(ILOADS.LT.N) IERROR=3
      IF(IKB.LT.N.OR.JKB.LT.HBAND) IERROR=2
      IF(N.LE.0.OR.HBAND.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   W = HBAND - 1
      DO 1050 I=1,N
      X = 0.0D0
      DO 1010 J=1,W
      X = X + KB(I,J)*KB(I,J)
 1010 CONTINUE
      IF(ITEST.EQ.-1) GO TO 998
      IERROR=0
      IF((KB(I,W+1)-X).LE.0.0D0) IERROR=4
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
998   KB(I,W+1) = DSQRT(KB(I,W+1)-X)
      DO 1040 K=1,W
      X = 0.0D0
      IF (I+K.GT.N) GO TO 1040
      IF (K.EQ.W) GO TO 1030
      L = W - K
 1020 IK = I + K
      LK = L + K
      X = X + KB(IK,L)*KB(I,LK)
      L = L - 1
      IF (L.NE.0) GO TO 1020
 1030 A = I + K
      B = W - K + 1
      KB(A,B) = (KB(A,B)-X)/KB(I,W+1)
 1040 CONTINUE
 1050 CONTINUE
      LOADS(1) = LOADS(1)/KB(1,W+1)
      DO 2020 I=2,N
      X = 0.0D0
      K = 1
      IF (I.LE.W+1) K = W - I + 2
      DO 2010 J=K,W
      IJ = I + J - W - 1
      X = X + KB(I,J)*LOADS(IJ)
 2010 CONTINUE
      LOADS(I) = (LOADS(I)-X)/KB(I,W+1)
 2020 CONTINUE
      LOADS(N) = LOADS(N)/KB(N,W+1)
      I = N - 1
 3010 X = 0.0D0
      L = I + W
      IF (I.GT.N-W) L = N
      M = I + 1
      DO 3020 J=M,L
      IJ = W + I - J + 1
      X = X + KB(J,IJ)*LOADS(J)
 3020 CONTINUE
      LOADS(I) = (LOADS(I)-X)/KB(I,W+1)
      I = I - 1
      IF (I.NE.0) GO TO 3010
      RETURN
      END
      SUBROUTINE GAUSOL(A, IA, JA, AL, IAL, JAL, N, HBAND, ROPIV,
     *     IROPIV, R, IR, ITEST)
C-----------------------------------------------------------------------
C PURPOSE
C      CALCULATES THE SOLUTION OF A SET OF UNSYMMETRIC REAL
C      BANDED EQUATIONS WITH A SINGLE RHS USING GAUSSIAN
C      ELIMINATION WITH PARTIAL PIVOTING
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG)
C      COMMENTED    11 OCT 1980 (KR)
C
C ARGUMENTS IN
C      A       ARRAY OF DIMENSION (IA,JA).  ON ENTRY, CONTAINS
C              THE ELEMENTS OF THE BAND MATRIX
C      IA      FIRST DIMENSION OF A (.GE.N)
C      JA      SECOND DIMENSION OF A (.GE.MIN(2*HBAND-1,N))
C      IAL     FIRST DIMENSION OF ARRAY AL (.GE.N)
C      JAL     SECOND DIMENSION OF ARRAY AL (.GE.HBAND-1)
C      N       ORDER OF BAND MATRIX A
C      HBAND   SEMI-BANDWIDTH OF MATRIX A
C      IROPIV  DIMENSION OF VECTOR ROPIV (.GE.N)
C      R       ON ENTRY, CONTAINS THE VECTOR OF RHS'S
C      IR      DIMENSION OF R (.GE.N)
C      ITEST   ERROR CHECKING OPTION
C
C ARGUMENTS OUT
C      A       ON EXIT, CONTAINS THE UPPER TRIANGULAR MATRIX U,
C              WITH THE DIAGONAL ELEMENTS OF U STORED AS THEIR
C              RECIPROCALS.  THE I'TH ROW OF U IS STORED IN THE
C              I'TH ROW OF A, WITH THE DIAGONAL ELEMENT OF U IN
C              THE LOCATION A(I,1)
C      AL      CONTAINS THE SUB-DIAGONAL ELEMENTS OF L, THE
C              LOWER TRIANGULAR MATRIX.  THE MULTIPLIERS L(I,R)
C              OBTAINED AT THE R'TH MAJOR STEP OF THE
C              ELIMINATION ARE STORED IN A(R,I-R)
C      ROPIV   CONTAINS DETAILS OF THE ROW INTERCHANGES.
C              ROPIV(R)=R IF NO INTERCHANGE OCCURS AT THE R'TH
C              MAJOR STEP; IF ROWS R AND J ARE INTERCHANGED
C              THEN ROPIV(R)=J
C      R       ON EXIT, CONTAINS THE SOLUTION VECTOR
C
C ROUTINES CALLED
C      VEPS    ERRMES
C
C
C     SUBROUTINE GAUSOL(A, IA, JA, AL, IAL, JAL, N, HBAND, ROPIV,
C    *     IROPIV, R, IR, ITEST)
C***********************************************************************
C
      INTEGER ERRMES, HBAND, I, IA, IAL, IK, IR, IRO, IROPIV,
     *     IERROR, ITEST, IW, J, JA, JAL, JR, K, M,
     *     N, ROPIV, L, JJ, II, KK
      DOUBLE PRECISION A, AL, EPS, ONE, R, SRNAME, X, Y, ZERO
      DIMENSION A(IA,JA), AL(IAL,JAL), R(IR), ROPIV(IROPIV)
      DATA ONE /1.0D0/, SRNAME /8H GAUSOL /, ZERO /0.0D0/
                        IF(ITEST.EQ.-1) GO TO 999
                        IERROR=0
                        IF(IA.LT.N.OR.JA.LT.2*HBAND-1) IERROR=5
                        IF(IAL.LT.N.OR.JAL.LT.HBAND) IERROR=4
                        IF(IROPIV.LT.N) IERROR=3
                        IF(IR.LT.N) IERROR=2
                        IF(N.LE.0.OR.HBAND.LE.0) IERROR=1
                        ITEST=ERRMES(ITEST,IERROR,SRNAME)
                        IF(ITEST.NE.0) RETURN
999                     IERROR = 6
      EPS = VEPS(X)
      IW = MIN0(N,2*HBAND-1)
      M = HBAND
      K = IW - HBAND
      IF (K.LE.0) GO TO 1040
      DO 1030 I=1,K
      L = IW - M
      DO 1010 J=1,M
      JJ = J + L
      A(I,J) = A(I,JJ)
 1010 CONTINUE
      M = M + 1
      DO 1020 J=M,IW
      A(I,J) = ZERO
 1020 CONTINUE
 1030 CONTINUE
 1040 M = N - IW + HBAND + 1
      J = IW + 1
      IF (M.GT.N) GO TO 1070
      DO 1060 I=M,N
      J = J - 1
      DO 1050 K=J,IW
      A(I,K) = ZERO
 1050 CONTINUE
 1060 CONTINUE
C+++++
C     INSERT ZEROS
C
 1070 DO 1100 I=1,N
      X = ZERO
      DO 1080 J=1,IW
      X = X + DABS(A(I,J))
 1080 CONTINUE
      IF (X.GT.ZERO) GO TO 1090
      IRO = I
      GO TO 1260
 1090 AL(I,1) = ONE/X
 1100 CONTINUE
C+++++
C     ROPIV NORMS OF A CALCULATED AND THEIRO RECIPROCALS
C     STORED IN FIROST COLUMN OF AL
C
                        IERROR = 7
      DO 1180 IRO=1,N
      X = ZERO
      M = MIN0(IRO+HBAND-1,N)
      DO 1110 I=IRO,M
      Y = DABS(A(I,1))*AL(I,1)
      IF (Y.LE.X) GO TO 1110
      X = Y
      J = I
 1110 CONTINUE
      IF (X.LT.EPS) GO TO 1260
      ROPIV(IRO) = J
C+++++
C     IRO'TH PIVOT ELEMENT SELECTED
C
      IF (J.EQ.IRO) GO TO 1130
      DO 1120 I=1,IW
      X = A(IRO,I)
      A(IRO,I) = A(J,I)
      A(J,I) = X
 1120 CONTINUE
      AL(J,1) = AL(IRO,1)
C+++++
C     ROW PIVOTS IRO AND J INTERCHANGED
C
 1130 JR = IRO + 1
      Y = ONE/A(IRO,1)
      IF (JR.GT.M) GO TO 1170
      DO 1160 I=JR,M
      X = A(I,1)*Y
      IF (IW.LT.2) GO TO 1150
      DO 1140 J=2,IW
      A(I,J-1) = A(I,J) - X*A(IRO,J)
 1140 CONTINUE
 1150 IK = I - IRO
      AL(IRO,IK) = X
      A(I,IW) = ZERO
 1160 CONTINUE
 1170 A(IRO,1) = Y
 1180 CONTINUE
C+++++
C     ELIMINATION COMPLETE
C
      M = HBAND - 1
      DO 1210 K=1,N
      M = MIN0(M+1,N)
      J = ROPIV(K)
      IF (J.EQ.K) GO TO 1190
      X = R(K)
      R(K) = R(J)
      R(J) = X
C+++++
C     ROW PIVOTS K AND J INTERCHANGED
C
 1190 IK = K + 1
      IF (IK.GT.M) GO TO 1220
      X = R(K)
      DO 1200 I=IK,M
      II = I - K
      R(I) = R(I) - X*AL(K,II)
 1200 CONTINUE
 1210 CONTINUE
C+++++
C     FORWARD SUBSTITUTION COMPLETE
C
 1220 DO 1250 K=1,N
      M = MIN0(K,IW)
      I = N + 1 - K
      II = I - 1
      Y = A(I,1)
      X = R(I)
      IF (M.EQ.1) GO TO 1240
      DO 1230 J=2,M
      KK = J + II
      X = X - A(I,J)*R(KK)
 1230 CONTINUE
 1240 R(I) = X*Y
 1250 CONTINUE
C+++++
C     BACKWARD SUBSTITUTION COMPLETE
C
      RETURN
 1260 A(IRO,1) = ZERO
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
      RETURN
      END
      SUBROUTINE GAURDN(A, IA, JA, AL, IAL, JAL, N, HBAND, ROPIV,
     *     IROPIV, ITEST)
C-----------------------------------------------------------------------
C PURPOSE
C      DECOMPOSES A REAL UNSYMMETRIC MATRIX OF ORDER N INTO
C      TRIANGULAR MATRICES USING GAUSSIAN ELIMINATION WITH
C      PARTIAL PIVOTING
C
C HISTORY
C      RELEASE 1.1 29 OCT 1979 (CG)
C      COMMENTED   10 OCT 1980 (KR)
C
C ARGUMENTS IN
C      A       ARRAY OF DIMENSIONS (IA,JA).  ON ENTRY, CONTAINS
C              THE ELEMENTS OF THE BAND MATRIX
C      IA      FIRST DIMENSION OF A (.GE.N)
C      JA      SECOND DIMENSION OF A (.GE.MIN(2*HBAND-1,N))
C      IAL     FIRST DIMENSION OF ARRAY AL (.GE.N)
C      JAL     SECOND DIMENSION OF ARRAY AL (.GE.HBAND-1)
C      N       ORDER OF MATRIX A
C      HBAND   SEMI-BANDWIDTH OF MATRIX A
C      IROPIV  DIMENSION OF VECTOR ROPIV
C      ITEST   ERROR CHECKING OPTION
C
C ARGUMENTS OUT
C      A       ARRAY OF DIMENSIONS (IA,JA).  ON EXIT, CONTAINS
C              THE UPPER TRIANGULAR MATRIX U, WITH THE
C              DIAGONAL ELEMENTS OF U STORED AS THEIR
C              RECIPROCALS.  THE I'TH ROW OF U IS STORED IN THE
C              I'TH ROW OF A, STARTING WITH THE DIAGONAL
C              ELEMENT OF U IN A(I,1)
C      ROPIV   VECTOR OF LENGTH IROPIV, CONTAINING DETAILS OF
C              ROW INTERCHANGES.  IF NO INTERCHANGE OCCURS AT
C              THE R'TH MAJOR STEP THEN ROPIV(R)=R; IF THE R
C              AND J ROWS ARE INTERCHANGED THEN ROPIV(R)=J
C
C ROUTINES CALLED
C      VEPS    ERRMES
C
C
C     SUBROUTINE GAURDN(A, IA, JA, AL, IAL, JAL, N, HBAND, ROPIV,
C    *     IROPIV, ITEST)
C***********************************************************************
      INTEGER ERRMES, HBAND, I, IA, IAL, IK, IR, IROPIV, IERROR,
     *     ITEST, IW, J, JA, JAL, JJ, JR, K, L, M, N, ROPIV
      DOUBLE PRECISION A, AL, EPS, ONE, SRNAME, X, Y, ZERO
      DIMENSION A(IA,JA), AL(IAL,JAL), ROPIV(IROPIV)
      DATA ONE /1.0D0/, SRNAME /8H GAURDN /, ZERO /0.0D0/
                        IF(ITEST.EQ.-1) GO TO 999
                        IERROR=0
                        IF(IA.LT.N.OR.JA.LT.2*HBAND-1) IERROR=4
                        IF(IAL.LT.N.OR.JAL.LT.HBAND) IERROR=3
                        IF(IROPIV.LT.N) IERROR=2
                        IF(N.LE.0.OR.HBAND.LE.0) IERROR=1
                        ITEST=ERRMES(ITEST,IERROR,SRNAME)
                        IF(ITEST.NE.0) RETURN
 999                    IERROR = 5
      EPS = VEPS(X)
      IW = MIN0(N,2*HBAND-1)
      M = HBAND
      K = IW - HBAND
      IF (K.LE.0) GO TO 1040
      DO 1030 I=1,K
      L = IW - M
      DO 1010 J=1,M
      JJ = J + L
      A(I,J) = A(I,JJ)
 1010 CONTINUE
      M = M + 1
      DO 1020 J=M,IW
      A(I,J) = ZERO
 1020 CONTINUE
 1030 CONTINUE
 1040 M = N - IW + HBAND + 1
      J = IW + 1
      IF (M.GT.N) GO TO 1070
      DO 1060 I=M,N
      J = J - 1
      DO 1050 K=J,IW
      A(I,K) = ZERO
 1050 CONTINUE
 1060 CONTINUE
C+++++
C     ZEROS INSERTED
C
 1070 DO 1100 I=1,N
      X = ZERO
      DO 1080 J=1,IW
      X = X + DABS(A(I,J))
 1080 CONTINUE
      IF (X.GT.ZERO) GO TO 1090
      IR = I
      GO TO 1190
 1090 AL(I,1) = ONE/X
 1100 CONTINUE
C+++++
C     ROW NORMS OF A CALCULATED AND THEIR RECIPROCALS STORED
C     IN FIRST COLUMN OF AL
C
                        IERROR = 6
      DO 1180 IR=1,N
      X = ZERO
      M = MIN0(IR+HBAND-1,N)
      DO 1110 I=IR,M
      Y = DABS(A(I,1))*AL(I,1)
      IF (Y.LE.X) GO TO 1110
      X = Y
      J = I
 1110 CONTINUE
      IF (X.LT.EPS) GO TO 1190
      ROPIV(IR) = J
C+++++
C     IR'TH PIVOT ELEMENT SELECTED.
C
      IF (J.EQ.IR) GO TO 1130
      DO 1120 I=1,IW
      X = A(IR,I)
      A(IR,I) = A(J,I)
      A(J,I) = X
 1120 CONTINUE
      AL(J,1) = AL(IR,1)
C+++++
C     ROW IR AND J INTERCHANGED.
C
 1130 JR = IR + 1
      Y = ONE/A(IR,1)
      IF (JR.GT.M) GO TO 1170
      DO 1160 I=JR,M
      X = A(I,1)*Y
      IF (IW.LT.2) GO TO 1150
      DO 1140 J=2,IW
      A(I,J-1) = A(I,J) - X*A(IR,J)
 1140 CONTINUE
 1150 IK = I - IR
      AL(IR,IK) = X
      A(I,IW) = ZERO
 1160 CONTINUE
 1170 A(IR,1) = Y
 1180 CONTINUE
C+++++
C     ELIMINATION COMPLETED
C
      RETURN
 1190 A(IR,1) = ZERO
                        ITEST = ERRMES(ITEST,IERROR,SRNAME)
      RETURN
      END
      SUBROUTINE GAUSUB(A, IA, JA, AL, IAL, JAL, N, HBAND, ROPIV,
     *     IROPIV, R, IR, ITEST)
C-----------------------------------------------------------------------
C PURPOSE
C      CALCULATES THE SOLUTION OF A SET OF UNSYMMETRIC REAL
C      BANDED LINEAR EQUATIONS WITH A SINGLE RHS.  THE BANDED
C      MATRIX HAS PREVIOUSLY BEEN DECOMPOSED INTO TRIANGULAR
C      MATRICES USING GAURDN
C
C HISTORY
C      RELEASE 1.1  29 OCT 1979 (CG)
C      COMMENTED    11 OCT 1980 (KR)
C
C ARGUMENTS IN
C      A       ARRAY OF DIMENSIONS (IA,JA).  ON ENTRY, CONTAINS
C              THE ELEMENTS OF THE BAND MATRIX IN LU FORM,
C              AFTER PROCESSING BY GAURDN
C      IA      FIRST DIMENSION OF A (.GE.N)
C      JA      SECOND DIMENSION OF A (.GE.MIN(2*HBAND-1,N))
C      IAL     FIRST DIMENSION OF AL (.GE.N)
C      JAL     SECOND DIMENSION OF AL (.GE.HBAND-1)
C      N       ORDER OF BANDED MATRIX A
C      HBAND   SEMI-BANDWIDTH OF A
C      ROPIV   VECTOR OF DIMENSION IROPIV.  CONTAINS DETAILS
C              OF ROW INTERCHANGES PERFORMED BY GAURDN
C      IROPIV  DIMENSION OF ROPIV (.GE.N)
C      R       ON ENTRY, CONTAINS THE VECTOR OF THE RHS,
C              LENGTH IR
C      IR      DIMENSION OF R (.GE.N)
C      ITEST   ERROR CHECKING OPTION

C
C ARGUMENTS OUT
C      R       ON EXIT, CONTAINS SOLUTION VECTOR
C
C ROUTINES CALLED
C      ERRMES
C
C
C     SUBROUTINE GAUSUB(A, IA, JA, AL, IAL, JAL, N, HBAND, ROPIV,
C    *     IROPIV, R, IR, ITEST)
C***********************************************************************
C
      INTEGER ERRMES, HBAND, I, IA, IAL, II, IK, IR, IROPIV,
     *     ITEST, IW, J, JA, JAL, K, KK, M, N,
     *     ROPIV, IERROR
      DOUBLE PRECISION A, AL, R, X, Y,SRNAME
      DIMENSION A(IA,JA), AL(IAL,JAL), R(IR), ROPIV(IROPIV)
      DATA SRNAME /8H GAUSUB /
                        IF(ITEST.EQ.-1) GO TO 999
                        IERROR=0
                        IF(IR.LT.N) IERROR=5
                        IF(IA.LT.N.OR.JA.LT.2*HBAND-1) IERROR=4
                        IF(IAL.LT.N.OR.JAL.LT.HBAND) IERROR=3
                        IF(IROPIV.LT.N) IERROR=2
                        IF(N.LE.0.OR.HBAND.LE.0) IERROR=1
                        ITEST=ERRMES(ITEST,IERROR,SRNAME)
                        IF(ITEST.NE.0) RETURN
999   IW = MIN0(N,2*HBAND-1)
      M = HBAND - 1
      DO 1030 K=1,N
      M = MIN0(M+1,N)
      J = ROPIV(K)
      IF (J.EQ.K) GO TO 1010
      X = R(K)
      R(K) = R(J)
      R(J) = X
C+++++
C     ROWS K AND J INTERCHANGED
C
 1010 IK = K + 1
      IF (IK.GT.M) GO TO 1040
      X = R(K)
      DO 1020 I=IK,M
      II = I - K
      R(I) = R(I) - X*AL(K,II)
 1020 CONTINUE
 1030 CONTINUE
C+++++
C     FORWARD SUBSTITUTION COMPLETE
C
 1040 DO 1070 K=1,N
      M = MIN0(K,IW)
      I = N + 1 - K
      II = I - 1
      Y = A(I,1)
      X = R(I)
      IF (M.EQ.1) GO TO 1060
      DO 1050 J=2,M
      KK = J + II
      X = X - A(I,J)*R(KK)
 1050 CONTINUE
 1060 R(I) = X*Y
 1070 CONTINUE
C+++++
C     BACKWARD SUBSTITUTION COMPLETE
C
      RETURN
      END
      SUBROUTINE HOUSE(A, IA, JA, Z, IZ, JZ, D, ID, E, IE,
     *     N, TOL, ITEST)
C                            THIS ROUTINE REDUCES THE GIVEN
C                            LOWER TRIANGLE OF A SYMMETRIC MATRIX,
C                            A, STORED IN THE ARRAY A(N,N), TO
C                            TRIDIAGONAL FORM USING HOUSEHOLDERS
C                            REDUCTION. THE DIAGONAL OF THE RESULT
C                            IS STORED IN THE ARRAY D(N) AND THE
C                            SUB-DIAGONAL IN THE LAST N - 1 STORES
C                            OF THE ARRAY E(N) (WITH THE ADDITIONAL
C                            ELEMENT E(1) = 0). THE TRANSFORMATION
C                            MATRICES ARE ACCUMULATED IN THE ARRAY
C                            Z(N,N). THE ARRAY A IS LEFT UNALTERED
C                            UNLESS THE ACTUAL PARAMETERS
C                            CORRESPONDING TO A AND Z ARE
C                            IDENTICAL.
      INTEGER I, IA, ID, IE, II, ITEST, IZ, J, J1, JZ, K, L,
     *     N, IERROR, ERRMES
      DOUBLE PRECISION A, D, E, F, G, H, HH, TOL, Z, SRNAME
      DIMENSION A(IA,JA), D(ID), E(IE), Z(IZ,JZ)
      DATA SRNAME /8H HOUSE  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(ID.LT.N.OR.IE.LT.N) IERROR=2
      IF(IA.LT.N.OR.JA.LT.N) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   DO 1020 I=1,N
      DO 1010 J=1,I
      Z(I,J) = A(I,J)
 1010 CONTINUE
 1020 CONTINUE
      IF (N.EQ.1) GO TO 1140
      DO 1130 II=2,N
      I = N - II + 2
      L = I - 2
      F = Z(I,I-1)
      G = 0.0D0
      IF (L.EQ.0) GO TO 1040
      DO 1030 K=1,L
      G = G + Z(I,K)*Z(I,K)
 1030 CONTINUE
 1040 H = G + F*F
C                            IF G IS TOO SMALL FOR ORTHOGONALITY TO
C                            BE GUARANTEED THE TRANSFORMATION IS
C                            SKIPPED
      IF (G.GT.TOL) GO TO 1050
      E(I) = F
      H = 0.0D0
      GO TO 1120
 1050 L = L + 1
      G = DSQRT(H)
      IF (F.GE.0.0D0) G = -G
      E(I) = G
      H = H - F*G
      Z(I,I-1) = F - G
      F = 0.0D0
      DO 1090 J=1,L
      Z(J,I) = Z(I,J)/H
      G = 0.0D0
C                            FORM ELEMENT OF A*U
      DO 1060 K=1,J
      G = G + Z(J,K)*Z(I,K)
 1060 CONTINUE
      J1 = J + 1
      IF (J1.GT.L) GO TO 1080
      DO 1070 K=J1,L
      G = G + Z(K,J)*Z(I,K)
 1070 CONTINUE
C                            FORM ELEMENT OF P
 1080 E(J) = G/H
      F = F + G*Z(J,I)
 1090 CONTINUE
C                            FORM K
      HH = F/(H+H)
C                            FORM REDUCED A
      DO 1110 J=1,L
      F = Z(I,J)
      G = E(J) - HH*F
      E(J) = G
      DO 1100 K=1,J
      Z(J,K) = Z(J,K) - F*E(K) - G*Z(I,K)
 1100 CONTINUE
 1110 CONTINUE
 1120 D(I) = H
 1130 CONTINUE
 1140 E(1) = 0.0D0
      D(1) = 0.0D0
C                            ACCUMULATION OF TRANSFORMATION
C                            MATRICES
      DO 1200 I=1,N
      L = I - 1
      IF (D(I).EQ.0.0D0) GO TO 1180
      DO 1170 J=1,L
      G = 0.0D0
      DO 1150 K=1,L
      G = G + Z(I,K)*Z(K,J)
 1150 CONTINUE
      DO 1160 K=1,L
      Z(K,J) = Z(K,J) - G*Z(K,I)
 1160 CONTINUE
 1170 CONTINUE
 1180 D(I) = Z(I,I)
      Z(I,I) = 1.0D0
      IF (L.EQ.0) GO TO 1200
      DO 1190 J=1,L
      Z(I,J) = 0.0D0
      Z(J,I) = 0.0D0
 1190 CONTINUE
 1200 CONTINUE
      RETURN
      END
      SUBROUTINE QLVEC(D, ID, E, IE, Z, IZ, JZ, N, EPS, ITEST)
C                            THIS ROUTINE FINDS THE EIGENVALUES
C                            AND EIGENVECTORS OF A TRIDIAGONAL
C                            MATRIX, T, GIVEN WITH ITS DIAGONAL
C                            ELEMENTS IN THE ARRAY D(N) AND ITS
C                            SUB-DIAGONAL ELEMENTS IN THE LAST N -
C                            1 STORES OF THE ARRAY E(N), USING QL
C                            TRANSFORMATIONS. THE EIGENVALUES ARE
C                            OVERWRITTEN ON THE DIAGONAL ELEMENTS
C                            IN THE ARRAY D IN ASCENDING ORDER. THE
C                            EIGENVECTORS ARE FORMED IN THE ARRAY
C                            Z(N,N), OVERWRITING THE ACCUMULATED
C                            TRANSFORMATIONS AS SUPPLIED BY THE
C                            ROUTINE F01AJF. THE ROUTINE WILL
C                            FAIL IF ANY ONE EIGENVALUE TAKES MORE
C                            THAN 30 ITERATIONS.
      INTEGER I, I1, ID, IE, II, ITEST, IZ, J, JZ, K, L, M,
     *     M1, N, IERROR, ERRMES
      DOUBLE PRECISION B, C, D, E, EPS, F, G, H, P, R, S,
     *     Z, SRNAME
      DIMENSION D(ID), E(IE), Z(IZ,JZ)
      DATA SRNAME /8H QLVEC  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IZ.LT.N.OR.JZ.LT.N) IERROR=3
      IF(ID.LT.N.OR.IE.LT.N) IERROR=2
      IF(N.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   IF (N.EQ.1) GO TO 1020
      DO 1010 I=2,N
      E(I-1) = E(I)
 1010 CONTINUE
 1020 E(N) = 0.0D0
      B = 0.0D0
      F = 0.0D0
      DO 1150 L=1,N
      J = 0
      H = EPS*(DABS(D(L))+DABS(E(L)))
      IF (B.LT.H) B = H
C                            LOOK FOR SMALL SUB-DIAG ELEMENT
      DO 1030 M=L,N
      IF (DABS(E(M)).LE.B) GO TO 1040
 1030 CONTINUE
 1040 IF (M.EQ.L) GO TO 1140
 1050 IF (J.EQ.30) GO TO 1200
      J = J + 1
C                            FORM SHIFT
      G = D(L)
      H = D(L+1) - G
      IF (DABS(H).GE.DABS(E(L))) GO TO 1060
      P = H*0.5D0/E(L)
      R = DSQRT(P*P+1.0D0)
      H = P + R
      IF (P.LT.0.0D0) H = P - R
      D(L) = E(L)/H
      GO TO 1070
 1060 P = 2.0D0*E(L)/H
      R = DSQRT(P*P+1.0D0)
      D(L) = E(L)*P/(1.0D0+R)
 1070 H = G - D(L)
      I1 = L + 1
      IF (I1.GT.N) GO TO 1090
      DO 1080 I=I1,N
      D(I) = D(I) - H
 1080 CONTINUE
 1090 F = F + H
C                            QL TRANSFORMATION
      P = D(M)
      C = 1.0D0
      S = 0.0D0
      M1 = M - 1
      DO 1130 II=L,M1
      I = M1 - II + L
      G = C*E(I)
      H = C*P
      IF (DABS(P).LT.DABS(E(I))) GO TO 1100
      C = E(I)/P
      R = DSQRT(C*C+1.0D0)
      E(I+1) = S*P*R
      S = C/R
      C = 1.0D0/R
      GO TO 1110
 1100 C = P/E(I)
      R = DSQRT(C*C+1.0D0)
      E(I+1) = S*E(I)*R
      S = 1.0D0/R
      C = C/R
 1110 P = C*D(I) - S*G
      D(I+1) = H + S*(C*G+S*D(I))
C                            FORM VECTOR
      DO 1120 K=1,N
      H = Z(K,I+1)
      Z(K,I+1) = S*Z(K,I) + C*H
      Z(K,I) = C*Z(K,I) - S*H
 1120 CONTINUE
 1130 CONTINUE
      E(L) = S*P
      D(L) = C*P
      IF (DABS(E(L)).GT.B) GO TO 1050
 1140 D(L) = D(L) + F
 1150 CONTINUE
C                            ORDER EIGENVALUES AND EIGENVECTORS
      DO 1190 I=1,N
      K = I
      P = D(I)
      I1 = I + 1
      IF (I1.GT.N) GO TO 1170
      DO 1160 J=I1,N
      IF (D(J).GE.P) GO TO 1160
      K = J
      P = D(J)
 1160 CONTINUE
 1170 IF (K.EQ.I) GO TO 1190
      D(K) = D(I)
      D(I) = P
      DO 1180 J=1,N
      P = Z(J,I)
      Z(J,I) = Z(J,K)
      Z(J,K) = P
 1180 CONTINUE
 1190 CONTINUE
      ITEST = 0
      RETURN
 1200 IF(ITEST.EQ.-1) RETURN
      IERROR = 1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      RETURN
      END
      SUBROUTINE JACO(A, IA, JA, D, ID, E, IE, N, HBAND,
     *     ITEST)
C                            TRANSFORMS A REAL SYMMETRIC BAND
C                            MATRIX A, OF ORDER N AND BAND WIDTH M,
C                            TO TRIDIAGONAL FORM BY AN APPROPRIATE
C                            SEQUENCE OF JACOBI ROTATIONS. DURING
C                            THE TRANSFORMATION THE PROPERTY OF THE
C                            BAND MATRIX IS MAINTAINED. THE METHOD
C                            YIELDS A TRIDIAGONAL MATRIX, THE
C                            DIAGONAL ELEMENTS OF WHICH ARE IN D(N)
C                            AND OFF-DIAGONAL ELEMENTS IN E(N).
      INTEGER I, IA, ID, IE, IR, IRR, ITEST, IUGL, J,
     *     J2, JA, JL, JM, K, KR, L, M, MAXL, MAXR, N,
     *     N2,IERROR,ERRMES,HBAND
      DOUBLE PRECISION A, B, C, C2, CS, D, E, G, S, S2,
     *     U, U1, SRNAME, X
      DIMENSION A(IA,JA), D(ID), E(IE)
      DATA SRNAME /8H JACO   /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IE.LT.N) IERROR=4
      IF(ID.LT.N) IERROR=3
      IF(IA.LT.N.OR.JA.LT.HBAND) IERROR=2
      IF(N.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   K=1
      DO 901 J=2,HBAND
      K=K+1
      DO 902 I=K,N
      L=N-I+1
      M=L+K-1
      A(M,J)=A(L,J)
      A(L,J)=0.D0
902   CONTINUE
901   CONTINUE
      M=HBAND/2
      DO 904 J=1,M
      DO 903 I=1,N
      X=A(I,J)
      K=HBAND-J+1
      A(I,J)=A(I,K)
      A(I,K)=X
903   CONTINUE
904   CONTINUE
      M = HBAND - 1
      N2 = N - 2
      IF (N2.LT.1) GO TO 1090
      DO 1080 K=1,N2
      MAXR = M
      IF (N-K.LT.M) MAXR = N - K
      DO 1070 IRR=2,MAXR
      IR = 2 + MAXR - IRR
      KR = K + IR
      DO 1060 J=KR,N,M
      IF (J.EQ.KR) GO TO 1010
      IF (G.EQ.0.0D0) GO TO 1070
      JM = J - M
      B = -A(JM-1,M+1)/G
      IUGL = J - M
      GO TO 1020
 1010 IF (A(K,IR+1).EQ.0.0D0) GO TO 1070
      B = -A(K,IR)/A(K,IR+1)
      IUGL = K
 1020 S = 1.0D0/DSQRT(1.0D0+B*B)
      C = B*S
      C2 = C*C
      S2 = S*S
      CS = C*S
      U = C2*A(J-1,1) - 2.0D0*CS*A(J-1,2) + S2*A(J,1)
      U1 = S2*A(J-1,1) + 2.0D0*CS*A(J-1,2) + C2*A(J,1)
      A(J-1,2) = CS*(A(J-1,1)-A(J,1)) + (C2-S2)*A(J-1,2)
      A(J-1,1) = U
      A(J,1) = U1
      J2 = J - 2
      DO 1030 L=IUGL,J2
      JL = J - L
      U = C*A(L,JL) - S*A(L,JL+1)
      A(L,JL+1) = S*A(L,JL) + C*A(L,JL+1)
      A(L,JL) = U
 1030 CONTINUE
      JM = J - M
      IF (J.NE.KR) A(JM-1,M+1) = C*A(JM-1,M+1) - S*G
      MAXL = M - 1
      IF (N-J.LT.M-1) MAXL = N - J
      IF (MAXL.LE.0) GO TO 1050
      DO 1040 L=1,MAXL
      U = C*A(J-1,L+2) - S*A(J,L+1)
      A(J,L+1) = S*A(J-1,L+2) + C*A(J,L+1)
      A(J-1,L+2) = U
 1040 CONTINUE
 1050 IF (J+M.GT.N) GO TO 1060
      G = -S*A(J,M+1)
      A(J,M+1) = C*A(J,M+1)
 1060 CONTINUE
 1070 CONTINUE
 1080 CONTINUE
 1090 E(1) = 0.0D0
      DO 1100 I=1,N
      D(I) = A(I,1)
 1100 CONTINUE
      IF (2.GT.N) GO TO 1120
      DO 1110 I=2,N
      E(I) = A(I-1,2)
 1110 CONTINUE
 1120 RETURN
      END
      SUBROUTINE QLVAL(D, ID, E, IE, N, EPS, ITEST)
C                            THIS ROUTINE FINDS THE EIGENVALUES
C                            OF A TRIDIAGONAL MATRIX, T, GIVEN WITH
C                            ITS DIAGONAL ELEMENTS IN THE ARRAY
C                            D(N) AND ITS SUBDIAGONAL ELEMENTS IN
C                            THE LAST N - 1 STORES OF THE ARRAY
C                            E(N), USING QL TRANSFORMATIONS. THE
C                            EIGENVALUES ARE OVERWRITTEN ON THE
C                            DIAGONAL ELEMENTS IN THE ARRAY D IN
C                            ASCENDING ORDER. THE ROUTINE WILL
C                            FAIL IF ANY ONE EIGENVALUE TAKES MORE
C                            THAN 30 ITERATIONS.
      INTEGER I, I1, ID, IE, II, ITEST, J, L, M, M1, N,
     *     IERROR,ERRMES
      DOUBLE PRECISION B, C, D, E, EPS, F, G, H, P, R, S,
     *     SRNAME
      DIMENSION D(ID), E(IE)
      DATA SRNAME /8H QLVAL  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(ID.LT.N.OR.IE.LT.N) IERROR=2
      IF(N.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   IF (N.EQ.1) GO TO 1020
      DO 1010 I=2,N
      E(I-1) = E(I)
 1010 CONTINUE
 1020 E(N) = 0.0D0
      B = 0.0D0
      F = 0.0D0
      DO 1170 L=1,N
      J = 0
      H = EPS*(DABS(D(L))+DABS(E(L)))
      IF (B.LT.H) B = H
C                            LOOK FOR SMALL SUB DIAGONAL ELEMENT
      DO 1030 M=L,N
      IF (DABS(E(M)).LE.B) GO TO 1040
 1030 CONTINUE
 1040 IF (M.EQ.L) GO TO 1130
 1050 IF (J.EQ.30) GO TO 1180
      J = J + 1
C                            FORM SHIFT
      G = D(L)
      H = D(L+1) - G
      IF (DABS(H).GE.DABS(E(L))) GO TO 1060
      P = H*0.5D0/E(L)
      R = DSQRT(P*P+1.0D0)
      H = P + R
      IF (P.LT.0.0D0) H = P - R
      D(L) = E(L)/H
      GO TO 1070
 1060 P = 2.0D0*E(L)/H
      R = DSQRT(P*P+1.0D0)
      D(L) = E(L)*P/(1.0D0+R)
 1070 H = G - D(L)
      I1 = L + 1
      IF (I1.GT.N) GO TO 1090
      DO 1080 I=I1,N
      D(I) = D(I) - H
 1080 CONTINUE
 1090 F = F + H
C                            QL TRANSFORMATION
      P = D(M)
      C = 1.0D0
      S = 0.0D0
      M1 = M - 1
      DO 1120 II=L,M1
      I = M1 - II + L
      G = C*E(I)
      H = C*P
      IF (DABS(P).LT.DABS(E(I))) GO TO 1100
      C = E(I)/P
      R = DSQRT(C*C+1.0D0)
      E(I+1) = S*P*R
      S = C/R
      C = 1.0D0/R
      GO TO 1110
 1100 C = P/E(I)
      R = DSQRT(C*C+1.0D0)
      E(I+1) = S*E(I)*R
      S = 1.0D0/R
      C = C/R
 1110 P = C*D(I) - S*G
      D(I+1) = H + S*(C*G+S*D(I))
 1120 CONTINUE
      E(L) = S*P
      D(L) = C*P
      IF (DABS(E(L)).GT.B) GO TO 1050
 1130 P = D(L) + F
C                            ORDER EIGENVALUE
      IF (L.EQ.1) GO TO 1150
      DO 1140 II=2,L
      I = L - II + 2
      IF (P.GE.D(I-1)) GO TO 1160
      D(I) = D(I-1)
 1140 CONTINUE
 1150 I = 1
 1160 D(I) = P
 1170 CONTINUE
      ITEST = 0
      RETURN
 1180       IF(ITEST.EQ.-1) RETURN
      IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      RETURN
      END
      SUBROUTINE MVSLT(A, IA, JA, B, IB, C, IC, N, HBAND, ITEST)
      INTEGER HBAND, I, IJ, J, JI, N, IERROR, ITEST, ERRMES
      DOUBLE PRECISION A, B, C, X, SRNAME
      DIMENSION A(IA,JA), B(IB), C(IC)
      DATA SRNAME /8H MVSLT  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IC.LT.N) IERROR=4
      IF(IB.LT.N) IERROR=3
      IF(IA.LT.N.OR.JA.LT.HBAND) IERROR=2
      IF(N.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   DO 1050 I=1,N
      X = 0.0D0
      J = HBAND
 1010 IF (I+J.LE.HBAND) GO TO 1020
      IJ = I + J - HBAND
      X = X + A(I,J)*B(IJ)
 1020 J = J - 1
      IF (J.NE.0) GO TO 1010
      J = HBAND - 1
 1030 IF (I-J.GE.N-HBAND+1) GO TO 1040
      JI = I - J + HBAND
      X = X + A(JI,J)*B(JI)
 1040 J = J - 1
      IF (J.NE.0) GO TO 1030
      C(I) = X
 1050 CONTINUE
      RETURN
      END
      SUBROUTINE PRTTOP(TOTELS,ELTOP,IELTOP,JELTOP,ITEST)
      INTEGER TOTELS,ELTOP,IELTOP,JELTOP,ITEST
      INTEGER NOUT,I,L,K,J
      INTEGER ERRMES,IERROR
      DOUBLE PRECISION SRNAME
      DIMENSION ELTOP(IELTOP,JELTOP)
      DATA NOUT /6/,SRNAME /8H PRTTOP /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IELTOP.LT.TOTELS) IERROR=2
      IF(TOTELS.LE.0) IERROR=1
      ITEST=ERRMES(IERROR,ITEST,SRNAME)
      IF(ITEST.NE.0) RETURN
999   WRITE(NOUT,9999)
      WRITE(NOUT,9998) TOTELS
      WRITE(NOUT,9997)
      DO 100 I=1,TOTELS
      L=ELTOP(I,2)
      K=L+2
      IF(ITEST.EQ.-1) GO TO 998
      IERROR=0
      IF(JELTOP.LT.K) IERROR=3
      ITEST=ERRMES(IERROR,ITEST,SRNAME)
      IF(ITEST.NE.0) RETURN
998   WRITE(NOUT,9996) I, (ELTOP(I,J),J=1,K)
100   CONTINUE
      RETURN
9999  FORMAT(1H ,////,27H **** ELEMENT TOPOLOGY ****//)
9998  FORMAT(1H ,20HNUMBER OF ELEMENTS =,I3)
9997   FORMAT(1H0,2X,4HELEM,4X,5HELTYP,4X,5HNODEL,4X,5HNODES)
9996  FORMAT(1H0,2X,I3,5X,I3,7X,I3,4X,15(I3,2X))
      END
      SUBROUTINE PRTGEO(TOTNOD,DIMEN,COORD,ICOORD,JCOORD,ITEST)
      INTEGER TOTNOD,DIMEN,ICOORD,JCOORD,ITEST,NOUT,ERRMES,IERROR
      INTEGER I,J
      DOUBLE PRECISION COORD,SRNAME
      DIMENSION COORD(ICOORD,JCOORD)
      DATA NOUT /6/,SRNAME /8H PRTGEO /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(ICOORD.LT.TOTNOD.OR.JCOORD.LT.DIMEN)
     *   IERROR=2
      IF(TOTNOD.LE.0.OR.DIMEN.LE.0) IERROR=1
      ITEST=ERRMES(IERROR,ITEST,SRNAME)
      IF(ITEST.NE.0) RETURN
999    WRITE(NOUT,9999)
      WRITE(NOUT,9998) TOTNOD
      WRITE(NOUT,9997) DIMEN
      IF(DIMEN.EQ.1) WRITE(NOUT,9996)
      IF(DIMEN.EQ.2) WRITE(NOUT,9995)
      IF(DIMEN.EQ.3) WRITE(NOUT,9994)
      IF(DIMEN.EQ.4) WRITE(NOUT,9993)
      DO 100 I=1,TOTNOD
      WRITE(NOUT,9992) I,(COORD(I,J),J=1,DIMEN)
100   CONTINUE
      RETURN
9999  FORMAT(1H ,////,24H**** NODAL GEOMETRY ****//)
9998  FORMAT(1H ,17HNUMBER OF NODES =,I3)
9997  FORMAT(1H ,17HDIMENSIONS      =,I3)
9996  FORMAT(1H0,2X,4HNODE,9X,2HX1)
9995  FORMAT(1H0,2X,4HNODE,9X,2HX1,12X,2HX2)
9994  FORMAT(1H0,2X,4HNODE,9X,2HX1,12X,2HX2,12X,2HX3)
9993  FORMAT(1H0,2X,4HNODE,9X,2HX1,12X,2HX2,12X,2HX3,
     *       12X,2HX4)
9992  FORMAT(1H0,2X,I3,5X,4(E12.4,2X))
      END
      SUBROUTINE PRTVAL(VAL,IVAL,NF,INF,JNF,DOFNOD,TOTNOD,ITEST)
      INTEGER IVAL,INF,JNF,DOFNOD,TOTNOD,ITEST,NOUT
      INTEGER NWORK,ERRMES,IERROR
      INTEGER I,J,K
      DOUBLE PRECISION VAL,WORK,SRNAME
      DIMENSION VAL(IVAL),WORK(10),NF(INF,JNF),NWORK(10)
      DATA NOUT /6/, SRNAME /8H PRTVAL /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(INF.LT.TOTNOD.OR.JNF.LT.DOFNOD) IERROR=2
      IF(DOFNOD.LE.0.OR.TOTNOD.LE.0) IERROR=1
      ITEST=ERRMES(IERROR,ITEST,SRNAME)
      IF(ITEST.NE.0) RETURN
999   WRITE(NOUT,9999) (I,I=1,DOFNOD)
      DO 100 I=1,TOTNOD
      DO 200 J=1,DOFNOD
      K=NF(I,J)
      IF(ITEST.EQ.-1) GO TO 998
      IERROR=0
      IF(IVAL.LT.K) IERROR=3
      ITEST=ERRMES(IERROR,ITEST,SRNAME)
      IF(ITEST.NE.0) RETURN
998   WORK(J)=VAL(K)
      NWORK(J)=K
      IF(K.EQ.0) WORK(J)=0.0D0
200    CONTINUE
      WRITE(NOUT,9998) I,(WORK(K),NWORK(K),K=1,DOFNOD)
100   CONTINUE
      RETURN
9999  FORMAT(1H ,2X,4HNODE,4X,14HNODAL FREEDOMS/
     *      1H ,3X,3HNO.,10X,10(I3,17X))
9998  FORMAT(1H0,2X,I3,5X,10(E12.4,1X,1H(,I3,1H),2X))
      END
      SUBROUTINE PRTVEC(V, IV, N, ITEST)
      INTEGER I, ITEST, IV, N, NOUT, ERRMES, IERROR
      DOUBLE PRECISION V,SRNAME
      DIMENSION V(IV)
      DATA SRNAME /8H PRTVEC /
      DATA NOUT /6/
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IV.LT.N) IERROR=2
      IF(N.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   WRITE (NOUT,9010) (V(I),I=1,N)
      RETURN
 9010 FORMAT (1H , 10D12.4)
      END
      SUBROUTINE PRTMAT(A, IA, JA, M, N, ITEST)
      INTEGER I, IA, ITEST, J, JA, M, N, NOUT,
     *     IERROR, ERRMES
      DOUBLE PRECISION A, SRNAME
      DIMENSION A(IA,JA)
      DATA SRNAME /8H PRTMAT /
      DATA NOUT /6/
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IA.LT.M.OR.JA.LT.N) IERROR=2
      IF(M.LE.0.OR.N.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   DO 1010 I=1,M
      WRITE (NOUT,9010) (A(I,J),J=1,N)
 1010 CONTINUE
      RETURN
 9010 FORMAT (1H , 10D12.4)
      END
      SUBROUTINE QLIN2(WGHT, IWGHT, ABSS, IABSS, NQP, ITEST)
      INTEGER IABSS, ITEST, IWGHT, NQP,IERROR, ERRMES
      DOUBLE PRECISION ABSS, WGHT, SRNAME
      DIMENSION ABSS(IABSS), WGHT(IWGHT)
      DATA SRNAME /8H QLIN2  /
      NQP = 2
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   ABSS(1) = 1.0D0/DSQRT(3.0D0)
      ABSS(2) = -ABSS(1)
      WGHT(1) = 1.0D0
      WGHT(2) = 1.0D0
      RETURN
      END
      SUBROUTINE QLIN3(WGHT, IWGHT, ABSS, IABSS, NQP, ITEST)
      INTEGER IABSS, ITEST, IWGHT, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, WGHT, SRNAME
      DIMENSION ABSS(IABSS), WGHT(IWGHT)
      DATA SRNAME /8H QLIN3  /
      NQP = 3
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   ABSS(1) = 0.2D0*DSQRT(15.0D0)
      ABSS(2) = 0.0D0
      ABSS(3) = -ABSS(1)
      WGHT(1) = 5.0D0/9.0D0
      WGHT(3) = WGHT(1)
      WGHT(2) = 8.0D0/9.0D0
      RETURN
      END
      SUBROUTINE QTRI4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      INTEGER IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, AREA, WGHT, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QTRI4  /
      NQP = 4
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.2.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   AREA = 3.0D0*DSQRT(3.0D0)/4.0D0
      WGHT(1) = AREA*1.0D0/12.0D0
      WGHT(2) = AREA*1.0D0/12.0D0
      WGHT(3) = AREA*1.0D0/12.0D0
      WGHT(4) = AREA*3.0D0/4.0D0
      ABSS(1,1) = 1.0D0
      ABSS(2,1) = 0.0D0
      ABSS(1,2) = -0.5D0
      ABSS(2,2) = -DSQRT(3.0D0)/2.0D0
      ABSS(1,3) = -0.5D0
      ABSS(2,3) = +DSQRT(3.0D0)/2.0D0
      ABSS(1,4) = 0.0D0
      ABSS(2,4) = 0.0D0
      RETURN
      END
      SUBROUTINE QTRI7(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      INTEGER IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, AREA, WGHT, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QTRI7  /
      NQP = 7
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.2.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   AREA = 3.0D0*DSQRT(3.0D0)/4.0D0
      WGHT(1) = AREA*3.0D0/60.0D0
      WGHT(2) = AREA*8.0D0/60.0D0
      WGHT(3) = WGHT(1)
      WGHT(4) = WGHT(2)
      WGHT(5) = WGHT(1)
      WGHT(6) = WGHT(2)
      WGHT(7) = AREA*27.0D0/60.0D0
      ABSS(1,1) = 1.0D0
      ABSS(1,2) = 0.25D0
      ABSS(1,3) = -0.5D0
      ABSS(1,4) = -0.5D0
      ABSS(1,5) = -0.5D0
      ABSS(1,6) = 0.25D0
      ABSS(1,7) = 0.0D0
      ABSS(2,1) = 0.0D0
      ABSS(2,2) = -DSQRT(3.0D0)/4.0D0
      ABSS(2,3) = -DSQRT(3.0D0)/2.0D0
      ABSS(2,4) = 0.0D0
      ABSS(2,5) = DSQRT(3.0D0)/2.0D0
      ABSS(2,6) = DSQRT(3.0D0)/4.0D0
      ABSS(2,7) = 0.0D0
      RETURN
      END
      SUBROUTINE QQUA4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      INTEGER IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, AREA, WGHT, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QQUA4  /
      NQP = 4
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.2.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   AREA = 4.0D0
      WGHT(1) = AREA*0.25D+0
      WGHT(2) = AREA*0.25D+0
      WGHT(3) = AREA*0.25D+0
      WGHT(4) = AREA*0.25D+0
      ABSS(1,1) = -1.0D0/DSQRT(3.0D0)
      ABSS(1,2) = ABSS(1,1)
      ABSS(1,3) = +1.0D0/DSQRT(3.0D0)
      ABSS(1,4) = ABSS(1,3)
      ABSS(2,1) = -1.0D0/DSQRT(3.0D0)
      ABSS(2,2) = +1.0D0/DSQRT(3.0D0)
      ABSS(2,3) = ABSS(2,2)
      ABSS(2,4) = ABSS(2,1)
      RETURN
      END
      SUBROUTINE QQUA9(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      INTEGER IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, AREA, WGHT, XY, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QQUA9  /
      NQP = 9
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.2.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   AREA = 4.0D0
      WGHT(1) = AREA*25.0D0/324.0D0
      WGHT(3) = WGHT(1)
      WGHT(5) = WGHT(1)
      WGHT(7) = WGHT(1)
      WGHT(2) = AREA*10.0D0/81.0D0
      WGHT(4) = WGHT(2)
      WGHT(6) = WGHT(2)
      WGHT(8) = WGHT(2)
      WGHT(9) = AREA*16.0D0/81.0D0
      XY = DSQRT(3.0D0/5.0D0)
      ABSS(1,1) = -XY
      ABSS(2,1) = -XY
      ABSS(1,2) = -XY
      ABSS(2,2) = 0.0D0
      ABSS(1,3) = -XY
      ABSS(2,3) = XY
      ABSS(1,4) = 0.0D0
      ABSS(2,4) = XY
      ABSS(1,5) = XY
      ABSS(2,5) = XY
      ABSS(1,6) = XY
      ABSS(2,6) = 0.0D0
      ABSS(1,7) = XY
      ABSS(2,7) = -XY
      ABSS(1,8) = 0.0D0
      ABSS(2,8) = -XY
      ABSS(1,9) = 0.0D0
      ABSS(2,9) = 0.0D0
      RETURN
      END
      SUBROUTINE QTET4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      INTEGER I, IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, ALPHA, BETA, GAMA, WGHT, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QTET4  /
      NQP = 4
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.3.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   ALPHA = 0.0D0
      BETA = 0.22360680D0
      GAMA = 0.38729833D0
      DO 1010 I=1,4
      WGHT(I) = 0.25D0
 1010 CONTINUE
      ABSS(1,1) = ALPHA
      ABSS(2,1) = -BETA
      ABSS(3,1) = -GAMA
      ABSS(1,2) = ALPHA
      ABSS(2,2) = BETA
      ABSS(3,2) = -GAMA
      ABSS(1,3) = BETA
      ABSS(2,3) = ALPHA
      ABSS(3,3) = GAMA
      ABSS(1,4) = BETA
      ABSS(2,4) = ALPHA
      ABSS(3,4) = -GAMA
      RETURN
      END
      SUBROUTINE QTET5(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      INTEGER I, IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, ALPHA, BETA, GAMA, WGHT, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QTET5  /
      NQP = 5
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.3.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   ALPHA = 0.0D0
      BETA = 1.0D0/12.0D0
      GAMA = 1.0D0/(2.0D0*DSQRT(3.0D0))
      WGHT(5) = -4.0D0/5.0D0
      DO 1010 I=1,4
      ABSS(I,5) = ALPHA
      WGHT(I) = 9.0D0/20.0D0
 1010 CONTINUE
      ABSS(1,1) = ALPHA
      ABSS(2,1) = -BETA
      ABSS(3,1) = -GAMA
      ABSS(1,2) = ALPHA
      ABSS(2,2) = BETA
      ABSS(3,2) = -GAMA
      ABSS(1,3) = BETA
      ABSS(2,3) = ALPHA
      ABSS(3,3) = GAMA
      ABSS(1,4) = -BETA
      ABSS(2,4) = ALPHA
      ABSS(3,4) = GAMA
      RETURN
      END
      SUBROUTINE QBRK6(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      INTEGER I, IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, W, WGHT, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QBRK6  /
      NQP = 6
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.3.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   W = 8.0D0*(1.0D0/6.0D0)
      DO 1010 I=1,6
      WGHT(I) = W
      ABSS(1,I) = 0.0D0
      ABSS(2,I) = 0.0D0
      ABSS(3,I) = 0.0D0
 1010 CONTINUE
      ABSS(1,1) = -1.0D0
      ABSS(1,2) = 1.0D0
      ABSS(2,3) = -1.0D0
      ABSS(2,4) = 1.0D0
      ABSS(3,5) = -1.0D0
      ABSS(3,6) = 1.0D0
      RETURN
      END
      SUBROUTINE QBRK8(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      INTEGER I, IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, W, WGHT, XY, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QBRK8  /
      NQP = 8
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.3.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   W = 8.0D0*(1.0D0/8.0D0)
      XY = DSQRT(1.0D0/3.0D0)
      DO 1010 I=1,8
      WGHT(I) = W
      ABSS(1,I) = XY
      ABSS(2,I) = XY
      ABSS(3,I) = XY
 1010 CONTINUE
      DO 1020 I=1,4
      ABSS(1,I+4) = -ABSS(1,I)
      ABSS(2,2*I) = -ABSS(1,I)
 1020 CONTINUE
      DO 1030 I=1,2
      ABSS(3,I+2) = -ABSS(1,I)
      ABSS(3,I+6) = -ABSS(1,I)
 1030 CONTINUE
      RETURN
      END
      SUBROUTINE QWDG5(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP,
     *     ITEST)
      INTEGER I, IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, WGHT, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QWDG5  /
      NQP = 5
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.3.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   WGHT(1) = 24.0/81.0
      WGHT(2) = WGHT(1)
      DO 1010 I=3,5
      WGHT(I) = 11.0/81.0
 1010 CONTINUE
      ABSS(1,1) = 0.0D0
      ABSS(2,1) = 0.0D0
      ABSS(3,1) = -1.0D0
      ABSS(1,2) = 0.0D0
      ABSS(2,2) = 0.0D0
      ABSS(3,2) = 1.0D0
      ABSS(1,3) = 0.25D0
      ABSS(2,3) = -0.25D0*DSQRT(3.0D0)
      ABSS(3,3) = 0.0D0
      ABSS(1,4) = ABSS(1,3)
      ABSS(2,4) = -ABSS(2,3)
      ABSS(3,4) = 0.0D0
      ABSS(1,5) = -0.5D0
      ABSS(2,5) = 0.0D0
      ABSS(3,5) = 0.0D0
      RETURN
      END
      SUBROUTINE QWDG8(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
      INTEGER I, IABSS, ITEST, IWGHT, JABSS, NQP, IERROR, ERRMES
      DOUBLE PRECISION ABSS, WGHT, SRNAME
      DIMENSION ABSS(IABSS,JABSS), WGHT(IWGHT)
      DATA SRNAME /8H QWDG8  /
      NQP = 8
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IWGHT.LT.NQP) IERROR=1
      IF(IABSS.LT.3.OR.JABSS.LT.NQP) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   WGHT(1) = 3.0D0/8.0D0
      WGHT(2) = 3.0D0/8.0D0
      DO 1010 I=3,8
      WGHT(I) = 1.0D0/24.0D0
 1010 CONTINUE
      ABSS(1,1) = 0.0D0
      ABSS(2,1) = 0.0D0
      ABSS(3,1) = 1.0D0
      ABSS(1,2) = 0.0D0
      ABSS(2,2) = 0.0D0
      ABSS(3,2) = -1.0D0
      ABSS(1,3) = 1.0D0
      ABSS(2,3) = 0.0D0
      ABSS(3,3) = -1.0D0
      ABSS(1,4) = -0.5D0
      ABSS(2,4) = DSQRT(3.0D0)/2.0D0
      ABSS(3,4) = -1.0D0
      ABSS(1,5) = -0.5D0
      ABSS(2,5) = -ABSS(2,4)
      ABSS(3,5) = -1.0D0
      ABSS(1,6) = 1.0D0
      ABSS(2,6) = 0.0D0
      ABSS(3,6) = 1.0D0
      ABSS(1,7) = -0.5D0
      ABSS(2,7) = ABSS(2,4)
      ABSS(3,7) = 1.0D0
      ABSS(1,8) = -0.5D0
      ABSS(2,8) = ABSS(2,5)
      ABSS(3,8) = 1.0D0
      RETURN
      END
      SUBROUTINE SHAPFN(N, IN, JN, FUN, IFUN, NODEL, NDE ,ITEST)
      INTEGER I, IJ, IN, J, JN, NDE, NODEL, IERROR, ERRMES, ITEST
      DOUBLE PRECISION FUN, N, SRNAME
      DIMENSION FUN(IFUN), N(IN,JN)
      DATA SRNAME /8H SHAPFN /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(NODEL.LE.0.OR.NDE.LE.0) IERROR=1
      IF(IN.LT.NDE.OR.JN.LT.NODEL*NDE) IERROR=2
      IF(IFUN.LT.NODEL) IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   DO 1020 J=1,NODEL
      DO 1010 I=1,NDE
      IJ = (J-1)*NDE + I
      N(I,IJ) = FUN(J)
 1010 CONTINUE
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE ROD2(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST, IERROR, ERRMES
      DOUBLE PRECISION DER, FUN, XI, SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H ROD2   /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR = 0
      IF(IFUN.LT.2.OR.IDER.LT.2) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1) = 0.5D0*(1.0D0-XI)
      FUN(2) = 0.5D0*(1.0D0+XI)
      DER(1) = -0.5D0
      DER(2) = 0.5D0
      RETURN
      END
      SUBROUTINE ROD3(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST, IERROR, ERRMES
      DOUBLE PRECISION DER, FUN, XI, SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H ROD3   /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR = 0
      IF(IFUN.LT.3.OR.IDER.LT.3) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1) = 0.5D0*XI*(XI-1.0D0)
      FUN(2) = 1.0D0 - XI*XI
      FUN(3) = 0.5D0*XI*(XI+1.0D0)
      DER(1) = 0.5D0*(2.0D0*XI-1.0D0)
      DER(2) = -2.0D0*XI
      DER(3) = 0.5D0*(2.0D0*XI+1.0D0)
      RETURN
      END
      SUBROUTINE ROD4(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST, IERROR, ERRMES
      DOUBLE PRECISION DER, FUN, XI, SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H ROD4   /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR = 0
      IF(IFUN.LT.4.OR.IDER.LT.4) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1) = 1.0D0/16.0D0*(1.0D0-XI)*(9.0D0*XI*XI-1.0D0)
      FUN(2) = 9.0D0/16.0D0*(XI*XI-1.0D0)*(3.0D0*XI-1.0D0)
      FUN(3) = 9.0D0/16.0D0*(1.0D0-XI*XI)*(3.0D0*XI+1.0D0)
      FUN(4) = 1.0D0/16.0D0*(XI+1.0D0)*(9.0D0*XI*XI-1.0D0)
      DER(1) = -1.0D0/16.0D0*(1.0D0-18.0D0*XI+27.0D0*XI*XI)
      DER(2) = 9.0D0/16.0D0*(9.0D0*XI*XI-2.0D0*XI-3.0D0)
      DER(3) = 9.0D0/16.0D0*(3.0D0-2.0D0*XI-9.0D0*XI*XI)
      DER(4) = 1.0D0/16.0D0*(27.0D0*XI*XI+18.0D0*XI-1.0D0)
      RETURN
      END
      SUBROUTINE BEAM2(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST, IERROR, ERRMES
      DOUBLE PRECISION DER, FUN, XI, XI1, XI2, SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H BEAM2  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR = 0
      IF(IFUN.LT.4.OR.IDER.LT.4) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   XI1 = (XI-1.0D0)*(XI-1.0D0)
      XI2 = (XI+1.0D0)*(XI+1.0D0)
      FUN(1) = 0.25D0*(2.0D0+XI)*XI1
      FUN(2) = 0.25D0*(1.0D0+XI)*XI1
      FUN(3) = 0.25D0*(2.0D0-XI)*XI2
      FUN(4) = 0.25D0*(XI-1.0D0)*XI2
      DER(1) = 3.0D0/4.0D0*(XI+1.0D0)*(XI-1.0D0)
      DER(2) = 1.0D0/4.0D0*(3.0D0*XI+1.0D0)*(XI-1.0D0)
      DER(3) = 3.0D0/4.0D0*(1.0D0+XI)*(1.0D0-XI)
      DER(4) = 1.0D0/4.0D0*(3.0D0*XI-1.0D0)*(XI+1.0D0)
      RETURN
      END
      SUBROUTINE BEAM3(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST, IERROR, ERRMES
      DOUBLE PRECISION DER, FUN, XI, XI1, XI2, XI3, XI4, SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H BEAM3  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR = 0
      IF(IFUN.LT.6.OR.IDER.LT.6) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   XI1 = (XI-1.0D0)*(XI-1.0D0)
      XI2 = XI*XI
      XI3 = (1.0D0-XI2)*(1.0D0-XI2)
      XI4 = (XI+1.0D0)*(XI+1.0D0)
      FUN(1) = 0.25D0*(3.0D0*XI+4.0D0)*XI1*XI2
      FUN(2) = 0.25D0*(1.0D0+XI)*XI1*XI2
      FUN(3) = XI3
      FUN(4) = XI*XI3
      FUN(5) = 0.25D0*(4.0D0-3.0D0*XI)*XI4*XI2
      FUN(6) = 0.25D0*(XI-1.0D0)*XI4*XI2
      DER(1) = 1.0D0/4.0D0*XI*(XI+1.0D0)*(XI-1.0D0)*(15.0D0*
     *     XI-8.0D0)
      DER(2) = 1.0D0/4.0D0*XI*(XI-1.0D0)*(5.0D0*XI*XI+XI-2.0D0)
      DER(3) = -4.0D0*XI*(1.0D0-XI*XI)
      DER(4) = (1.0D0-XI*XI)*(1.0D0-5.0D0*XI*XI)
      DER(5) = 1.0D0/4.0D0*XI*(XI+1.0D0)*(XI-1.0D0)*(8.0D0-15.0D0*
     *     XI)
      DER(6) = 1.0D0/4.0D0*XI*(XI+1.0D0)*(5.0D0*XI*XI-XI-2.0D0)
      RETURN
      END
      SUBROUTINE TRIM3(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IDER, IFUN, ITEST, JDER, IERROR, ERRMES
      DOUBLE PRECISION DER, ETA, FUN, XI, SRNAME,Y1,Y2
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H TRIM3  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.3) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.3) IERROR=2
      Y1=1.0D0/DSQRT(3.0D0)*(XI-1.0D0)
      Y2=1.0D0/DSQRT(3.0D0)*(1.0D0-XI)
      IF((XI.LT.-0.5D0.OR.XI.GT.1.0D0).OR.
     *     (ETA.LT.Y1.OR.ETA.GT.Y2)) IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1) = 1.0D0/3.0D0*(1.0D0+2.0D0*XI)
      FUN(2) = 1.0D0/3.0D0*(1.0D0-XI-DSQRT(3.0D0)*ETA)
      FUN(3) = 1.0D0/3.0D0*(1.0D0-XI+DSQRT(3.0D0)*ETA)
      DER(1,1) = 2.0D0/3.0D0
      DER(1,2) = -1.0D0/3.0D0
      DER(1,3) = -1.0D0/3.0D0
      DER(2,1) = 0.0D0
      DER(2,2) = -1.0D0/DSQRT(3.0D0)
      DER(2,3) = +1.0D0/DSQRT(3.0D0)
      RETURN
      END
      SUBROUTINE TRIM6(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IDER, IFUN, ITEST, JDER,ERRMES,IERROR
      DOUBLE PRECISION DER, ETA, FUN, L1, L2, L3, XI,
     *     Y1,Y2,SRNAME
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H TRIM6  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.6) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.6) IERROR=2
      Y1=1.0D0/DSQRT(3.0D0)*(XI-1.0D0)
      Y2=1.0D0/DSQRT(3.0D0)*(1.0D0-XI)
      IF((XI.LT.-0.5D0.OR.XI.GT.1.0D0).OR.
     *     (ETA.LT.Y1.OR.ETA.GT.Y2)) IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   L1 = 1.0D0/3.0D0*(1.0D0+2.0D0*XI)
      L2 = 1.0D0/3.0D0*(1.0D0-XI-DSQRT(3.0D0)*ETA)
      L3 = 1.0D0/3.0D0*(1.0D0-XI+DSQRT(3.0D0)*ETA)
      FUN(1) = (2.0D0*L1-1.0D0)*L1
      FUN(2) = 4.0D0*L1*L2
      FUN(3) = (2.0D0*L2-1.0D0)*L2
      FUN(4) = 4.0D0*L2*L3
      FUN(5) = (2.0D0*L3-1.0D0)*L3
      FUN(6) = 4.0D0*L3*L1
      DER(1,1) = 2.0D0/3.0D0*(4.0D0*L1-1.0D0)
      DER(1,2) = 4.0D0/3.0D0*(2.0D0*L2-L1)
      DER(1,3) = -1.0D0/3.0D0*(4.0D0*L2-1.0D0)
      DER(1,4) = -4.0D0/3.0D0*(L2+L3)
      DER(1,5) = -1.0D0/3.0D0*(4.0D0*L3-1.0D0)
      DER(1,6) = 4.0D0/3.0D0*(2.0D0*L3-L1)
      DER(2,1) = 0.0D0
      DER(2,2) = -4.0D0/DSQRT(3.0D0)*L1
      DER(2,3) = -1.0D0/DSQRT(3.0D0)*(4.0D0*L2-1.0D0)
      DER(2,4) = 4.0D0/DSQRT(3.0D0)*(L2-L3)
      DER(2,5) = 1.0D0/DSQRT(3.0D0)*(4.0D0*L3-1.0D0)
      DER(2,6) = 4.0D0/DSQRT(3.0D0)*L1
      RETURN
      END
      SUBROUTINE TRIM10(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IFUN,IDER,JDER,ITEST,IERROR,ERRMES,I,J
      DOUBLE PRECISION FUN,DER,XI,ETA,Y1,Y2,SRNAME, L,NV,NS,DNVL,DNS1,
     *DNS2,DLX,DLY
      DIMENSION FUN(IFUN),DER(IDER,JDER), L(3), DLX(3),DLY(3)
      DATA SRNAME /8H TRIM10  /
      NV(I)=1.D0/2.D0*(3.D0*L(I)-1.D0)*(3.D0*L(I)-2.D0)*L(I)
      NS(I,J)=9.D0/2.D0*L(I)*L(J)*(3.D0*L(I)-1.D0)
      DNVL(I)=1.D0/2.D0*(27.D0*L(I)*L(I)-18.D0*L(I)+2.D0)
      DNS1(I,J)=9.D0/2.D0*L(J)*(6.D0*L(I)-1.D0)
      DNS2(I,J)=9.D0/2.D0*L(I)*(3.D0*L(I)-1.D0)
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.10) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.10) IERROR=2
      Y1=1.0D0/DSQRT(3.0D0)*(XI-1.0D0)
      Y2=1.0D0/DSQRT(3.0D0)*(1.0D0-XI)
      IF((XI.LT.-0.5D0.OR.XI.GT.1.0D0).OR.(ETA.LT.Y1.OR.ETA.GT.Y2))
     *IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   L(1) = 1.0D0/3.0D0*(1.0D0+2.0D0*XI)
      L(2) = 1.0D0/3.0D0*(1.0D0-XI-DSQRT(3.0D0)*ETA)
      L(3) = 1.0D0/3.0D0*(1.0D0-XI+DSQRT(3.0D0)*ETA)
      DLX(1)=2.D0/3.D0
      DLY(1)=0.D0
      DLX(2)=-1.D0/3.D0
      DLY(2)=-1.D0/DSQRT(3.D0)
      DLX(3)=-1.D0/3.D0
      DLY(3)=1.D0/DSQRT(3.D0)
      FUN(1)=NV(1)
      FUN(2)=NS(1,2)
      FUN(3)=NS(2,1)
      FUN(4)=NV(2)
      FUN(5)=NS(2,3)
      FUN(6)=NS(3,2)
      FUN(7)=NV(3)
      FUN(8)=NS(3,1)
      FUN(9)=NS(1,3)
      FUN(10)=27.D0*L(1)*L(2)*L(3)
      DER(1,1)=DNVL(1)*DLX(1)
      DER(2,1)=DNVL(1)*DLY(1)
      DER(1,2)=DNS1(1,2)*DLX(1)+DNS2(1,2)*DLX(2)
      DER(2,2)=DNS1(1,2)*DLY(1)+DNS2(1,2)*DLY(2)
      DER(1,3)=DNS1(2,1)*DLX(2)+DNS2(2,1)*DLX(1)
      DER(2,3)=DNS1(2,1)*DLY(2)+DNS2(2,1)*DLY(1)
      DER(1,4)=DNVL(2)*DLX(2)
      DER(2,4)=DNVL(2)*DLY(2)
      DER(1,5)=DNS1(2,3)*DLX(2)+DNS2(2,3)*DLX(3)
      DER(2,5)=DNS1(2,3)*DLY(2)+DNS2(2,3)*DLY(3)
      DER(1,6)=DNS1(3,2)*DLX(3)+DNS2(3,2)*DLX(2)
      DER(2,6)=DNS1(3,2)*DLY(3)+DNS2(3,2)*DLY(2)
      DER(1,7)=DNVL(3)*DLX(3)
      DER(2,7)=DNVL(3)*DLY(3)
      DER(1,8)=DNS1(3,1)*DLX(3)+DNS2(3,1)*DLX(1)
      DER(2,8)=DNS1(3,1)*DLY(3)+DNS2(3,1)*DLY(1)
      DER(1,9)=DNS1(1,3)*DLX(1)+DNS2(1,3)*DLX(3)
      DER(2,9)=DNS1(1,3)*DLY(1)+DNS2(1,3)*DLY(3)
      DER(1,10)=27.D0*(DLX(1)*L(2)*L(3)+L(1)*DLX(2)*L(3)+L(1)*L(2)*
     *DLX(3))
      DER(2,10)=27.D0*(DLY(1)*L(2)*L(3)+L(1)*DLY(2)*L(3)+L(1)*L(2)*
     *DLY(3))
      RETURN
      END
      SUBROUTINE QUAM4(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IDER, IFUN, ITEST, JDER,IERROR,ERRMES
      DOUBLE PRECISION DER, ETA, ETAM, ETAP, FUN, XI, XIM,
     *     XIP,SRNAME
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H QUAM4  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.4) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.4) IERROR=2
      IF(DABS(XI).GT.1.0D0.OR.DABS(ETA).GT.1.0D0)
     *    IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   ETAM = 0.250D0*(1.0D0-ETA)
      ETAP = 0.250D0*(1.0D0+ETA)
      XIM = 0.250D0*(1.0D0-XI)
      XIP = 0.250D0*(1.0D0+XI)
      FUN(1) = 4.0D0*XIM*ETAM
      FUN(2) = 4.0D0*XIM*ETAP
      FUN(3) = 4.0D0*XIP*ETAP
      FUN(4) = 4.0D0*XIP*ETAM
      DER(1,1) = -ETAM
      DER(1,2) = -ETAP
      DER(1,3) = ETAP
      DER(1,4) = ETAM
      DER(2,1) = -XIM
      DER(2,2) = XIM
      DER(2,3) = XIP
      DER(2,4) = -XIP
      RETURN
      END
      SUBROUTINE QUAM8(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IDER, IFUN, ITEST, JDER, IERROR, ERRMES
      DOUBLE PRECISION DER, ETA, ETAM, ETAP, FUN, XI, XIM,SRNAME,
     *     XIP
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H QUAM8  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.8) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.8) IERROR=2
      IF(DABS(XI).GT.1.0D0.OR.DABS(ETA).GT.1.0D0)
     *    IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   ETAM = 0.250D0*(1.0D0-ETA)
      ETAP = 0.250D0*(1.0D0+ETA)
      XIM = 0.250D0*(1.0D0-XI)
      XIP = 0.250D0*(1.0D0+XI)
      DER(1,1) = ETAM*(2.0D0*XI+ETA)
      DER(1,2) = -8.0D0*ETAM*ETAP
      DER(1,3) = ETAP*(2.0D0*XI-ETA)
      DER(1,4) = -4.0D0*ETAP*XI
      DER(1,5) = ETAP*(2.0D0*XI+ETA)
      DER(1,6) = 8.0D0*ETAP*ETAM
      DER(1,7) = ETAM*(2.0D0*XI-ETA)
      DER(1,8) = -4.0D0*ETAM*XI
      DER(2,1) = XIM*(XI+2.0D0*ETA)
      DER(2,2) = -4.0D0*XIM*ETA
      DER(2,3) = XIM*(2.0D0*ETA-XI)
      DER(2,4) = 8.0D0*XIM*XIP
      DER(2,5) = XIP*(XI+2.0D0*ETA)
      DER(2,6) = -4.0D0*XIP*ETA
      DER(2,7) = XIP*(2.0D0*ETA-XI)
      DER(2,8) = -8.0D0*XIM*XIP
      FUN(1) = 4.0D0*ETAM*XIM*(-XI-ETA-1.0D0)
      FUN(2) = 32.0D0*XIM*ETAM*ETAP
      FUN(3) = 4.0D0*ETAP*XIM*(-XI+ETA-1.0D0)
      FUN(4) = 32.0D0*XIM*XIP*ETAP
      FUN(5) = 4.0D0*XIP*ETAP*(XI+ETA-1.0D0)
      FUN(6) = 32.0D0*XIP*ETAP*ETAM
      FUN(7) = 4.0D0*XIP*ETAM*(XI-ETA-1.0D0)
      FUN(8) = 32.0D0*XIM*XIP*ETAM
      RETURN
      END
      SUBROUTINE QUAM12(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IFUN,IDER,JDER,ITEST,IERROR,ERRMES
      DOUBLE PRECISION FUN,DER,XI,ETA,SRNAME
      DIMENSION FUN(IFUN),DER(IDER,JDER)
      DATA SRNAME /8H QUAM12 /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.12) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.12) IERROR=2
      IF(DABS(XI).GT.1.0D0.OR.DABS(ETA).GT.1.0D0)IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1)=1.0D0/32.0D0*(1.0D0-XI)*(1.0D0-ETA)*(-10.0D0+9.0D0*(XI*XI+
     *ETA*ETA))
      FUN(2)=9.0D0/32.0D0*(1.0D0-XI)*(1.0D0-ETA*ETA)*(1.0D0-3.0D0*ETA)
      FUN(3)=9.0D0/32.0D0*(1.0D0-XI)*(1.0D0-ETA*ETA)*(1.0D0+3.0D0+ETA)
      FUN(4)=1.0D0/32.0D0*(1.0D0-XI)*(1.0D0+ETA)*(-10.0D0+9.0D0*(XI*XI+
     *ETA*ETA))
      FUN(5)=9.0D0/32.0D0*(1.0D0+ETA)*(1.0D0-XI*XI)*(1.0D0-3.0D0*XI)
      FUN(6)=9.0D0/32.0D0*(1.0D0+ETA)*(1.0D0-XI)*(1.0D0+3.0D0*XI)
      FUN(7)=1.0D0/32.0D0*(1.0D0+XI)*(1.0D0+ETA)*(-10.0D0+9.0D0*(XI*XI+
     *ETA*ETA))
      FUN(8)=9.0D0/32.0D0*(1.0D0+XI)*(1.0D0-ETA*ETA)*(1.0D0+3.0D0*ETA)
      FUN(9)=9.0D0/32.0D0*(1.0D0+XI)*(1.0D0-ETA*ETA)*(1.0D0-3.0D0*ETA)
      FUN(10)=1.0D0/32.0D0*(1.0D0+XI)*(1.0D0-ETA)*(-10.0D0+9.0D0*(XI*XI+
     *ETA*ETA))
      FUN(11)=9.0D0/32.0D0*(1.0D0-ETA)*(1.0D0-XI*XI)*(1.0D0+3.0D0*XI)
      FUN(12)=9.0D0/32.0D0*(1.0D0-ETA)*(1.0D0-XI*XI)*(1.0D0-3.0D0*XI)
      DER(1,1)=1.0D0/32.0D0*(1.0D0-ETA)*(10.D0-27.D0*XI*XI+18.D0*XI-
     *9.D0*ETA*ETA)
      DER(2,1)=1.D0/32.D0*(1.D0-XI)*(10.D0-27.D0*ETA*ETA+18.D0*ETA-9.D0*
     *XI*XI)
      DER(1,2)=-9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0-3.D0*ETA)
      DER(2,2)=9.D0/32.D0*(1.D0-XI)*(9.D0*ETA*ETA-2.D0*ETA-3.D0)
      DER(1,3)=-9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0+3.D0*ETA)
      DER(2,3)=9.D0/32.D0*(1.D0-XI)*(3.D0*ETA*ETA-2.D0*ETA+3.D0)
      DER(1,4)=1.D0/32.D0*(1.D0+ETA)*(10.D0-27.D0*XI*XI+18.D0*XI-9.D0*
     *ETA*ETA)
      DER(2,4)=1.D0/32.D0*(1.D0-XI)*(-10.D0+27.D0*ETA*ETA+18.D0*ETA+
     *9.D0*XI*XI)
      DER(1,5)=9.D0/32.D0*(1.D0+ETA)*(9.D0*XI*XI-2.D0*XI-3.D0)
      DER(2,5)=9.D0/32.D0*(1.D0-XI*XI)*(1.D0-3.D0*XI)
      DER(1,6)=9.D0/32.D0*(1.D0+ETA)*(3.D0-2.D0*XI-9.D0*XI*XI)
      DER(2,6)=9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0+3.D0*XI)
      DER(1,7)=1.D0/32.D0*(1.D0+ETA)*(-10.D0+27.D0*XI*XI+18.D0*XI+9.D0*
     *ETA*ETA)
      DER(2,7)=1.D0/32.D0*(1.D0+XI)*(-10.D0+27.D0*ETA*ETA+18.D0*ETA+
     *9.D0*XI*XI)
      DER(1,8)=9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0+3.D0*ETA)
      DER(2,8)=9.D0/32.D0*(1.D0+XI)*(3.D0-2.D0*ETA-9.D0*ETA*ETA)
      DER(1,9)=9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0-3.D0*ETA)
      DER(2,9)=9.D0/32.D0*(1.D0+XI)*(9.D0*ETA*ETA-2.D0*ETA-3.D0)
      DER(1,10)=1.D0/32.D0*(1.D0-ETA)*(-10.D0+27.D0*XI*XI+18.D0*XI+9.D0*
     *ETA*ETA)
      DER(2,10)=1.D0/32.D0*(1.D0+XI)*(10.D0-27.D0*ETA*ETA+18.D0*ETA-
     *9.D0*XI*XI)
      DER(1,11)=9.D0/32.D0*(1.D0-ETA)*(3.D0-2.D0*XI-9.D0*XI*XI)
      DER(2,11)=-9.D0/32.D0*(1.D0-XI*XI)*(1.D0+3.D0*XI)
      DER(1,12)=9.D0/32.D0*(1.D0-ETA)*(9.D0*XI*XI-2.D0*XI-3.D0)
      DER(2,12)=-9.D0/32.D0*(1.D0-XI*XI)*(1.D0-3.D0*XI)
      RETURN
      END
      SUBROUTINE LI2FN(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST,IERROR,ERRMES
      DOUBLE PRECISION DER, FUN, XI,SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H LI2FN  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.2.OR.IDER.LT.2) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1) = 0.5D0*(1.0D0-XI)
      FUN(2) = 0.5D0*(1.0D0+XI)
      DER(1) = -0.5D0
      DER(2) = 0.5D0
      RETURN
      END
      SUBROUTINE LI3FN(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST,ERRMES,IERROR
      DOUBLE PRECISION DER, FUN, XI, SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H LI3FN  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.3.OR.IDER.LT.3) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1) = 0.5D0*XI*(XI-1.0D0)
      FUN(2) = 1.0D0 - XI*XI
      FUN(3) = 0.5D0*XI*(XI+1.0D0)
      DER(1) = 0.5D0*(2.0D0*XI-1.0D0)
      DER(2) = -2.0D0*XI
      DER(3) = 0.5D0*(2.0D0*XI+1.0D0)
      RETURN
      END
      SUBROUTINE LI4FN(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST, IERROR, ERRMES
      DOUBLE PRECISION DER, FUN, XI, SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H LI4FN  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.4.OR.IDER.LT.4) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1) = 1.0D0/16.0D0*(1.0D0-XI)*(9.0D0*XI*XI-1.0D0)
      FUN(2) = 9.0D0/16.0D0*(XI*XI-1.0D0)*(3.0D0*XI-1.0D0)
      FUN(3) = 9.0D0/16.0D0*(1.0D0-XI*XI)*(3.0D0*XI+1.0D0)
      FUN(4) = 1.0D0/16.0D0*(XI+1.0D0)*(9.0D0*XI*XI-1.0D0)
      DER(1) = -1.0D0/16.0D0*(1.0D0-18.0D0*XI+27.0D0*XI*XI)
      DER(2) = 9.0D0/16.0D0*(9.0D0*XI*XI-2.0D0*XI-3.0D0)
      DER(3) = 9.0D0/16.0D0*(3.0D0-2.0D0*XI-9.0D0*XI*XI)
      DER(4) = 1.0D0/16.0D0*(27.0D0*XI*XI+18.0D0*XI-1.0D0)
      RETURN
      END
      SUBROUTINE LI2D1(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST, IERROR, ERRMES
      DOUBLE PRECISION DER, FUN, XI, XI1, XI2, SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H LI2D1  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.4.OR.IDER.LT.4) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   XI1 = (XI-1.0D0)*(XI-1.0D0)
      XI2 = (XI+1.0D0)*(XI+1.0D0)
      FUN(1) = 0.25D0*(2.0D0+XI)*XI1
      FUN(2) = 0.25D0*(1.0D0+XI)*XI1
      FUN(3) = 0.25D0*(2.0D0-XI)*XI2
      FUN(4) = 0.25D0*(XI-1.0D0)*XI2
      RETURN
      END
      SUBROUTINE LI3D1(FUN, IFUN, DER, IDER, XI, ITEST)
      INTEGER IDER, IFUN, ITEST,IERROR,ERRMES
      DOUBLE PRECISION DER, FUN, XI, XI1, XI2, XI3, XI4,
     *     SRNAME
      DIMENSION DER(IDER), FUN(IFUN)
      DATA SRNAME /8H LI3D1  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.6.OR.IDER.LT.6) IERROR=1
      IF(XI.LT.-1.0D0.OR.XI.GT.1.0D0) IERROR=2
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   XI1 = (XI-1.0D0)*(XI-1.0D0)
      XI2 = XI*XI
      XI3 = (1.0D0-XI2)*(1.0D0-XI2)
      XI4 = (XI+1.0D0)*(XI+1.0D0)
      FUN(1) = 0.25D0*(3.0D0*XI+4.0D0)*XI1*XI2
      FUN(2) = 0.25D0*(1.0D0+XI)*XI1*XI2
      FUN(3) = XI3
      FUN(4) = XI*XI3
      FUN(5) = 0.25D0*(4.0D0-3.0D0*XI)*XI4*XI2
      FUN(6) = 0.25D0*(XI-1.0D0)*XI4*XI2
      RETURN
      END
      SUBROUTINE TR3FN(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IDER, IFUN, ITEST, JDER, IERROR, ERRMES
      DOUBLE PRECISION DER, ETA, FUN, XI, SRNAME, Y1, Y2
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H TR3FN  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.3) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.3) IERROR=2
      Y1=1.0D0/DSQRT(3.0D0)*(XI-1.0D0)
      Y2=1.0D0/DSQRT(3.0D0)*(1.0D0-XI)
      IF((XI.LT.-0.5D0.OR.XI.GT.1.0D0).OR.
     *     (ETA.LT.Y1.OR.ETA.GT.Y2)) IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1) = 1.0D0/3.0D0*(1.0D0+2.0D0*XI)
      FUN(2) = 1.0D0/3.0D0*(1.0D0-XI-DSQRT(3.0D0)*ETA)
      FUN(3) = 1.0D0/3.0D0*(1.0D0-XI+DSQRT(3.0D0)*ETA)
      DER(1,1) = 2.0D0/3.0D0
      DER(1,2) = -1.0D0/3.0D0
      DER(1,3) = -1.0D0/3.0D0
      DER(2,1) = 0.0D0
      DER(2,2) = -1.0D0/DSQRT(3.0D0)
      DER(2,3) = +1.0D0/DSQRT(3.0D0)
      RETURN
      END
      SUBROUTINE TR6FN(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IDER, IFUN, ITEST, JDER,ERRMES,IERROR
      DOUBLE PRECISION DER, ETA, FUN, L1, L2, L3, XI,
     *     Y1,Y2,SRNAME
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H TR6FN  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.6) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.6) IERROR=2
      Y1=1.0D0/DSQRT(3.0D0)*(XI-1.0D0)
      Y2=1.0D0/DSQRT(3.0D0)*(1.0D0-XI)
      IF((XI.LT.-0.5D0.OR.XI.GT.1.0D0).OR.
     *     (ETA.LT.Y1.OR.ETA.GT.Y2)) IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   L1 = 1.0D0/3.0D0*(1.0D0+2.0D0*XI)
      L2 = 1.0D0/3.0D0*(1.0D0-XI-DSQRT(3.0D0)*ETA)
      L3 = 1.0D0/3.0D0*(1.0D0-XI+DSQRT(3.0D0)*ETA)
      FUN(1) = (2.0D0*L1-1.0D0)*L1
      FUN(2) = 4.0D0*L1*L2
      FUN(3) = (2.0D0*L2-1.0D0)*L2
      FUN(4) = 4.0D0*L2*L3
      FUN(5) = (2.0D0*L3-1.0D0)*L3
      FUN(6) = 4.0D0*L3*L1
      DER(1,1) = 2.0D0/3.0D0*(4.0D0*L1-1.0D0)
      DER(1,2) = 4.0D0/3.0D0*(2.0D0*L2-L1)
      DER(1,3) = -1.0D0/3.0D0*(4.0D0*L2-1.0D0)
      DER(1,4) = -4.0D0/3.0D0*(L2+L3)
      DER(1,5) = -1.0D0/3.0D0*(4.0D0*L3-1.0D0)
      DER(1,6) = 4.0D0/3.0D0*(2.0D0*L3-L1)
      DER(2,1) = 0.0D0
      DER(2,2) = -4.0D0/DSQRT(3.0D0)*L1
      DER(2,3) = -1.0D0/DSQRT(3.0D0)*(4.0D0*L2-1.0D0)
      DER(2,4) = 4.0D0/DSQRT(3.0D0)*(L2-L3)
      DER(2,5) = 1.0D0/DSQRT(3.0D0)*(4.0D0*L3-1.0D0)
      DER(2,6) = 4.0D0/DSQRT(3.0D0)*L1
      RETURN
      END
      SUBROUTINE TR10FN(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IFUN,IDER,JDER,ITEST,IERROR,ERRMES,I,J
      DOUBLE PRECISION FUN,DER,XI,ETA,Y1,Y2,SRNAME, L,NV,NS,DNVL,DNS1,
     *DNS2,DLX,DLY
      DIMENSION FUN(IFUN),DER(IDER,JDER), L(3), DLX(3),DLY(3)
      DATA SRNAME /8H TR10FN  /
      NV(I)=1.D0/2.D0*(3.D0*L(I)-1.D0)*(3.D0*L(I)-2.D0)*L(I)
      NS(I,J)=9.D0/2.D0*L(I)*L(J)*(3.D0*L(I)-1.D0)
      DNVL(I)=1.D0/2.D0*(27.D0*L(I)*L(I)-18.D0*L(I)+2.D0)
      DNS1(I,J)=9.D0/2.D0*L(J)*(6.D0*L(I)-1.D0)
      DNS2(I,J)=9.D0/2.D0*L(I)*(3.D0*L(I)-1.D0)
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.10) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.10) IERROR=2
      Y1=1.0D0/DSQRT(3.0D0)*(XI-1.0D0)
      Y2=1.0D0/DSQRT(3.0D0)*(1.0D0-XI)
      IF((XI.LT.-0.5D0.OR.XI.GT.1.0D0).OR.(ETA.LT.Y1.OR.ETA.GT.Y2))
     *IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   L(1) = 1.0D0/3.0D0*(1.0D0+2.0D0*XI)
      L(2) = 1.0D0/3.0D0*(1.0D0-XI-DSQRT(3.0D0)*ETA)
      L(3) = 1.0D0/3.0D0*(1.0D0-XI+DSQRT(3.0D0)*ETA)
      DLX(1)=2.D0/3.D0
      DLY(1)=0.D0
      DLX(2)=-1.D0/3.D0
      DLY(2)=-1.D0/DSQRT(3.D0)
      DLX(3)=-1.D0/3.D0
      DLY(3)=1.D0/DSQRT(3.D0)
      FUN(1)=NV(1)
      FUN(2)=NS(1,2)
      FUN(3)=NS(2,1)
      FUN(4)=NV(2)
      FUN(5)=NS(2,3)
      FUN(6)=NS(3,2)
      FUN(7)=NV(3)
      FUN(8)=NS(3,1)
      FUN(9)=NS(1,3)
      FUN(10)=27.D0*L(1)*L(2)*L(3)
      DER(1,1)=DNVL(1)*DLX(1)
      DER(2,1)=DNVL(1)*DLY(1)
      DER(1,2)=DNS1(1,2)*DLX(1)+DNS2(1,2)*DLX(2)
      DER(2,2)=DNS1(1,2)*DLY(1)+DNS2(1,2)*DLY(2)
      DER(1,3)=DNS1(2,1)*DLX(2)+DNS2(2,1)*DLX(1)
      DER(2,3)=DNS1(2,1)*DLY(2)+DNS2(2,1)*DLY(1)
      DER(1,4)=DNVL(2)*DLX(2)
      DER(2,4)=DNVL(2)*DLY(2)
      DER(1,5)=DNS1(2,3)*DLX(2)+DNS2(2,3)*DLX(3)
      DER(2,5)=DNS1(2,3)*DLY(2)+DNS2(2,3)*DLY(3)
      DER(1,6)=DNS1(3,2)*DLX(3)+DNS2(3,2)*DLX(2)
      DER(2,6)=DNS1(3,2)*DLY(3)+DNS2(3,2)*DLY(2)
      DER(1,7)=DNVL(3)*DLX(3)
      DER(2,7)=DNVL(3)*DLY(3)
      DER(1,8)=DNS1(3,1)*DLX(3)+DNS2(3,1)*DLX(1)
      DER(2,8)=DNS1(3,1)*DLY(3)+DNS2(3,1)*DLY(1)
      DER(1,9)=DNS1(1,3)*DLX(1)+DNS2(1,3)*DLX(3)
      DER(2,9)=DNS1(1,3)*DLY(1)+DNS2(1,3)*DLY(3)
      DER(1,10)=27.D0*(DLX(1)*L(2)*L(3)+L(1)*DLX(2)*L(3)+L(1)*L(2)*
     *DLX(3))
      DER(2,10)=27.D0*(DLY(1)*L(2)*L(3)+L(1)*DLY(2)*L(3)+L(1)*L(2)*
     *DLY(3))
      RETURN
      END
      SUBROUTINE QU4FN(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IDER, IFUN, ITEST, JDER,IERROR,ERRMES
      DOUBLE PRECISION DER, ETA, ETAM, ETAP, FUN, XI, XIM,
     *     XIP,SRNAME
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H QU4FN  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.4) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.4) IERROR=2
      IF(DABS(XI).GT.1.0D0.OR.DABS(ETA).GT.1.0D0)
     *    IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   ETAM = 0.250D0*(1.0D0-ETA)
      ETAP = 0.250D0*(1.0D0+ETA)
      XIM = 0.250D0*(1.0D0-XI)
      XIP = 0.250D0*(1.0D0+XI)
      FUN(1) = 4.0D0*XIM*ETAM
      FUN(2) = 4.0D0*XIM*ETAP
      FUN(3) = 4.0D0*XIP*ETAP
      FUN(4) = 4.0D0*XIP*ETAM
      DER(1,1) = -ETAM
      DER(1,2) = -ETAP
      DER(1,3) = ETAP
      DER(1,4) = ETAM
      DER(2,1) = -XIM
      DER(2,2) = XIM
      DER(2,3) = XIP
      DER(2,4) = -XIP
      RETURN
      END
      SUBROUTINE QU8FN(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IDER, IFUN, ITEST, JDER, IERROR, ERRMES
      DOUBLE PRECISION DER, ETA, ETAM, ETAP, FUN, XI, XIM,SRNAME,
     *     XIP
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H QU8FN  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.8) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.8) IERROR=2
      IF(DABS(XI).GT.1.0D0.OR.DABS(ETA).GT.1.0D0)
     *    IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   ETAM = 0.250D0*(1.0D0-ETA)
      ETAP = 0.250D0*(1.0D0+ETA)
      XIM = 0.250D0*(1.0D0-XI)
      XIP = 0.250D0*(1.0D0+XI)
      DER(1,1) = ETAM*(2.0D0*XI+ETA)
      DER(1,2) = -8.0D0*ETAM*ETAP
      DER(1,3) = ETAP*(2.0D0*XI-ETA)
      DER(1,4) = -4.0D0*ETAP*XI
      DER(1,5) = ETAP*(2.0D0*XI+ETA)
      DER(1,6) = 8.0D0*ETAP*ETAM
      DER(1,7) = ETAM*(2.0D0*XI-ETA)
      DER(1,8) = -4.0D0*ETAM*XI
      DER(2,1) = XIM*(XI+2.0D0*ETA)
      DER(2,2) = -4.0D0*XIM*ETA
      DER(2,3) = XIM*(2.0D0*ETA-XI)
      DER(2,4) = 8.0D0*XIM*XIP
      DER(2,5) = XIP*(XI+2.0D0*ETA)
      DER(2,6) = -4.0D0*XIP*ETA
      DER(2,7) = XIP*(2.0D0*ETA-XI)
      DER(2,8) = -8.0D0*XIM*XIP
      FUN(1) = 4.0D0*ETAM*XIM*(-XI-ETA-1.0D0)
      FUN(2) = 32.0D0*XIM*ETAM*ETAP
      FUN(3) = 4.0D0*ETAP*XIM*(-XI+ETA-1.0D0)
      FUN(4) = 32.0D0*XIM*XIP*ETAP
      FUN(5) = 4.0D0*XIP*ETAP*(XI+ETA-1.0D0)
      FUN(6) = 32.0D0*XIP*ETAP*ETAM
      FUN(7) = 4.0D0*XIP*ETAM*(XI-ETA-1.0D0)
      FUN(8) = 32.0D0*XIM*XIP*ETAM
      RETURN
      END
      SUBROUTINE QU12FN(FUN, IFUN, DER, IDER, JDER, XI, ETA, ITEST)
      INTEGER IFUN,IDER,JDER,ITEST,IERROR,ERRMES
      DOUBLE PRECISION FUN,DER,XI,ETA,SRNAME
      DIMENSION FUN(IFUN),DER(IDER,JDER)
      DATA SRNAME /8H QU12FN /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.12) IERROR=1
      IF(IDER.LT.2.OR.JDER.LT.12) IERROR=2
      IF(DABS(XI).GT.1.0D0.OR.DABS(ETA).GT.1.0D0)IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1)=1.0D0/32.0D0*(1.0D0-XI)*(1.0D0-ETA)*(-10.0D0+9.0D0*(XI*XI+
     *ETA*ETA))
      FUN(2)=9.0D0/32.0D0*(1.0D0-XI)*(1.0D0-ETA*ETA)*(1.0D0-3.0D0*ETA)
      FUN(3)=9.0D0/32.0D0*(1.0D0-XI)*(1.0D0-ETA*ETA)*(1.0D0+3.0D0+ETA)
      FUN(4)=1.0D0/32.0D0*(1.0D0-XI)*(1.0D0+ETA)*(-10.0D0+9.0D0*(XI*XI+
     *ETA*ETA))
      FUN(5)=9.0D0/32.0D0*(1.0D0+ETA)*(1.0D0-XI*XI)*(1.0D0-3.0D0*XI)
      FUN(6)=9.0D0/32.0D0*(1.0D0+ETA)*(1.0D0-XI)*(1.0D0+3.0D0*XI)
      FUN(7)=1.0D0/32.0D0*(1.0D0+XI)*(1.0D0+ETA)*(-10.0D0+9.0D0*(XI*XI+
     *ETA*ETA))
      FUN(8)=9.0D0/32.0D0*(1.0D0+XI)*(1.0D0-ETA*ETA)*(1.0D0+3.0D0*ETA)
      FUN(9)=9.0D0/32.0D0*(1.0D0+XI)*(1.0D0-ETA*ETA)*(1.0D0-3.0D0*ETA)
      FUN(10)=1.0D0/32.0D0*(1.0D0+XI)*(1.0D0-ETA)*(-10.0D0+9.0D0*(XI*XI+
     *ETA*ETA))
      FUN(11)=9.0D0/32.0D0*(1.0D0-ETA)*(1.0D0-XI*XI)*(1.0D0+3.0D0*XI)
      FUN(12)=9.0D0/32.0D0*(1.0D0-ETA)*(1.0D0-XI*XI)*(1.0D0-3.0D0*XI)
      DER(1,1)=1.0D0/32.0D0*(1.0D0-ETA)*(10.D0-27.D0*XI*XI+18.D0*XI-
     *9.D0*ETA*ETA)
      DER(2,1)=1.D0/32.D0*(1.D0-XI)*(10.D0-27.D0*ETA*ETA+18.D0*ETA-9.D0*
     *XI*XI)
      DER(1,2)=-9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0-3.D0*ETA)
      DER(2,2)=9.D0/32.D0*(1.D0-XI)*(9.D0*ETA*ETA-2.D0*ETA-3.D0)
      DER(1,3)=-9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0+3.D0*ETA)
      DER(2,3)=9.D0/32.D0*(1.D0-XI)*(3.D0*ETA*ETA-2.D0*ETA+3.D0)
      DER(1,4)=1.D0/32.D0*(1.D0+ETA)*(10.D0-27.D0*XI*XI+18.D0*XI-9.D0*
     *ETA*ETA)
      DER(2,4)=1.D0/32.D0*(1.D0-XI)*(-10.D0+27.D0*ETA*ETA+18.D0*ETA+
     *9.D0*XI*XI)
      DER(1,5)=9.D0/32.D0*(1.D0+ETA)*(9.D0*XI*XI-2.D0*XI-3.D0)
      DER(2,5)=9.D0/32.D0*(1.D0-XI*XI)*(1.D0-3.D0*XI)
      DER(1,6)=9.D0/32.D0*(1.D0+ETA)*(3.D0-2.D0*XI-9.D0*XI*XI)
      DER(2,6)=9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0+3.D0*XI)
      DER(1,7)=1.D0/32.D0*(1.D0+ETA)*(-10.D0+27.D0*XI*XI+18.D0*XI+9.D0*
     *ETA*ETA)
      DER(2,7)=1.D0/32.D0*(1.D0+XI)*(-10.D0+27.D0*ETA*ETA+18.D0*ETA+
     *9.D0*XI*XI)
      DER(1,8)=9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0+3.D0*ETA)
      DER(2,8)=9.D0/32.D0*(1.D0+XI)*(3.D0-2.D0*ETA-9.D0*ETA*ETA)
      DER(1,9)=9.D0/32.D0*(1.D0-ETA*ETA)*(1.D0-3.D0*ETA)
      DER(2,9)=9.D0/32.D0*(1.D0+XI)*(9.D0*ETA*ETA-2.D0*ETA-3.D0)
      DER(1,10)=1.D0/32.D0*(1.D0-ETA)*(-10.D0+27.D0*XI*XI+18.D0*XI+9.D0*
     *ETA*ETA)
      DER(2,10)=1.D0/32.D0*(1.D0+XI)*(10.D0-27.D0*ETA*ETA+18.D0*ETA-
     *9.D0*XI*XI)
      DER(1,11)=9.D0/32.D0*(1.D0-ETA)*(3.D0-2.D0*XI-9.D0*XI*XI)
      DER(2,11)=-9.D0/32.D0*(1.D0-XI*XI)*(1.D0+3.D0*XI)
      DER(1,12)=9.D0/32.D0*(1.D0-ETA)*(9.D0*XI*XI-2.D0*XI-3.D0)
      DER(2,12)=-9.D0/32.D0*(1.D0-XI*XI)*(1.D0-3.D0*XI)
      RETURN
      END
      SUBROUTINE TET4(FUN, IFUN, DER, IDER, JDER, XI, ETA, ZETA,
     *     ITEST)
      INTEGER IDER, IFUN, ITEST, JDER
      DOUBLE PRECISION DER, ETA, FUN, XI, ZETA
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      FUN(1) = 0.25D0*(1.0D0-4.0D0*ETA-2.0D0/DSQRT(3.0D0)*ZETA)
      FUN(2) = 0.25D0*(1.0D0+4.0D0*ETA-2.0D0/DSQRT(3.0D0)*ZETA)
      FUN(3) = 0.25D0*(1.0D0+4.0D0*XI+2.0D0/DSQRT(3.0D0)*ZETA)
      FUN(4) = 0.25D0*(1.0D0-4.0D0*XI+2.0D0/DSQRT(3.0D0)*ZETA)
      DER(1,1) = 0.0D0
      DER(2,1) = -1.0D0
      DER(3,1) = -0.5D0/DSQRT(3.0D0)
      DER(1,2) = 0.0D0
      DER(2,2) = 1.0D0
      DER(3,2) = -0.5D0/DSQRT(3.0D0)
      DER(1,3) = 1.0D0
      DER(2,3) = 0.0D0
      DER(3,3) = 0.5D0/DSQRT(3.0D0)
      DER(1,4) = -1.0D0
      DER(2,4) = 0.0D0
      DER(3,4) = 0.5D0/DSQRT(3.0D0)
      RETURN
      END
      SUBROUTINE TET10(FUN, IFUN, DER, IDER, JDER, XI, ETA, ZETA,
     *     ITEST)
      INTEGER IDER, IFUN, ITEST, JDER
      DOUBLE PRECISION DER, ETA, FUN, XI, ZETA
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      RETURN
      END
      SUBROUTINE TET20(FUN, IFUN, DER, IDER, JDER, XI, ETA, ZETA,
     *     ITEST)
      INTEGER IDER, IFUN, ITEST, JDER
      DOUBLE PRECISION DER, ETA, FUN, XI, ZETA
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      RETURN
      END
      SUBROUTINE BRK8(FUN, IFUN, DER, IDER, JDER, XI, ETA, ZETA,ITEST)
      INTEGER IDER, IFUN, ITEST, JDER, IERROR,ERRMES
      DOUBLE PRECISION DER, ETA, ETAM, ETAP, FUN, XI, XIM,XIP, ZETA,
     * ZETAM, ZETAP, SRNAME
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H BRK8   /
      IF (ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.8) IERROR=1
      IF(IDER.LT.3.OR.JDER.LT.8) IERROR=2
      IF(DABS(XI).GT.1.0D0.OR.DABS(ETA).GT.1.0D0
     *   .OR.DABS(ZETA).GT.1.0D0) IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   ETAM = 1.0D0 - ETA
      ETAP = 1.0D0 + ETA
      XIM = 1.0D0 - XI
      XIP = 1.0D0 + XI
      ZETAM = 1.0D0 - ZETA
      ZETAP = 1.0D0 + ZETA
      FUN(1) = 0.125D0*XIM*ETAM*ZETAM
      FUN(2) = 0.125D0*XIM*ETAM*ZETAP
      FUN(3) = 0.125D0*XIP*ETAM*ZETAP
      FUN(4) = 0.125D0*XIP*ETAM*ZETAM
      FUN(5) = 0.125D0*XIM*ETAP*ZETAM
      FUN(6) = 0.125D0*XIM*ETAP*ZETAP
      FUN(7) = 0.125D0*ETAP*XIP*ZETAP
      FUN(8) = 0.125D0*XIP*ETAP*ZETAM
      DER(1,1) = -0.125D0*ETAM*ZETAM
      DER(1,2) = -0.125D0*ETAM*ZETAP
      DER(1,3) = 0.125D0*ETAM*ZETAP
      DER(1,4) = 0.125D0*ETAM*ZETAM
      DER(1,5) = -0.125D0*ETAP*ZETAM
      DER(1,6) = -0.125D0*ETAP*ZETAP
      DER(1,7) = 0.125D0*ETAP*ZETAP
      DER(1,8) = 0.125D0*ETAP*ZETAM
      DER(2,1) = -0.125D0*XIM*ZETAM
      DER(2,2) = -0.125D0*XIM*ZETAP
      DER(2,3) = -0.125D0*XIP*ZETAP
      DER(2,4) = -0.125D0*XIP*ZETAM
      DER(2,5) = 0.125D0*XIM*ZETAM
      DER(2,6) = 0.125D0*XIM*ZETAP
      DER(2,7) = 0.125D0*XIP*ZETAP
      DER(2,8) = 0.125D0*XIP*ZETAM
      DER(3,1) = -0.125D0*XIM*ETAM
      DER(3,2) = 0.125D0*XIM*ETAM
      DER(3,3) = 0.125D0*XIP*ETAM
      DER(3,4) = -0.125D0*XIP*ETAM
      DER(3,5) = -0.125D0*XIM*ETAP
      DER(3,6) = 0.125D0*XIM*ETAP
      DER(3,7) = 0.125D0*XIP*ETAP
      DER(3,8) = -0.125D0*XIP*ETAP
      RETURN
      END
      SUBROUTINE BRK20(FUN, IFUN, DER, IDER, JDER, XI, ETA, ZETA,
     *     ITEST)
      INTEGER IDER, IFUN, ITEST, JDER, ERRMES,IERROR
      DOUBLE PRECISION DER, ETA, FUN, XI, ZETA,
     *                 NC,NSX,NSY,NSZ,DNCX,DNCY,DNCZ,
     *                 DNSXX,DNSXY,DNSXZ,DNSYX,DNSYY,
     *                 DNSYZ,DNSZX,DNSZY,DNSZZ,
     *                 X,Y,Z,ZERO,P1,M1, SRNAME
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H BRK20  /
      DATA ZERO/0.D0/,P1/1.D0/,M1/-1.D0/
      NC(X,Y,Z)=1./8.*(1.+XI*X)*(1.+ETA*Y)*(1.+ZETA*Z)*
     *          (XI*X+ETA*Y+ZETA*Z-2.)
      NSX(Y,Z)=1./4.*(1.-XI*XI)*(1.+ETA*Y)*(1.+ZETA*Z)
      NSY(X,Z)=1./4.*(1.+XI*X)*(1.-ETA*ETA)*(1.+ZETA*Z)
      NSZ(X,Y)=1./4.*(1.+XI*X)*(1.+ETA*Y)*(1.-ZETA*ZETA)
      DNCX(X,Y,Z)=1./8.*X*(1.+ETA*Y)*(1.+ZETA*Z)*
     *            (2.*XI*X+ETA*Y+ZETA*Z-1.)
      DNCY(X,Y,Z)=1./8.*Y*(1.+XI*X)*(1.+ZETA*Z)*
     *            (XI*X+2.*ETA*Y+ZETA*Z-1.)
      DNCZ(X,Y,Z)=1./8.*Z*(1.+XI*X)*(1.+ETA*Y)*
     *            (XI*X+ETA*Y+2.*ZETA*Z-1.)
      DNSXX(Y,Z)=-1./2.*XI*(1.+ETA*Y)*(1.+ZETA*Z)
      DNSXY(Y,Z)=1./4.*Y*(1.-XI*XI)*(1.+ZETA*Z)
      DNSXZ(Y,Z)=1./4.*Z*(1.-XI*XI)*(1.+ETA*Y)
      DNSYX(X,Z)=1./4.*X*(1.-ETA*ETA)*(1.+ZETA*Z)
      DNSYY(X,Z)=-1./2.*ETA*(1.+XI*X)*(1.+ZETA*Z)
      DNSYZ(X,Z)=1./4.*Z*(1.-ETA*ETA)*(1.+XI*X)
      DNSZX(X,Y)=1./4.*X*(1.+ETA*Y)*(1.-ZETA*ZETA)
      DNSZY(X,Y)=1./4.*Y*(1.+XI*X)*(1.-ZETA*ZETA)
      DNSZZ(X,Y)=-1./2.*ZETA*(1.+XI*X)*(1.+ETA*Y)
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IFUN.LT.20) IERROR=1
      IF(IDER.LT.3.OR.JDER.LT.20) IERROR=2
      IF(DABS(XI).GT.1.0.OR.DABS(ETA).GT.1.0.
     *   OR.DABS(ZETA).GT.1.0) IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   FUN(1)=NC(M1,P1,M1)
      FUN(2)=NSZ(M1,P1)
      FUN(3)=NC(M1,P1,P1)
      FUN(4)=NSY(M1,P1)
      FUN(5)=NC(M1,M1,P1)
      FUN(6)=NSZ(M1,M1)
      FUN(7)=NC(M1,M1,M1)
      FUN(8)=NSY(M1,M1)
      FUN(9)=NSX(P1,M1)
      FUN(10)=NSX(P1,P1)
      FUN(11)=NSX(M1,P1)
      FUN(12)=NSX(M1,M1)
      FUN(13)=NC(P1,P1,M1)
      FUN(14)=NSZ(P1,P1)
      FUN(15)=NC(P1,P1,P1)
      FUN(16)=NSY(P1,P1)
      FUN(17)=NC(P1,M1,P1)
      FUN(18)=NSZ(P1,M1)
      FUN(19)=NC(P1,M1,M1)
      FUN(20)=NSY(P1,M1)
      DER(1,1)=DNCX(M1,P1,M1)
      DER(2,1)=DNCY(M1,P1,M1)
      DER(3,1)=DNCZ(M1,P1,M1)
      DER(1,2)=DNSZX(M1,P1)
      DER(2,2)=DNSZY(M1,P1)
      DER(3,2)=DNSZZ(M1,P1)
      DER(1,3)=DNCX(M1,P1,P1)
      DER(2,3)=DNCY(M1,P1,P1)
      DER(3,3)=DNCZ(M1,P1,P1)
      DER(1,4)=DNSYX(M1,P1)
      DER(2,4)=DNSYY(M1,P1)
      DER(3,4)=DNSYZ(M1,P1)
      DER(1,5)=DNCX(M1,M1,P1)
      DER(2,5)=DNCY(M1,M1,P1)
      DER(3,5)=DNCZ(M1,M1,P1)
      DER(1,6)=DNSZX(M1,M1)
      DER(2,6)=DNSZY(M1,M1)
      DER(3,6)=DNSZZ(M1,M1)
      DER(1,7)=DNCX(M1,M1,M1)
      DER(2,7)=DNCY(M1,M1,M1)
      DER(3,7)=DNCZ(M1,M1,M1)
      DER(1,8)=DNSYX(M1,M1)
      DER(2,8)=DNSYY(M1,M1)
      DER(3,8)=DNSYZ(M1,M1)
      DER(1,9)=DNSXX(P1,M1)
      DER(2,9)=DNSXY(P1,M1)
      DER(3,9)=DNSXZ(P1,M1)
      DER(1,10)=DNSXX(P1,P1)
      DER(2,10)=DNSXY(P1,P1)
      DER(3,10)=DNSXZ(P1,P1)
      DER(1,11)=DNSXX(M1,P1)
      DER(2,11)=DNSXY(M1,P1)
      DER(3,11)=DNSXZ(M1,P1)
      DER(1,12)=DNSXX(M1,M1)
      DER(2,12)=DNSXY(M1,M1)
      DER(3,12)=DNSXZ(M1,M1)
      DER(1,13)=DNCX(P1,P1,M1)
      DER(2,13)=DNCY(P1,P1,M1)
      DER(3,13)=DNCZ(P1,P1,M1)
      DER(1,14)=DNSZX(P1,P1)
      DER(2,14)=DNSZY(P1,P1)
      DER(3,14)=DNSZZ(P1,P1)
      DER(1,15)=DNCX(P1,P1,P1)
      DER(2,15)=DNCY(P1,P1,P1)
      DER(3,15)=DNCY(P1,P1,P1)
      DER(1,16)=DNSYX(P1,P1)
      DER(2,16)=DNSYY(P1,P1)
      DER(3,16)=DNSYZ(P1,P1)
      DER(1,17)=DNCX(P1,M1,P1)
      DER(2,17)=DNCY(P1,M1,P1)
      DER(3,17)=DNCZ(P1,M1,P1)
      DER(1,18)=DNSZX(P1,M1)
      DER(2,18)=DNSZY(P1,M1)
      DER(3,18)=DNSZZ(P1,M1)
      DER(1,19)=DNCX(P1,M1,M1)
      DER(2,19)=DNCY(P1,M1,M1)
      DER(3,19)=DNCZ(P1,M1,M1)
      DER(1,20)=DNSYX(P1,M1)
      DER(2,20)=DNSYY(P1,M1)
      DER(3,20)=DNSYZ(P1,M1)
      RETURN
      END
      SUBROUTINE BRK32(FUN, IFUN, DER, IDER, JDER, XI, ETA, ZETA,ITEST)
      INTEGER IDER, IFUN, ITEST, JDER,ERRMES,IERROR
C?P 2
      DOUBLE PRECISION DER, ETA, FUN, XI, ZETA,NC,NSX,MSY,NSZ,P1,M1,
     *      PTHRD,MTHRD,X,Y,Z,SRNAME
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      DATA SRNAME /8H BRK32  /
      NC(X,Y,Z)=1.D0/64.D0*(1.D0+XI*X)*(1.D0+ETA*Y)*(1.D0+ZETA*Z)*(9.D0*
     *(XI*XI+ETA*ETA+ZETA*ZETA)-19.D0)
      NSX(X,Y,Z)=9.D0/64.D0*(1.D0-XI*XI)*(1+9.D0*XI*X)*(1.D0+ETA*Y)*
     *(1.D0+ZETA*Z)
      NSY(X,Y,Z)=9.D0/64.D0*(1.D0-ETA*ETA)*(1.D0+9.D0*ETA*Y)*(1.D0+XI*X)
     **(1.D0+ZETA*Z)
      NSZ(X,Y,Z)=9.D0/64.D0*(1.D0-ZETA*ZETA)*(1.D0+9.D0*ZETA*Z)*(1.D0+
     *XI*X)*(1.D0+ETA*Y)
      DNCX(X,Y,Z)=1./64.*(1.+ETA*Y)*(1.+ZETA*Z)*
     *            (X*(9.*(XI*XI+ETA*ETA+ZETA*ZETA)-19.)+
     *             18.*XI*(1.+XI*X))
      DNCY(X,Y,Z)=1./64.*(1.+XI*X)*(1.+ZETA*Z)*
     *            (Y*(9.*(XI*XI+ETA*ETA+ZETA*ZETA)-19.)+
     *             18.*ETA*(1.+ETA*Y))
      IF(ITEST.EQ.-1) GO TO 999
      IERROR = 0
      IF(IFUN.LT.32) IERROR=1
      IF(IDER.LT.3.OR.JDER.LT.32) IERROR=2
      IF(DABS(XI).GT.1.0.OR.DABS(ETA).GT.1.0
     *   .OR.DABS(ZETA).GT.1.0) IERROR=3
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   P1=1.D0
      M1=-1.D0
      PTHRD=1.D0/3.D0
      MTHRD=-1.D0/3.D0
      FUN(1)=NC(M1,P1,M1)
      FUN(2)=NSZ(M1,P1,MTHRD)
      FUN(3)=NSZ(M1,P1,PTHRD)
      FUN(4)=NC(M1,P1,P1)
      FUN(5)=NSY(M1,PTHRD,P1)
      FUN(6)=NSY(M1,MTHRD,P1)
      FUN(7)=NC(M1,M1,P1)
      FUN(8)=NSZ(M1,M1,PTHRD)
      FUN(9)=NSZ(M1,M1,MTHRD)
      FUN(10)=NC(M1,M1,M1)
      FUN(11)=NSY(M1,MTHRD,M1)
      FUN(12)=NSY(M1,PTHRD,M1)
      FUN(13)=NSX(MTHRD,P1,M1)
      FUN(14)=NSX(MTHRD,P1,P1)
      FUN(15)=NSX(MTHRD,M1,P1)
      FUN(16)=NSX(MTHRD,M1,M1)
      FUN(17)=NSX(PTHRD,P1,M1)
      FUN(18)=NSX(PTHRD,P1,P1)
      FUN(19)=NSX(PTHRD,M1,P1)
      FUN(20)=NSX(PTHRD,M1,M1)
      FUN(21)=NC(P1,P1,M1)
      FUN(22)=NSZ(P1,P1,MTHRD)
      FUN(23)=NSZ(P1,P1,PTHRD)
      FUN(24)=NC(P1,P1,P1)
      FUN(25)=NSY(P1,PTHRD,P1)
      FUN(26)=NSY(P1,MTHRD,P1)
      FUN(27)=NC(P1,M1,P1)
      FUN(28)=NSZ(P1,M1,PTHRD)
      FUN(29)=NSZ(P1,M1,MTHRD)
      FUN(30)=NC(P1,M1,M1)
      FUN(31)=NSY(P1,MTHRD,M1)
      FUN(32)=NSY(P1,PTHRD,M1)
      RETURN
      END
      SUBROUTINE WDG6(FUN, IFUN, DER, IDER, JDER, XI, ETA, ZETA,
     *     ITEST)
      INTEGER IDER, IFUN, ITEST, JDER
      DOUBLE PRECISION DER, ETA, FUN, L1, L2, L3, XI, ZETA
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      L1 = 1.0D0/3.0D0*(1.0D0+2.0D0*XI)
      L2 = 1.0D0/3.0D0*(1.0D0-XI-DSQRT(3.0D0)*ETA)
      L3 = 1.0D0/3.0D0*(1.0D0-XI+DSQRT(3.0D0)*ETA)
      FUN(1) = 0.5D0*L1*(1.0D0-ZETA)
      FUN(2) = 0.5D0*L2*(1.0D0-ZETA)
      FUN(3) = 0.5D0*L3*(1.0D0-ZETA)
      FUN(4) = 0.5D0*L1*(1.0D0+ZETA)
      FUN(5) = 0.5D0*L2*(1.0D0+ZETA)
      FUN(6) = 0.5D0*L3*(1.0D0+ZETA)
      DER(1,1) = 1.0D0/3.0D0*(1.0D0-ZETA)
      DER(2,1) = 0.0D0
      DER(3,1) = -0.5D0*L1
      DER(1,2) = -1.0D0/6.0D0*(1.0D0-ZETA)
      DER(2,2) = -0.5D0/DSQRT(3.0D0)*(1.0D0-ZETA)
      DER(3,2) = -0.5D0*L2
      DER(1,3) = -1.0D0/6.0D0*(1.0D0-ZETA)
      DER(2,3) = 0.5D0/DSQRT(3.0D0)*(1.0D0-ZETA)
      DER(3,3) = -0.5D0*L3
      DER(1,4) = 1.0D0/3.0D0*(1.0D0+ZETA)
      DER(2,4) = 0.0D0
      DER(3,4) = 0.5*L1
      DER(1,5) = -1.0D0/6.0D0*(1.0D0+ZETA)
      DER(2,5) = -0.5D0/DSQRT(3.0D0)*(1.0D0+ZETA)
      DER(3,5) = 0.5D0*L2
      DER(1,6) = -1.0D0/6.0D0*(1.0D0+ZETA)
      DER(2,6) = 0.5D0/DSQRT(3.0D0)*(1.0D0+ZETA)
      DER(3,6) = 0.5*L3
      RETURN
      END
      SUBROUTINE WDG15(FUN, IFUN, DER, IDER, JDER, XI, ETA, ZETA,
     *     ITEST)
      INTEGER IDER, IFUN, ITEST, JDER
      DOUBLE PRECISION DER, ETA, FUN, L1, L2, L3, L4,
     *     XI, ZETA
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      RETURN
      END
      SUBROUTINE WDG26(FUN, IFUN, DER, IDER, JDER, XI, ETA, ZETA,
     *     ITEST)
      INTEGER IDER, IFUN, ITEST, JDER
      DOUBLE PRECISION DER, ETA, FUN, XI, ZETA
      DIMENSION DER(IDER,JDER), FUN(IFUN)
      RETURN
      END
      SUBROUTINE FORMNF(NFDAT, INFDAT, JNFDAT, RN, NN, DOFNOD, NF,
     *     INF, JNF, TOTDOF, ITEST)
      INTEGER DOFNOD, I, INF, J, K, L, NF, NFDAT, NN, RN, TOTDOF,
     *     IERROR,ERRMES
      DOUBLE PRECISION SRNAME
      DIMENSION NF(INF,JNF), NFDAT(INFDAT,JNFDAT)
      DATA SRNAME /8H FORMNF /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(INF.LT.NN.OR.JNF.LT.DOFNOD) IERROR=3
      IF(INFDAT.LT.RN.OR.JNFDAT.LT.DOFNOD+1) IERROR=2
      IF(RN.LE.0.OR.NN.LE.0.OR.DOFNOD.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   DO 1020 I=1,NN
      DO 1010 J=1,DOFNOD
      NF(I,J) = 1
 1010 CONTINUE
 1020 CONTINUE
      DO 1040 I=1,RN
      K = NFDAT(I,1)
      DO 1030 J=1,DOFNOD
      L = NFDAT(I,J+1)
      IF(ITEST.EQ.-1) GO TO 888
      IERROR=0
      IF(K.GT.NN.OR.L.GT.DOFNOD) IERROR=4
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
888   IF (L.NE.0) NF(K,L) = 0
 1030 CONTINUE
 1040 CONTINUE
      K = 1
      DO 1060 I=1,NN
      DO 1050 J=1,DOFNOD
      IF (NF(I,J).EQ.0) GO TO 1050
      NF(I,J) = K
      K = K + 1
 1050 CONTINUE
 1060 CONTINUE
      TOTDOF = K - 1
      RETURN
      END
      SUBROUTINE ASLMS(SYSM,ISYSM,ELM,IELM,JELM,STEER,ISTEER,
     *     DOFEL,DOFNOD,SIZE,ITEST)
      INTEGER DOFEL, I, ISTEER, ISYSM, ITEST, J, STEER,
     *     ERRMES, IERROR, IELM, JELM, DOFEL,DOFNOD
      DOUBLE PRECISION SIZE, SYSM, SRNAME, ELM,X, ZERO
      DIMENSION STEER(ISTEER), SYSM(ISYSM), ELM(IELM,JELM)
      DATA SRNAME /8H ASLMS  /, ZERO /0.0D0/
      IF (ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IELM.LT.DOFEL.OR.JELM.LT.DOFEL) IERROR=2
      IF(ISTEER.LT.DOFEL) IERROR=3
      IF(DOFEL.EQ.0.OR.DOFNOD.EQ.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   X=0.0D0
      DO 900 I=1,DOFEL
      X=X+ELM(I,I)
900   CONTINUE
      X=SIZE/X*DBLE(FLOAT(DOFNOD))
      DO 777 I=1,DOFEL
      DO 776 J=1,DOFEL
      IF(I.EQ.J) GO TO 775
      ELM(I,J)=ZERO
      GO TO 776
775   ELM(I,J)=ELM(I,J)*X
776   CONTINUE
777   CONTINUE
      DO 1010 I=1,DOFEL
      J = STEER(I)
      IF (J.EQ.0) GO TO 1010
      IF(ITEST.EQ.-1) GO TO 888
      IERROR=0
      IF(ISYSM.LT.J) IERROR=4
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
888   SYSM(J) = SYSM(J) +  ELM(I,I)
 1010 CONTINUE
      RETURN
      END
      SUBROUTINE ASSYM(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, G, IG,
     *     CDMAX, DOFEL, ITEST)
      INTEGER CD, CDMAX, DOFEL, DOFEL, G, GI, I, IELK, IG,
     *     ISYSK, ITEST, J, JELK, JSYSK, IERROR, ERRMES
      DOUBLE PRECISION ELK, SYSK, SRNAME
      DIMENSION ELK(IELK,JELK), G(IG), SYSK(ISYSK,JSYSK)
      DATA SRNAME /8H ASSYM  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IG.LT.DOFEL) IERROR=4
      IF(IELK.LT.DOFEL.OR.JELK.LT.DOFEL) IERROR=3
      IF(JSYSK.LT.CDMAX) IERROR=2
      IF(CDMAX.LE.0.OR.DOFEL.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
999   DO 1020 I=1,DOFEL
      IF (G(I).EQ.0) GO TO 1020
      DO 1010 J=1,DOFEL
      IF (G(J).EQ.0) GO TO 1010
      CD = G(J) - G(I) + CDMAX
      IF (CD.GT.CDMAX) GO TO 1010
      GI = G(I)
      IF(ITEST.EQ.-1) GO TO 888
      IERROR=0
      IF(ISYSK.LT.GI) IERROR=4
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
 888  SYSK(GI,CD) = SYSK(GI,CD) + ELK(I,J)
 1010 CONTINUE
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE ASUSM(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, G, IG,
     *     CDMAX, DOFEL, ITEST)
      INTEGER CD, CDMAX, DOFEL, G, GI, I, IELK, IG, ISYSK,
     *     ITEST, J, JELK, JSYSK, IERROR, ERRMES
      DOUBLE PRECISION ELK, SYSK, SRNAME
      DIMENSION ELK(IELK,JELK), G(IG), SYSK(ISYSK,JSYSK)
      DATA SRNAME /8H ASUSM  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IG.LT.DOFEL) IERROR=4
      IF(IELK.LT.DOFEL.OR.JELK.LT.DOFEL) IERROR=3
      IF(JSYSK.LT.2*CDMAX-1) IERROR=2
      IF(CDMAX.LE.0.OR.DOFEL.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
 999  DO 1020 I=1,DOFEL
      IF (G(I).EQ.0) GO TO 1020
      DO 1010 J=1,DOFEL
      IF (G(J).EQ.0) GO TO 1010
      CD = G(J) - G(I) + CDMAX
      GI = G(I)
      IF(ITEST.EQ.-1) GO TO 888
      IERROR=0
      IF(ISYSK.LT.GI.OR.JSYSK.LT.CD) IERROR=5
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
 888  SYSK(GI,CD) = SYSK(GI,CD) + ELK(I,J)
 1010 CONTINUE
 1020 CONTINUE
      RETURN
      END
      SUBROUTINE ASFUL(SYSK, ISYSK, JSYSK, ELK, IELK, JELK, G, IG,
     *     DOFEL, ITEST)
      INTEGER DOFEL, G, GI, GJ, I, IELK, IG, ITEST,
     *     J, JELK, JSYSK, ERRMES,IERROR
      DOUBLE PRECISION ELK, SYSK,SRNAME
      DIMENSION ELK(IELK,JELK), G(IG), SYSK(ISYSK,JSYSK)
      DATA SRNAME /8H ASFUL  /
      IF(ITEST.EQ.-1) GO TO 999
      IERROR=0
      IF(IG.LT.DOFEL) IERROR=3
      IF(IELK.LT.DOFEL.OR.JELK.LT.DOFEL) IERROR=2
      IF(DOFEL.LE.0) IERROR=1
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
 999   DO 1020 I=1,DOFEL
      IF (G(I).EQ.0) GO TO 1020
      DO 1010 J=1,DOFEL
      IF (G(J).EQ.0) GO TO 1010
      GI = G(I)
      GJ = G(J)
      IF(ITEST.EQ.-1) GO TO 888
      IERROR=0
      IF(ISYSK.LT.GI.OR.JSYSK.LT.GJ) IERROR=4
      ITEST=ERRMES(ITEST,IERROR,SRNAME)
      IF(ITEST.NE.0) RETURN
 888  SYSK(GI,GJ) = SYSK(GI,GJ) + ELK(I,J)
 1010 CONTINUE
 1020 CONTINUE
      RETURN
      END
      DOUBLE PRECISION FUNCTION VEPS(X)
      DOUBLE PRECISION X
      VEPS = 0.14211D-13
      RETURN
      END
      DOUBLE PRECISION FUNCTION UNFLO(X)
      DOUBLE PRECISION X
      UNFLO = 0.10381D-75
      RETURN
      END
      DOUBLE PRECISION FUNCTION OVFLO(X)
      DOUBLE PRECISION X
      OVFLO = 0.20798D+75
      RETURN
      END
      DOUBLE PRECISION FUNCTION VTOL(X)
      DOUBLE PRECISION X
      VTOL = UNFLO(X)/VEPS(X)
      RETURN
      END
      INTEGER FUNCTION ERRMES(ITEST, IERROR, SRNAME)
      INTEGER IERROR, ITEST, NOUT
      DOUBLE PRECISION SRNAME
      DATA NOUT /6/
      IF (ITEST.EQ.1 .OR. IERROR.EQ.0) GO TO 1010
C                            HARD FAILURE
      WRITE (NOUT,9010) SRNAME, IERROR
      STOP
C                            SOFT FAIL
 1010 ERRMES = IERROR
      RETURN
 9010 FORMAT (43H ERROR DETECTED BY LEVEL 0 LIBRARY ROUTINE , A8,
     *     11H - ITEST = , I5//)
      END
      INTEGER FUNCTION MAXINT(N)
      INTEGER N
      MAXINT=2147483647
      RETURN
      END
