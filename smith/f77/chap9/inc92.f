      PROGRAM P92
C
C       PROGRAM 9.2 BIOT CONSOLIDATION OF AN ELASTIC SOLID IN PLANE
C       STRAIN USING 4-NODE QUADRILATERALS FOR FLUID PHASE AND
C       8-NODE QUADRILATERALS FOR THE SOLID PHASE
C       INCREMENTAL VERSION
C
C
C       ALTER NEXT LINE TO CHANGE PROBLEM SIZE
C
      PARAMETER(IKV=5000,ILOADS=200,INF=100,INX=10,INY=10,
     +          INO=20,NSTEPS=500,INP=30)
C
      REAL WIDTH(INX),DEPTH(INY),KV(IKV),VAL(INO),
     +LOADS(ILOADS),ANS(ILOADS),RT(INP),RL(INP),AL(NSTEPS),
     +SX(INX,INY,4),SY(INX,INY,4),TXY(INX,INY,4)
      INTEGER NF(INF,3),NO(INO)
C
      REAL DEE(3,3),SAMP(3,2),COORD(8,2),DERIVT(8,2),JAC(2,2),
     +JAC1(2,2),KAY(2,2),DER(2,8),DERIV(2,8),KDERIV(2,8),
     +BEE(3,16),DBEE(3,16),BT(16,3),BTDB(16,16),KM(16,16),ELD(16),
     +EPS(3),SIGMA(3),DTKD(4,4),KP(4,4),KE(20,20),
     +FUN(8),C(16,4),VOLF(16,4),VOL(16),PHILO(4),
     +FUNF(4),COORDF(4,2),DERF(2,4),DERIVF(2,4),PHI0(4)
      INTEGER G(20)
C
      DATA IJAC,IJAC1,IKAY,IDER,IDERIV,IKDERV,IT,IDERF,IDERVF/9*2/
      DATA IDEE,ISAMP,IBEE,IDBEE,NODOF,IH/6*3/
      DATA ICORDF,IDTKD,IKP,NODF/4*4/
      DATA ICOORD,IDERVT,NOD/3*8/,IBT,IBTDB,IKM,IC,IVOLF,IDOF/6*16/
      DATA IKE,IKD,ITOT/3*20/
C
C      INPUT AND INITIALISATION
C
      READ(5,*)NXE,NYE,N,IW,NN,NR,NGP,PERMX,PERMY,E,V,DTIM,ISTEP,THETA
      READ(5,*)(WIDTH(I),I=1,NXE+1)
      READ(5,*)(DEPTH(I),I=1,NYE+1)
      CALL READNF(NF,INF,NN,NODOF,NR)
C
C      READ LOAD WEIGHTINGS
C
      READ(5,*)NL,(NO(I),VAL(I),I=1,NL)
C
C      READ NO. OF POINTS IN LOAD/TIME HISTORY (NP)
C
C
C      READ TIME (RT) AND LOAD (RL) FOR LOAD/TIME HISTORY
C
      READ(5,*)NP
      DO 1 I=1,NP
    1 READ(5,*)RT(I),RL(I)
      CALL LFUNC(RT,RL,NP,DTIM,AL,NTP)
C
      IR=N*(IW+1)
      CALL NULVEC(ANS,N)
      CALL NULVEC(KV,IR)
      CALL FMDEPS(DEE,IDEE,E,V)
      CALL NULL(KAY,IKAY,IT,IT)
      KAY(1,1)=PERMX
      KAY(2,2)=PERMY
      CALL GAUSS(SAMP,ISAMP,NGP)
C
C      ELEMENT MATRIX INTEGRATION AND ASSEMBLY
C
      DO 10 IP=1,NXE
      DO 10 IQ=1,NYE
      CALL GEOUVP(IP,IQ,NXE,WIDTH,DEPTH,COORD,ICOORD,COORDF,ICORDF,
     +            G,NF,INF)
      CALL NULL(KM,IKM,IDOF,IDOF)
      CALL NULL(C,IC,IDOF,NODF)
      CALL NULL(KP,IKP,NODF,NODF)
      IG=0
      DO 20 I=1,NGP
      DO 20 J=1,NGP
      IG=IG+1
      SX(IP,IQ,IG)=0.
      SY(IP,IQ,IG)=0.
      TXY(IP,IQ,IG)=0.
      CALL FMQUAD(DER,IDER,FUN,SAMP,ISAMP,I,J)
      CALL MATMUL(DER,IDER,COORD,ICOORD,JAC,IJAC,IT,NOD,IT)
      CALL TWOBY2(JAC,IJAC,JAC1,IJAC1,DET)
      CALL MATMUL(JAC1,IJAC1,DER,IDER,DERIV,IDERIV,IT,IT,NOD)
      CALL NULL(BEE,IBEE,IH,IDOF)
      CALL FORMB(BEE,IBEE,DERIV,IDERIV,NOD)
      CALL VOL2D(BEE,IBEE,VOL,NOD)
      CALL MATMUL(DEE,IDEE,BEE,IBEE,DBEE,IDBEE,IH,IH,IDOF)
      CALL MATRAN(BT,IBT,BEE,IBEE,IH,IDOF)
      CALL MATMUL(BT,IBT,DBEE,IDBEE,BTDB,IBTDB,IDOF,IH,IDOF)
      QUOT=DET*SAMP(I,2)*SAMP(J,2)
      CALL MSMULT(BTDB,IBTDB,QUOT,IDOF,IDOF)
      CALL MATADD(KM,IKM,BTDB,IBTDB,IDOF,IDOF)
C
C      FLUID CONTRIBUTION
C
      CALL FORMLN(DERF,IDERF,FUNF,SAMP,ISAMP,I,J)
      CALL MATMUL(DERF,IDERF,COORDF,ICORDF,JAC,IJAC,IT,NODF,IT)
      CALL TWOBY2(JAC,IJAC,JAC1,IJAC1,DET)
      CALL MATMUL(JAC1,IJAC1,DERF,IDERF,DERIVF,IDERVF,IT,IT,NODF)
      CALL MATMUL(KAY,IKAY,DERIVF,IDERVF,KDERIV,IKDERV,IT,IT,NODF)
      CALL MATRAN(DERIVT,IDERVT,DERIVF,IDERVF,IT,NODF)
      CALL MATMUL(DERIVT,IDERVT,KDERIV,IKDERV,DTKD,IDTKD,NODF,IT,NODF)
      QUOT=DET*SAMP(I,2)*SAMP(J,2)
      PROD=QUOT*DTIM
      CALL MSMULT(DTKD,IDTKD,PROD,NODF,NODF)
      CALL MATADD(KP,IKP,DTKD,IDTKD,NODF,NODF)
      CALL VVMULT(VOL,FUNF,VOLF,IVOLF,IDOF,NODF)
      CALL MSMULT(VOLF,IVOLF,QUOT,IDOF,NODF)
      CALL MATADD(C,IC,VOLF,IVOLF,IDOF,NODF)
   20 CONTINUE
      CALL FORMKE(KM,IKM,KP,IKP,C,IC,KE,IKE,IDOF,NODF,ITOT,THETA)
      CALL FORMKV(KV,KE,IKE,G,N,ITOT)
   10 CONTINUE
C
C      REDUCE LEFT HAND SIDE
C
      CALL BANRED(KV,N,IW)
C
C      TIME STEPPING LOOP
C
      DO 40 NS=1,ISTEP
      CALL NULVEC(LOADS,N)
      DO 11 IP=1,NXE
      DO 11 IQ=1,NYE
      CALL GEOUVP(IP,IQ,NXE,WIDTH,DEPTH,COORD,ICOORD,COORDF,ICORDF,
     +            G,NF,INF)
      CALL NULL(KP,IKP,NODF,NODF)
      DO 21 I=1,NGP
      DO 21 J=1,NGP
      CALL FORMLN(DERF,IDERF,FUNF,SAMP,ISAMP,I,J)
      CALL MATMUL(DERF,IDERF,COORDF,ICORDF,JAC,IJAC,IT,NODF,IT)
      CALL TWOBY2(JAC,IJAC,JAC1,IJAC1,DET)
      CALL MATMUL(JAC1,IJAC1,DERF,IDERF,DERIVF,IDERVF,IT,IT,NODF)
      CALL MATMUL(KAY,IKAY,DERIVF,IDERVF,KDERIV,IKDERV,IT,IT,NODF)
      CALL MATRAN(DERIVT,IDERVT,DERIVF,IDERVF,IT,NODF)
      CALL MATMUL(DERIVT,IDERVT,KDERIV,IKDERV,DTKD,IDTKD,NODF,IT,NODF)
      QUOT=DET*SAMP(I,2)*SAMP(J,2)*DTIM
      CALL MSMULT(DTKD,IDTKD,QUOT,NODF,NODF)
      CALL MATADD(KP,IKP,DTKD,IDTKD,NODF,NODF)
   21 CONTINUE
      DO 12 M=IDOF+1,ITOT
      IF(G(M).EQ.0)PHI0(M-IDOF)=0.
   12 IF(G(M).NE.0)PHI0(M-IDOF)=ANS(G(M))
      CALL MVMULT(KP,IKP,PHI0,NODF,NODF,PHILO)
      DO 22 M=IDOF+1,ITOT
      IF(G(M).EQ.0)GOTO 22
      LOADS(G(M))=LOADS(G(M))+PHILO(M-IDOF)
   22 CONTINUE
   11 CONTINUE
C
C      RAMP LOADING
C
      DO 41 I=1,NL
   41 LOADS(NO(I))=VAL(I)*AL(NS)
      CALL BACSUB(KV,LOADS,N,IW)
      CALL VECADD(ANS,LOADS,ANS,N)
      CALL PRINTV(ANS,N)
      WRITE(6,*)
C
C      RECOVER ELEMENT EFFECTIVE STRESSES AT ELEMENT 'CENTRES'
C
      NGP=1
      CALL GAUSS(SAMP,ISAMP,NGP)
      DO 50 IP=1,NXE
      DO 50 IQ=1,NYE
      CALL GEOUVP(IP,IQ,NXE,WIDTH,DEPTH,COORD,ICOORD,COORDF,ICORDF,
     +            G,NF,INF)
      DO 60 M=1,IDOF
      IF(G(M).EQ.0)ELD(M)=0.
   60 IF(G(M).NE.0)ELD(M)=LOADS(G(M))
      IG=0
      DO 70 I=1,NGP
      DO 70 J=1,NGP
      IG=IG+1
      CALL FMQUAD(DER,IDER,FUN,SAMP,ISAMP,I,J)
      CALL MATMUL(DER,IDER,COORD,ICOORD,JAC,IJAC,IT,NOD,IT)
      CALL TWOBY2(JAC,IJAC,JAC1,IJAC1,DET)
      CALL MATMUL(JAC1,IJAC1,DER,IDER,DERIV,IDERIV,IT,IT,NOD)
      CALL NULL(BEE,IBEE,IH,IDOF)
      CALL FORMB(BEE,IBEE,DERIV,IDERIV,NOD)
      CALL MVMULT(BEE,IBEE,ELD,IH,IDOF,EPS)
      CALL MVMULT(DEE,IDEE,EPS,IH,IH,SIGMA)
      SX(IP,IQ,IG)=SX(IP,IQ,IG)+SIGMA(1)
      SY(IP,IQ,IG)=SY(IP,IQ,IG)+SIGMA(2)
      TXY(IP,IQ,IG)=TXY(IP,IQ,IG)+SIGMA(3)
      WRITE(6,'(3E12.4)')SX(IP,IQ,IG),SY(IP,IQ,IG),TXY(IP,IQ,IG)
   70 CONTINUE
   50 CONTINUE
      WRITE(6,*)
   40 CONTINUE
      STOP
      END
C
      SUBROUTINE LFUNC(RT,RL,NP,DTIM,AL,NTP)
C
C      THIS SUBROUTINE FORMS THE LOAD (OR DISPLACEMENT)-TIME
C      FUNCTION AT INTERVALS OF THE CALCULATION TIME STEP DTIM
C
      REAL RT(*),RL(*),AL(*)
      NTP=NINT(RT(NP)/DTIM)
      AOLD=RL(1)
      DT=RT(1)
      J=2
      DO 10 I=1,NTP
      DT=DT+DTIM
   20 IF(DT/RT(J).LT.1.0000001)THEN
      ANEW=RL(J-1)+(DT-RT(J-1))*(RL(J)-RL(J-1))/(RT(J)-RT(J-1))
      AL(I)=ANEW-AOLD
      AOLD=ANEW
      ELSE
      J=J+1
      GOTO 20
      END IF
   10 CONTINUE
      RETURN
      END
C
      SUBROUTINE
     +FORMKE(KM,IKM,KP,IKP,C,IC,KE,IKE,IDOF,NODF,ITOT,THETA)
C
C      THIS SUBROUTINE FORMS THE ELEMENT COUPLED STIFFNESS
C      MATRICES KE FROM THE ELASTIC STIFFNESS KM,
C      THE FLUID 'STIFFNESS' KP AND COUPLING MATRIX C
C
      REAL KM(IKM,*),KP(IKP,*),C(IC,*),KE(IKE,*)
      DO 11 I=1,IDOF
      DO 12 J=1,IDOF
   12 KE(I,J)=KM(I,J)
      DO 13 K=1,NODF
      KE(I,IDOF+K)=C(I,K)
   13 KE(IDOF+K,I)=C(I,K)
   11 CONTINUE
      DO 14 I=1,NODF
      DO 14 K=1,NODF
   14 KE(IDOF+I,IDOF+K)=-KP(I,K)*THETA
      RETURN
      END
