C***********************************************************************
C***********************************************************************
C
C    COPYRIGHT (C) 1987 : SERC, RUTHERFORD APPLETON LABORATORY
C                         CHILTON, DIDCOT, OXFORDSHIRE OX11 0QX
C
      INTEGER BDCND, BLIST, BTYPE, DIMEN, DOFEL, DOFNOD, ELNUM,
     *     ELTOP, ELTYP, HBAND, I, IABSS, IBDCND, IBELM, IBELV,
     *     IBLIST, IBN, IBNTN, ICOORD, ICOSIN, IDTPD, IELC,
     *     IELD, IELK, IELM, IELTOP, IFTF, IFUN, IGDER, IGDERT,
     *     IGEOM, IJAC, IJACIN, ILABSS, ILDER, ILOWER, INF,
     *     INTNOD, INTVD, IP, IPD, IQUAD, IRHS, IROPIV, ISTEER,
     *     ISYSK, ISYSM, ITEST, ITYPE, IVEL, IVGDER, IWGHT,
     *     IWORK1, IWORK2, J, JABSS, JBDCND, JBELM, JBLIST,
     *     JBNTN, JCOORD, JDTPD, JELC, JELD, JELK, JELM, JELTOP,
     *     JFTF, JGDER, JGDERT, JGEOM, JJAC, JJACIN, JLDER,
     *     JLOWER, JNF, JNTVD, JP, JPD, JSYSK, JSYSM, K, L,
     *     M, NELE, NF, NIN, NODEL, NODNUM, NODSID, NOUT, NQP,
     *     NSTEPS, NUMNOD, NUMSID, ROPIV, SIDNUM, STEER, TOTBND,
     *     TOTDOF, TOTELS, TOTNOD, WIDTH
      DOUBLE PRECISION ABSS, BELM, BELV, BN, BNTN, COEFF, CONST1,
     *     CONST2, COORD, COSIN, DET, DTIM, DTPD, ELC, ELD,
     *     ELK, ELM, ETA, FTF, FUN, GDER, GDERT, GEOM, JAC,
     *     JACIN, LABSS, LDER, LOWER, NTVD, P, PD, QUOT, RHS,
     *     SCALE, SYSK, SYSM, THETA, ULEN, VALUE, VEL, VGDER,
     *     WGHT, WORK1, WORK2, XI
      DIMENSION ABSS(3,9), BELM(8,8), BELV(8), BN(8),
     *     BNTN(8,8), COSIN(3), DTPD(8,8), ELC(8,8), ELD(8,8),
     *     ELK(8,8), ELM(8,8), FTF(8,8), FUN(8), GDER(3,8),
     *     GDERT(8,3), GEOM(8,3), JAC(3,3), JACIN(3,3),
     *     LABSS(3), LDER(3,8), NTVD(8,8), P(3,3), PD(3,8),
     *     STEER(8), VEL(8), VGDER(8), WGHT(9)
C
C                            PROBLEM SIZE DEPENDENT ARRAYS
C
      DIMENSION BDCND(5,40), BLIST(20,2), COORD(100,3),
     *     ELTOP(100,10), LOWER(100,25), NF(100,1), RHS(100),
     *     ROPIV(100), SYSK(100,25), SYSM(100,25), WORK1(100),
     *     WORK2(100)
C
      DATA IABSS /3/, IBELM /8/, IBELV /8/, IBN /8/, IBNTN /8/,
     *     ICOSIN /3/, IDTPD /8/, IELC /8/, IELD /8/, IELK /8/,
     *     IELM /8/, IFTF /8/, IFUN /8/, IGDER /3/, IGDERT /8/,
     *     IGEOM /8/, IJAC /3/, IJACIN /3/, ILABSS /3/,
     *     ILDER /3/, INTVD /8/, IP /3/, IPD /3/, ISTEER /8/,
     *     IVEL /8/, IVGDER /8/, IWGHT /9/, JABSS /9/, JBELM /8/,
     *     JBNTN /8/, JCOORD /3/, JDTPD /8/, JELC /8/, JELD /8/,
     *     JELK /8/, JELM /8/, JFTF /8/, JGDER /8/, JGDERT /3/,
     *     JGEOM /3/, JJAC /3/, JJACIN /3/, JLDER /8/, JNF /1/,
     *     JNTVD /8/, JP /3/, JPD /8/, SCALE /1.0D+10/
C
C                            PROBLEM SIZE DEPENDENT DATA STATEMENTS
C
      DATA IBDCND /5/, IBLIST /20/, ICOORD /100/, IELTOP /100/,
     *     ILOWER /100/, INF /100/, IRHS /100/, IROPIV /100/,
     *     ISYSK /100/, ISYSM /100/, IWORK1 /100/, IWORK2 /100/,
     *     JBDCND /40/, JBLIST /2/, JELTOP /10/, JLOWER /25/,
     *     JSYSK /25/, JSYSM /25/
C
      DATA NIN /5/, NOUT /6/
C
C                            SET ITEST FOR FULL CHECKING
C
      ITEST = 0
C
C*                           **********************
C*                           *                    *
C*                           * INPUT DATA SECTION *
C*                           *                    *
C*                           **********************
C
C                            INPUT OF NODAL GEOMETRY
C
      WRITE (NOUT,9010)
      READ (NIN,8010) TOTNOD, DIMEN
      WRITE (NOUT,9020) TOTNOD, DIMEN
C
      IF (TOTNOD.GT.0 .AND. TOTNOD.LE.ICOORD) GO TO 1010
      WRITE (NOUT,9030)
      STOP
C
 1010 DO 1020 I=1,TOTNOD
      READ (NIN,8020) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
      WRITE (NOUT,9040) NODNUM, (COORD(NODNUM,J),J=1,DIMEN)
 1020 CONTINUE
C
C                            INPUT OF ELEMENT TOPOLOGY
C
      WRITE (NOUT,9050)
      READ (NIN,8010) TOTELS
      WRITE (NOUT,9020) TOTELS
C
      IF (TOTELS.GT.0 .AND. TOTELS.LE.IELTOP) GO TO 1030
      WRITE (NOUT,9060)
      STOP
C
 1030 DO 1040 I=1,TOTELS
      READ (NIN,8010) ELNUM, ELTYP, NODEL, (ELTOP(ELNUM,J+2),J=1,
     *     NODEL)
      WRITE (NOUT,9020) ELNUM, ELTYP, NODEL, (ELTOP(ELNUM,J+2),J=1,
     *     NODEL)
      ELTOP(ELNUM,1) = ELTYP
      ELTOP(ELNUM,2) = NODEL
 1040 CONTINUE
C
C                            INPUT OF PERMEABILITIES AND CON-
C                            STRUCTION OF PERMEABILITY MATRIX P
C
      WRITE (NOUT,9070)
      CALL MATNUL(P, IP, JP, DIMEN, DIMEN, ITEST)
      READ (NIN,8030) (P(I,I),I=1,DIMEN)
      WRITE (NOUT,9080) (P(I,I),I=1,DIMEN)
C
C                            INPUT OF CONVECTION VELOCITIES
C
      WRITE (NOUT,9090)
      READ (NIN,8030) (VEL(I),I=1,DIMEN)
      WRITE (NOUT,9080) (VEL(I),I=1,DIMEN)
C
C                            INPUT OF BOUNDARY CONDITIONS (BTYPE =
C                            1 (NEUMANN) OR 2 (CAUCHY))
C
      WRITE (NOUT,9100)
      READ (NIN,8030) CONST1, CONST2
      WRITE (NOUT,9080) CONST1, CONST2
C
      READ (NIN,8010) TOTBND
      WRITE (NOUT,9020) TOTBND
C
      IF (TOTBND.EQ.0) GO TO 1070
      IF (TOTBND.LE.IBDCND) GO TO 1050
      WRITE (NOUT,9110)
      STOP
C
 1050 DO 1060 I=1,TOTBND
      READ (NIN,8010) BTYPE, NUMNOD, NODSID, (BDCND(I,J+3),J=1,
     *     NUMNOD)
      WRITE (NOUT,9020) BTYPE, NUMNOD, NODSID,
     *     (BDCND(I,J+3),J=1,NUMNOD)
      BDCND(I,1) = BTYPE
      BDCND(I,2) = NUMNOD
      BDCND(I,3) = NODSID
 1060 CONTINUE
C
C                            INPUT NUMBER OF DEGREES OF FREEDOM PER
C                            NODE AND FORM NODAL FREEDOM ARRAY
C
 1070 READ (NIN,8010) DOFNOD
      WRITE (NOUT,9020) DOFNOD
      TOTDOF = 0
      DO 1090 I=1,TOTNOD
      DO 1080 J=1,DOFNOD
      TOTDOF = TOTDOF + 1
      NF(I,J) = TOTDOF
 1080 CONTINUE
 1090 CONTINUE
C
C                            INPUT OF INITIAL CONDITIONS
C
      WRITE (NOUT,9120)
      CALL VECNUL(RHS, IRHS, TOTDOF, ITEST)
      READ (NIN,8010) INTNOD
      WRITE (NOUT,9020) INTNOD
C
      IF (INTNOD.EQ.0) GO TO 1110
      DO 1100 I=1,INTNOD
      READ (NIN,8020) NODNUM, VALUE
      WRITE (NOUT,9130) NODNUM, VALUE
      J = NF(NODNUM,1)
      RHS(J) = VALUE
 1100 CONTINUE
C
C                            INPUT OF TIME STEPPING DATA
C
 1110 WRITE (NOUT,9140)
      READ (NIN,8020) NSTEPS, DTIM, THETA
      WRITE (NOUT,9130) NSTEPS, DTIM, THETA
C
C                            CALCULATION OF SEMI-BANDWIDTH
C
C
      CALL BNDWTH(ELTOP, IELTOP, JELTOP, NF, INF, JNF, DOFNOD,
     *     TOTELS, HBAND, ITEST)
      IF (HBAND.LE.JSYSK) GO TO 1120
      WRITE (NOUT,9150) HBAND, JSYSK
      STOP
C
C*                           ************************************
C*                           *                                  *
C*                           * SYSTEM STIFFNESS MATRIX ASSEMBLY *
C*                           *                                  *
C*                           ************************************
C
C                            INITIALISATION OF ARRAYS
C
 1120 CALL MATNUL(SYSK, ISYSK, JSYSK, TOTDOF, 2*HBAND-1, ITEST)
      CALL MATNUL(SYSM, ISYSM, JSYSM, TOTDOF, 2*HBAND-1, ITEST)
      CALL QQUA4(WGHT, IWGHT, ABSS, IABSS, JABSS, NQP, ITEST)
C
      DO 1160 NELE=1,TOTELS
      NODEL = ELTOP(NELE,2)
      DOFEL = NODEL*DOFNOD
      CALL ELGEOM(NELE, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
C
C                            INTEGRATION LOOP FOR ELEMENT MATRICES
C                            USING NQP QUADRATURE POINTS
C
      CALL MATNUL(ELM, IELM, JELM, DOFEL, DOFEL, ITEST)
      CALL MATNUL(ELD, IELD, JELD, DOFEL, DOFEL, ITEST)
      CALL MATNUL(ELC, IELC, JELC, DOFEL, DOFEL, ITEST)
      DO 1150 IQUAD=1,NQP
C
C                            FORM SHAPE FUNCTION AND SPACE
C                            DERIVATIVES IN THE LOCAL COORDINATES.
C                            TRANSFORM LOCAL DERIVATIVES TO GLOBAL
C                            COORDINATE SYSTEM
C
      XI = ABSS(1,IQUAD)
      ETA = ABSS(2,IQUAD)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
      CALL MATMUL(LDER, ILDER, JLDER, GEOM, IGEOM, JGEOM, JAC,
     *     IJAC, JJAC, DIMEN, NODEL, DIMEN, ITEST)
      CALL MATINV(JAC, IJAC, JJAC, JACIN, IJACIN, JJACIN, DIMEN,
     *     DET, ITEST)
      CALL MATMUL(JACIN, IJACIN, JJACIN, LDER, ILDER, JLDER, GDER,
     *     IGDER, JGDER, DIMEN, DIMEN, NODEL, ITEST)
C
C                            FORM INTEGRAND OF ELEMENT DIFFUSION
C                            MATRIX ELD
C
      CALL MATMUL(P, IP, JP, GDER, IGDER, JGDER, PD, IPD, JPD,
     *     DIMEN, DIMEN, DOFEL, ITEST)
      CALL MATRAN(GDER, IGDER, JGDER, GDERT, IGDERT, JGDERT,
     *     DIMEN, DOFEL, ITEST)
      CALL MATMUL(GDERT, IGDERT, JGDERT, PD, IPD, JPD, DTPD,
     *     IDTPD, JDTPD, DOFEL, DIMEN, DOFEL, ITEST)
C
C                            FORM INTEGRAND OF ELEMENT MASS MATRIX
C                            ELM
C
      CALL DYAD(FUN, IFUN, FUN, IFUN, FTF, IFTF, JFTF, NODEL,
     *     ITEST)
C
C                            FORM INTEGRAND OF ELEMENT CONVECTION
C                            MATRIX ELC
C
      CALL VECMAT(VEL, IVEL, GDER, IGDER, JGDER, DIMEN, NODEL,
     *     VGDER, IVGDER, ITEST)
      CALL DYAD(FUN, IFUN, VGDER, IVGDER, NTVD, INTVD, JNTVD,
     *     NODEL, ITEST)
      QUOT = DABS(DET)*WGHT(IQUAD)
      DO 1140 I=1,DOFEL
      DO 1130 J=1,DOFEL
      DTPD(I,J) = DTPD(I,J)*QUOT
      FTF(I,J) = FTF(I,J)*QUOT
      NTVD(I,J) = NTVD(I,J)*QUOT
 1130 CONTINUE
 1140 CONTINUE
      CALL MATADD(ELM, IELM, JELM, FTF, IFTF, JFTF, DOFEL, DOFEL,
     *     ITEST)
      CALL MATADD(ELD, IELD, JELD, DTPD, IDTPD, JDTPD, DOFEL,
     *     DOFEL, ITEST)
      CALL MATADD(ELC, IELC, JELC, NTVD, INTVD, JNTVD, DOFEL,
     *     DOFEL, ITEST)
 1150 CONTINUE
C
C                            ASSEMBLY OF SYSTEM MATRICES
C
      CALL DIRECT(NELE, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      CALL ASUSM(SYSM, ISYSM, JSYSM, ELM, IELM, JELM, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
      CALL ASUSM(SYSK, ISYSK, JSYSK, ELD, IELD, JELD, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
      CALL ASUSM(SYSK, ISYSK, JSYSK, ELC, IELC, JELC, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
 1160 CONTINUE
C
C*                           *************************************
C*
C*                           *
C*
C*                           * APPLICATION OF BOUNDARY CONDITIONS
C*
C*                           *
C*
C*                           *************************************
C*
C*
C
      CALL QLIN2(WGHT, IWGHT, LABSS, ILABSS, NQP, ITEST)
      CALL VECNUL(WORK1, IWORK1, TOTDOF, ITEST)
C
C                            LOOP AROUND BOUNDARIES
C
      DO 1260 ITYPE=1,TOTBND
      BTYPE = BDCND(ITYPE,1) - 1
      NUMNOD = BDCND(ITYPE,2)
      CALL SIDENO(TOTELS, ELTOP, IELTOP, JELTOP, ITYPE, BDCND,
     *     IBDCND, JBDCND, NUMSID, BLIST, IBLIST, JBLIST, ITEST)
C
      DO 1250 M=1,NUMSID
      ELNUM = BLIST(M,1)
      SIDNUM = BLIST(M,2)
      CALL VECNUL(BELV, IBELV, DOFEL, ITEST)
      CALL MATNUL(BELM, IBELM, JBELM, DOFEL, DOFEL, ITEST)
C
C                            CONSTRUCT QUADRATURE RULE AND LOCAL
C                            GEOMETRY
C
      CALL ELGEOM(ELNUM, ELTOP, IELTOP, JELTOP, COORD, ICOORD,
     *     JCOORD, GEOM, IGEOM, JGEOM, DIMEN, ITEST)
      CALL BQQUA(ABSS, IABSS, JABSS, LABSS, ILABSS, NQP, SIDNUM,
     *     COEFF, ITEST)
      DO 1220 J=1,NQP
      XI = ABSS(1,J)
      ETA = ABSS(2,J)
      CALL QUAM4(FUN, IFUN, LDER, ILDER, JLDER, XI, ETA, ITEST)
      CALL LINQUA(XI, ETA, GEOM, IGEOM, JGEOM, NODEL, SIDNUM,
     *     ULEN, ITEST)
      QUOT = ULEN*WGHT(J)*COEFF
      GO TO (1170, 1190), BTYPE
C
C                            NEUMANN CONDITIONS (BOTTOM OF COLUMN)
C
 1170 DO 1180 K=1,DOFEL
      BN(K) = CONST1*VEL(2)*FUN(K)*QUOT
 1180 CONTINUE
      CALL VECADD(BELV, IBELV, BN, IBN, DOFEL, ITEST)
      GO TO 1220
C
C                            CAUCHY CONDITIONS (TOP OF COLUMN)
C
 1190 DO 1210 K=1,DOFEL
      DO 1200 L=1,DOFEL
      BNTN(K,L) = CONST2*VEL(2)*FUN(K)*FUN(L)*QUOT
 1200 CONTINUE
 1210 CONTINUE
      CALL MATADD(BELM, IBELM, JBELM, BNTN, IBNTN, JBNTN, DOFEL,
     *     DOFEL, ITEST)
 1220 CONTINUE
C
C                            ASSEMBLY OF BOUNDARY CONDITIONS
C
      CALL DIRECT(ELNUM, ELTOP, IELTOP, JELTOP, NF, INF, JNF,
     *     DOFNOD, STEER, ISTEER, ITEST)
      GO TO (1230, 1240), BTYPE
 1230 CALL ASRHS(WORK1, IWORK1, BELV, IBELV, STEER, ISTEER, NODEL,
     *     ITEST)
      GO TO 1250
 1240 CALL ASUSM(SYSK, ISYSK, JSYSK, BELM, IBELM, JBELM, STEER,
     *     ISTEER, HBAND, DOFEL, ITEST)
 1250 CONTINUE
 1260 CONTINUE
C
C*                           *********************
C*                           *                   *
C*                           * EQUATION SOLUTION *
C*                           *                   *
C*                           *********************
C
C                            STEPPING SCHEME
C
      WIDTH = 2*HBAND - 1
      DO 1280 I=1,TOTDOF
      DO 1270 J=1,WIDTH
      WORK2(1) = THETA*SYSK(I,J) + SYSM(I,J)/DTIM
      WORK2(2) = (1.0D0-THETA)*SYSK(I,J) - SYSM(I,J)/DTIM
      SYSK(I,J) = WORK2(1)
      SYSM(I,J) = -WORK2(2)
 1270 CONTINUE
 1280 CONTINUE
C
C                            REDUCE ASYMMETRIC SYSTEM MATRIX SYSK
C
      CALL GAURDN(SYSK, ISYSK, JSYSK, LOWER, ILOWER, JLOWER,
     *     TOTDOF, HBAND, ROPIV, IROPIV, ITEST)
C
C                            PREFORM TIME STEPS
C
      DO 1290 I=1,NSTEPS
      WRITE (NOUT,9160) I
      CALL MVUSB(SYSM, ISYSM, JSYSM, RHS, IRHS, WORK2, IWORK2,
     *     TOTDOF, HBAND, ITEST)
      CALL VECADD(WORK2, IWORK2, WORK1, IWORK1, TOTDOF, ITEST)
      CALL GAUSUB(SYSK, ISYSK, JSYSK, LOWER, ILOWER, JLOWER,
     *     TOTDOF, HBAND, ROPIV, IROPIV, WORK2, IWORK2, ITEST)
      CALL VECCOP(WORK2, IWORK2, RHS, IRHS, TOTDOF, ITEST)
      CALL PRTVAL(RHS, IRHS, NF, INF, JNF, DOFNOD, TOTNOD, NOUT,
     *     ITEST)
 1290 CONTINUE
      STOP
C
 8010 FORMAT (16I5)
 8020 FORMAT (I5, 3F10.0)
 8030 FORMAT (3F10.0)
 9010 FORMAT (//25H **** NODAL GEOMETRY ****/1H )
 9020 FORMAT (1H , 16I5)
 9030 FORMAT (45H *** ERROR : TOTNOD.LE.0 OR TOTONOD.GT.ICOORD)
 9040 FORMAT (1H , I5, 3F10.5)
 9050 FORMAT (//27H **** ELEMENT TOPOLOGY ****/1H )
 9060 FORMAT (44H *** ERROR : TOTELS.LE.0 OR TOTELS.GT.IELTOP)
 9070 FORMAT (//25H **** PERMEABILITIES ****/1H )
 9080 FORMAT (1H , 3D10.3)
 9090 FORMAT (//27H **** CONVECTION VELOCITIES/1H )
 9100 FORMAT (//30H **** BOUNDARY CONDITIONS ****/1H )
 9110 FORMAT (29H *** ERROR : TOTBND.GT.IBDCND)
 9120 FORMAT (//29H **** INITIAL CONDITIONS ****/1H )
 9130 FORMAT (1H , I5, 3F10.5)
 9140 FORMAT (//29H **** TIME STEPPING DATA ****/1H )
 9150 FORMAT (41H ***ERROR : BANDWIDTH TO LARGE - HBAND = , I5,
     *     13H AND JSYSK = , I5)
 9160 FORMAT (//36H NODAL CONCENTRATIONS FOR TIME STEP , I5)
      END
C***********************************************************************
