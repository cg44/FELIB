C***********************************************************************
      SUBROUTINE FORMNF(REST, IREST, JREST, RESNOD, TOTNOD,
     *     DOFNOD, NF, INF, JNF, TOTDOF, ITEST)
C-----------------------------------------------------------------------
C PURPOSE
C      CONSTRUCTS THE NODAL FREEDOM ARRAY FROM THE RESTRAINED
C      FREEDOM DATA
C
C HISTORY
C
C      COPYRIGHT (C) 1997 : CLRC, RUTHERFORD APPLETON LABORATORY
C                           CHILTON, DIDCOT, OXFORDSHIRE OX11 0QX
C
C      RELEASE 1.1  29 OCT 1979 (IMS)
C      COMMENTED    18 FEB 1980 (KR)
C      RECODED      01 NOV 1981 (NB)
C
C ARGUMENTS IN
C      REST    INTEGER ARRAY; REST(I,J) CONTAINS THE I'TH SET
C              OF RESTRAINT INFORMATION - REST(I,1) CONTAINS
C              THE NODE NUMBER, REST(I,J+1) FOR J=1(1)DOFNOD
C              CONTAINS THE LOCAL FREEDOM NUMBERS OF THE
C              FREEDOMS THAT ARE RESTRAINED
C      IREST   FIRST DIMENSION OF ARRAY REST (.GE. RESNOD)
C      JREST   SECOND DIMENSION OF REST (.GE. DOFNOD)
C      RESNOD  NUMBER OF NODES AT WHICH FREEDOMS ARE RESTRAINED
C      TOTNOD  TOTAL NUMBER OF NODES IN MESH
C      INF     FIRST DIMENSION OF ARRAY INF (.GE. TOTNOD)
C      JNF     SECOND DIMENSION OF INF (.GE. DOFNOD)
C      ITEST   ERROR CHECKING OPTION
C
C ARGUMENTS OUT
C      NF      NF(I,J), J=1(1)DOFNOD, CONTAINS THE FREEDOM
C              NUMBERS ASSOCIATED WITH THE I'TH NODE
C      TOTDOF  TOTAL NUMBER OF FREEDOMS IN PROBLEM UNDER
C              CONSIDERATION
C
C ROUTINES CALLED
C      ERRMES
C
C
C     SUBROUTINE FORMNF(REST, IREST, JREST, RESNOD, TOTNOD,
C    *     DOFNOD, NF, INF, JNF, TOTDOF, ITEST)
C***********************************************************************
C
      INTEGER DOFNOD, ERRMES, I, IABS, IERROR, INF, IREST,
     *     ITEST, J, JNF, JREST, JTEST, K, L, M, NF, RESNOD,
     *     REST, TOTDOF, TOTNOD
      DOUBLE PRECISION SRNAME
      LOGICAL SWITCH
      DIMENSION NF(INF,JNF), REST(IREST,JREST)
      DATA SRNAME /8H FORMNF /
C
C     PARAMETER CHECKING
C
      JTEST = ITEST
      IF (JTEST.EQ.-1) GO TO 1010
      IERROR = 0
      IF (INF.LT.TOTNOD .OR. JNF.LT.DOFNOD) IERROR = 3
      IF (IREST.LT.RESNOD .OR. JREST.LT.DOFNOD+1) IERROR = 2
      IF (RESNOD.LT.0 .OR. TOTNOD.LE.0 .OR. DOFNOD.LE.0) IERROR = 1
      ITEST = ERRMES(ITEST,IERROR,SRNAME)
      IF (ITEST.NE.0) RETURN
C
C     MAIN BODY
C
 1010 SWITCH = .TRUE.
C
C     INITIALISE NODEL FREEDOM ARRAY
C
      DO 1030 I=1,TOTNOD
         DO 1020 J=1,DOFNOD
            NF(I,J) = 1
 1020    CONTINUE
 1030 CONTINUE
C
C     IF NO RESTRAINED NODES BRANCH
C
      IF (RESNOD.EQ.0) GO TO 1070
      DO 1060 I=1,RESNOD
         K = REST(I,1)
         DO 1050 J=1,DOFNOD
            L = REST(I,J+1)
            M = IABS(L)
C
C     RANGE CHECKING ON K AND M
C
            IF (JTEST.EQ.-1) GO TO 1040
            IERROR = 0
            IF (K.GT.TOTNOD .OR. M.GT.DOFNOD) IERROR = 4
            ITEST = ERRMES(JTEST,IERROR,SRNAME)
            IF (ITEST.NE.0) RETURN
C
 1040       IF (L.GT.0) NF(K,L) = 0
            IF (L.GE.0) GO TO 1050
            NF(K,M) = L
            SWITCH = .FALSE.
 1050    CONTINUE
 1060 CONTINUE
C
C     RENUMBER NODAL FREEDOM ARRAY
C
 1070 K = 1
      DO 1090 I=1,TOTNOD
         DO 1080 J=1,DOFNOD
            IF (NF(I,J).LE.0) GO TO 1080
            NF(I,J) = K
            K = K + 1
 1080    CONTINUE
 1090 CONTINUE
C
C     SET UP FOR PRESCRIBED VALUES
C
      TOTDOF = K - 1
      IF (SWITCH) RETURN
      DO 1110 I=1,TOTNOD
         DO 1100 J=1,DOFNOD
            IF (NF(I,J).GE.0) GO TO 1100
            NF(I,J) = -K
            K = K + 1
 1100    CONTINUE
 1110 CONTINUE
      RETURN
      END
C***********************************************************************
